{
  "openapi": "3.0.0",
  "info": {
    "title": "exchange-xapi",
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://anypoint.mulesoft.com/exchange/api/v2"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/assets": {
      "x-amf-displayName": "Assets",
      "description": "Represents all the resources under the assets path",
      "x-amf-type": "assetsPost"
    },
    "/assets/search": {
      "x-amf-displayName": "Assets Search",
      "description": "Assets Search",
      "x-amf-type": "assetsSearch"
    },
    "/assets/{groupId}/{assetId}": {
      "x-amf-displayName": "Asset",
      "description": "Asset by groupId and assetId",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ],
      "delete": {
        "description": "Deletes an asset",
        "x-amf-is": [
          "deleteable"
        ],
        "responses": {
          "204": {
            "description": "Asset deleted"
          },
          "409": {
            "description": "There were conflicts while deleting"
          }
        }
      },
      "patch": {
        "operationId": "Updates name and description",
        "description": "Updates asset metadata (name and description)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "object"
                  }
                ],
                "example": {
                  "name": "new asset name",
                  "description": "new asset description"
                },
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "contactName": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "contactEmail": {
                    "type": "string",
                    "maxLength": 255
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/icon": {
      "x-amf-displayName": "Icon",
      "description": "Asset icon",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ],
      "put": {
        "operationId": "Uploads an icon",
        "description": "Uploads an icon as a binary file",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "example": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 19.2.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 26 26\" enable-background=\"new 0 0 26 26\" xml:space=\"preserve\">\n<g id=\"guides\">\n</g>\n<g id=\"white\">\n</g>\n<g id=\"_x31_6_16\" display=\"none\">\n</g>\n<g id=\"content\">\n\t<path fill=\"#00A3E0\" d=\"M20.5492554,17.5856934l1.6424561,1.1501465C20.3830566,21.314209,17.3885498,23,13.999939,23\n\t\tc-4.8378296,0-8.8724365-3.4356689-9.7990723-8H1.9991455v-4h2.2017212c0.9266357-4.5643311,4.9612427-8,9.7990723-8\n\t\tc3.3886108,0,6.3831177,1.685791,8.1917725,4.2641602l-1.6424561,1.1501465C19.1008301,6.3518066,16.7059937,5,13.999939,5\n\t\tC9.5887451,5,6,8.5888672,6,13s3.5887451,8,7.999939,8C16.7059937,21,19.1008301,19.6481934,20.5492554,17.5856934z\"/>\n\t<path fill=\"#087299\" d=\"M24.0009766,12.0136719l-6.1418457-0.0118408C17.4136353,10.2785645,15.8623657,9,14,9\n\t\tc-2.2091064,0-3.999939,1.7907715-3.999939,4c0,2.2091064,1.7908325,4,3.999939,4\n\t\tc1.8660278,0,3.4203491-1.2834473,3.8622437-3.0118408L23.9970703,14L24.0009766,12.0136719z M14,15c-1.1027832,0-2-0.8972168-2-2\n\t\ts0.8972168-2,2-2c1.1028442,0,2,0.8972168,2,2S15.1028442,15,14,15z\"/>\n</g>\n<g id=\"grid\">\n</g>\n</svg>\n"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "assetId": "api-test",
                    "groupId": "59291b3f-c12a-4c84-be4b-19cf19de0475",
                    "classifier": "icon",
                    "packaging": "png",
                    "externalKey": "59291b3f-c12a-4c84-be4b-19cf19de0475/41470514d754ff6ae8906b93540742c8dbaeb44deb88d565f677c47641452870.png",
                    "externalLink": "http://localhost/api-test-1.0.0-icon.png"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete an icon for the whole ga",
        "responses": {
          "204": {
            "description": "Icon deleted"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/public": {
      "x-amf-displayName": "Public Versions",
      "description": "Public asset versions",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ],
      "put": {
        "operationId": "Updates versions visibility",
        "description": "Sets the public versions for the asset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "versionGroup": "v1"
                  },
                  {
                    "versionGroup": "v2"
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "versionGroup"
                  ],
                  "properties": {
                    "versionGroup": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/asset": {
      "x-amf-displayName": "Asset",
      "description": "Asset",
      "x-amf-type": "simpleAsset",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/minorVersions": {
      "x-amf-displayName": "Minor Versions",
      "description": "Asset minor versions",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/minorVersions/{minorVersion}": {
      "x-amf-displayName": "By Minor Version",
      "description": "Asset by minor version",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "minorVersion",
          "description": "Minor version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Minor version",
            "example": "2.22",
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/minorVersions/{minorVersion}/portal": {
      "x-amf-displayName": "Portal Documentation",
      "description": "Asset documentation by minor version",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "minorVersion",
          "description": "Minor version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Minor version",
            "example": "2.22",
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/minorVersions/{minorVersion}/portal/pages": {
      "x-amf-displayName": "Pages",
      "description": "Asset documentation pages by minor version",
      "x-amf-type": "pages",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "minorVersion",
          "description": "Minor version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Minor version",
            "example": "2.22",
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/minorVersions/{minorVersion}/status": {
      "x-amf-displayName": "Status",
      "description": "Asset status by minor version",
      "x-amf-type": "assetStatus",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "minorVersion",
          "description": "Minor version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Minor version",
            "example": "2.22",
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups": {
      "x-amf-displayName": "Version Groups",
      "description": "Version groups of an asset",
      "x-amf-type": "versionGroups",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}": {
      "x-amf-displayName": "By Version Group",
      "description": "Asset by version group",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/apiGroupInstances": {
      "x-amf-displayName": "API Groups Instances",
      "description": "API Groups instances",
      "x-amf-type": "apiGroupInstance",
      "x-amf-is": [
        "pagination"
      ],
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/environments/{environmentId}": {
      "x-amf-displayName": "Environment",
      "description": "A single environment identified by an \"environmentId\"",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "environmentId",
          "description": "The id of the environment for this API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the environment for this API Group instance",
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/environments/{environmentId}/apiGroupInstances/{apiGroupInstanceId}": {
      "x-amf-displayName": "Instance",
      "description": "A single API Group instance identified by a \"apiGroupInstanceId\"",
      "parameters": [
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "apiGroupInstanceId",
          "description": "Id of an API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of an API Group instance",
            "type": "integer",
            "minimum": 0
          }
        },
        {
          "name": "environmentId",
          "description": "The id of the environment for this API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the environment for this API Group instance",
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          }
        }
      ],
      "patch": {
        "operationId": "Updates API Group Visibility",
        "description": "Updates API Group visibility",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "isPublic": true
                },
                "type": "object",
                "required": [
                  "isPublic"
                ],
                "properties": {
                  "isPublic": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "API Group visibility successfully updated"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/environments/{environmentId}/apiGroupInstances/{apiGroupInstanceId}/tiers": {
      "x-amf-displayName": "Instance Tiers",
      "description": "Retrieves a list of tiers for an API Group instance",
      "x-amf-type": "apiGroupTiers",
      "parameters": [
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "apiGroupInstanceId",
          "description": "Id of an API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of an API Group instance",
            "type": "integer",
            "minimum": 0
          }
        },
        {
          "name": "environmentId",
          "description": "The id of the environment for this API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the environment for this API Group instance",
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/terms": {
      "x-amf-displayName": "Terms and Conditions",
      "description": "Gets underlying API terms and conditions for an asset version group",
      "x-amf-type": "termsAndConditions",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances": {
      "x-amf-displayName": "API Instances",
      "description": "A collection of API instances",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Gets API instances",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": "3defc266-c001-431c-88d2-7cc83928efca",
                      "groupId": "com.mulesoft",
                      "assetId": "salesforce",
                      "productApiVersion": "v1",
                      "environmentId": "1234",
                      "endpointUri": "https://www.yes.com/dog",
                      "name": "Instance name",
                      "isPublic": true,
                      "type": "external",
                      "createdBy": "e1dd88f8-dG6e-4443-93a1-bd074603e118",
                      "createdDate": "2017-09-22T19:26:00.815Z",
                      "updatedDate": "2017-09-22T19:26:00.815Z",
                      "providerId": "aaf409a9-08c3-4c32-bb66-d6f2e4dba153",
                      "deprecated": false
                    },
                    {
                      "id": "96ccd7af-c88b-40b9-af89-bad8c039a353",
                      "groupId": "com.mulesoft",
                      "assetId": "salesforce",
                      "productApiVersion": "v2",
                      "environmentId": "1234568",
                      "endpointUri": "https://www.no.com/cat",
                      "name": "Another instance name",
                      "isPublic": false,
                      "type": "external",
                      "createdBy": "e1dd88f8-dG6e-4443-93a1-bd074603e118",
                      "createdDate": "2016-12-27T20:47:46.470Z",
                      "updatedDate": "2016-12-27T20:47:46.470Z",
                      "providerId": "aaf409a9-08c3-4c32-bb66-d6f2e4dba153",
                      "deprecated": false
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances/{apiInstanceId}": {
      "x-amf-displayName": "Instance",
      "description": "A single API instance identified by an \"apiInstanceId\"",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "apiInstanceId",
          "description": "The id of the API instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the API instance",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances/{apiInstanceId}/relatedApiGroupInstances": {
      "x-amf-displayName": "API Group Instances",
      "description": "API Group instances that include an API instance",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "apiInstanceId",
          "description": "id of the api instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "id of the api instance",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Gets API group instances that include an API instance",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 266126,
                      "organizationId": "930f973d-e5a7-4e48-acfa-3b30de06f98d",
                      "groupId": "930f973d-e5a7-4e48-acfa-3b30de06f98d",
                      "assetId": "social-media",
                      "version": "1.0.0",
                      "isPublic": true
                    },
                    {
                      "id": 266127,
                      "organizationId": "930f973d-e5a7-4e48-acfa-3b30de06f98d",
                      "groupId": "930f973d-e5a7-4e48-acfa-3b30de06f98d",
                      "assetId": "social-media",
                      "version": "2.0.0",
                      "isPublic": false
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances/{apiInstanceId}/tiers": {
      "x-amf-displayName": "Instance Tiers",
      "description": "A collection of the available SLA Tiers for a given API instance",
      "x-amf-type": "tiers",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "apiInstanceId",
          "description": "The id of the API instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the API instance",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances/evented-apis": {
      "x-amf-displayName": "Evented APIs",
      "description": "Evented APIs",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances/evented-apis/external": {
      "x-amf-displayName": "External Instances",
      "description": "Evented API External instances",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ],
      "post": {
        "operationId": "Creates new instance",
        "description": "Creates a new external API instance for an evented API",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Production - US",
                  "endpointUri": "http://dog.domain.tld.com/much/doge",
                  "isPublic": true
                },
                "type": "object",
                "required": [
                  "endpointUri",
                  "name"
                ],
                "properties": {
                  "endpointUri": {
                    "type": "string",
                    "maxLength": 2048
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 150
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "3defc266-c001-431c-88d2-7cc83928efca",
                    "groupId": "com.mulesoft",
                    "assetId": "salesforce",
                    "productApiVersion": "v1",
                    "environmentId": "1234",
                    "providerId": "ed687558-f86e-465f-bf88-45c989f0c2ad",
                    "name": "Instance name",
                    "endpointUri": "https://www.yes.com/dog",
                    "createdBy": "e1dd88f8-dG6e-4443-93a1-bd074603e118",
                    "createdDate": "2017-09-22T19:26:00.815Z",
                    "updatedDate": "2017-09-22T19:26:00.815Z",
                    "isPublic": true,
                    "type": "external"
                  },
                  "type": "object",
                  "required": [
                    "id",
                    "groupId",
                    "assetId",
                    "productApiVersion",
                    "isPublic",
                    "type",
                    "endpointUri",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "groupId": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "assetId": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "productApiVersion": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "type": {
                      "enum": [
                        "external",
                        "managed",
                        "mocked"
                      ]
                    },
                    "endpointUri": {
                      "type": "string",
                      "maxLength": 2048
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 150
                    },
                    "organizationId": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "createdDate": {
                      "type": "string"
                    },
                    "updatedDate": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances/evented-apis/external/{id}": {
      "x-amf-displayName": "Instance Id",
      "description": "A single instance for an evented API",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "id",
          "description": "Id of the external instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the external instance",
            "example": "7a7190da-29f3-451a-b2b2-ebd6f7e1f8ea",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          }
        }
      ],
      "patch": {
        "operationId": "Updates an instance",
        "description": "Updates an existing external API instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Production - US",
                  "endpointUri": "http://dog.domain.tld.com/much/doge",
                  "isPublic": true
                },
                "type": "object",
                "properties": {
                  "endpointUri": {
                    "type": "string",
                    "maxLength": 2048
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 150
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "External instance not found"
          },
          "204": {
            "description": "External instance updated"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances/external": {
      "x-amf-displayName": "External Instances",
      "description": "External instances",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ],
      "post": {
        "operationId": "Creates new instance",
        "description": "Creates a new external API instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Production - US",
                  "endpointUri": "http://dog.domain.tld.com/much/doge",
                  "isPublic": true
                },
                "type": "object",
                "required": [
                  "endpointUri",
                  "name"
                ],
                "properties": {
                  "endpointUri": {
                    "type": "string",
                    "maxLength": 2048
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 150
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "3defc266-c001-431c-88d2-7cc83928efca",
                    "groupId": "com.mulesoft",
                    "assetId": "salesforce",
                    "productApiVersion": "v1",
                    "environmentId": "1234",
                    "providerId": "ed687558-f86e-465f-bf88-45c989f0c2ad",
                    "name": "Instance name",
                    "endpointUri": "https://www.yes.com/dog",
                    "createdBy": "e1dd88f8-dG6e-4443-93a1-bd074603e118",
                    "createdDate": "2017-09-22T19:26:00.815Z",
                    "updatedDate": "2017-09-22T19:26:00.815Z",
                    "isPublic": true,
                    "type": "external"
                  },
                  "type": "object",
                  "required": [
                    "id",
                    "groupId",
                    "assetId",
                    "productApiVersion",
                    "isPublic",
                    "type",
                    "endpointUri",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "groupId": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "assetId": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "productApiVersion": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "type": {
                      "enum": [
                        "external",
                        "managed",
                        "mocked"
                      ]
                    },
                    "endpointUri": {
                      "type": "string",
                      "maxLength": 2048
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 150
                    },
                    "organizationId": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "createdDate": {
                      "type": "string"
                    },
                    "updatedDate": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances/external/{id}": {
      "x-amf-displayName": "Instance Id",
      "description": "A single instance",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "id",
          "description": "Id of the external instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the external instance",
            "example": "7a7190da-29f3-451a-b2b2-ebd6f7e1f8ea",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          }
        }
      ],
      "patch": {
        "operationId": "Updates an instance",
        "description": "Updates an existing external API instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Production - US",
                  "endpointUri": "http://dog.domain.tld.com/much/doge",
                  "isPublic": true
                },
                "type": "object",
                "properties": {
                  "endpointUri": {
                    "type": "string",
                    "maxLength": 2048
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 150
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "External instance not found"
          },
          "204": {
            "description": "External instance updated"
          }
        }
      },
      "delete": {
        "description": "Deletes an existing external API instance",
        "responses": {
          "404": {
            "description": "External instance not found"
          },
          "204": {
            "description": "External instance deleted"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances/managed": {
      "x-amf-displayName": "Managed Instances",
      "description": "Managed instances",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/instances/managed/{id}": {
      "x-amf-displayName": "Instance Id",
      "description": "A single managed instance",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "id",
          "description": "Id of the managed instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the managed instance",
            "example": "9897",
            "type": "string"
          }
        }
      ],
      "patch": {
        "operationId": "Updates an instance",
        "description": "Updates an existing managed API instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Production - US",
                  "endpointUri": "http://dog.domain.tld.com/much/doge",
                  "isPublic": true
                },
                "type": "object",
                "properties": {
                  "endpointUri": {
                    "type": "string",
                    "maxLength": 2048
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 150
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Managed instance updated"
          },
          "404": {
            "description": "Managed instance not found"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/identities": {
      "x-amf-displayName": "Identities",
      "description": "Identities assigned to an asset with their role",
      "x-amf-type": "identitiesWithRole",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/domain": {
      "x-amf-displayName": "Domain",
      "description": "Allowed domain for the asset",
      "x-amf-type": "domain",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}": {
      "x-amf-displayName": "Asset Version",
      "description": "Asset version",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ],
      "delete": {
        "description": "Deletes an asset by its ID",
        "x-amf-is": [
          "deleteable"
        ],
        "responses": {
          "204": {
            "description": "Asset deleted"
          },
          "409": {
            "description": "There were conflicts while deleting"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/asset": {
      "x-amf-displayName": "Asset",
      "description": "Asset",
      "x-amf-type": "simpleAsset",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/rating": {
      "x-amf-displayName": "Rating",
      "description": "Rating of the asset",
      "x-amf-type": "rating",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/reviews": {
      "x-amf-displayName": "Reviews",
      "description": "Reviews of the asset",
      "x-amf-type": "reviews",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/reviews/{reviewId}": {
      "x-amf-displayName": "Review",
      "description": "A single asset review identified by a \"reviewId\"",
      "x-amf-type": "review",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "reviewId",
          "description": "Id of the review. It is a UUID.",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the review. It is a UUID.",
            "example": "7a7190da-29f3-451a-b2b2-ebd6f7e1f8ea",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/api": {
      "x-amf-displayName": "API",
      "description": "API",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/api/model": {
      "x-amf-displayName": "API Model",
      "description": "API Model",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ],
      "get": {
        "description": "Gets the JSON-LD model for this API",
        "responses": {
          "200": {
            "description": "Returns the JSON-LD model for this API",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "value": [
                      {
                        "@id": "valkyr-for-humans-api.raml",
                        "@type": [
                          "http://raml.org/vocabularies/document#Document",
                          "http://raml.org/vocabularies/document#Fragment",
                          "http://raml.org/vocabularies/document#Module",
                          "http://raml.org/vocabularies/document#Unit"
                        ],
                        "http://raml.org/vocabularies/document#encodes": [
                          {
                            "@id": "valkyr-for-humans-api.raml#/web-api",
                            "@type": [
                              "http://schema.org/WebAPI",
                              "http://raml.org/vocabularies/document#RootDomainElement",
                              "http://raml.org/vocabularies/document#DomainElement"
                            ],
                            "http://schema.org/name": [
                              {
                                "@value": "Valkyr for Humans API"
                              }
                            ],
                            "http://schema.org/version": [
                              {
                                "@value": "v1"
                              }
                            ],
                            "http://raml.org/vocabularies/http#endpoint": [
                              {
                                "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice",
                                "@type": [
                                  "http://raml.org/vocabularies/http#EndPoint",
                                  "http://raml.org/vocabularies/document#DomainElement"
                                ],
                                "http://raml.org/vocabularies/http#path": [
                                  {
                                    "@value": "/service"
                                  }
                                ],
                                "http://www.w3.org/ns/hydra/core#supportedOperation": [
                                  {
                                    "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post",
                                    "@type": [
                                      "http://www.w3.org/ns/hydra/core#Operation",
                                      "http://raml.org/vocabularies/document#DomainElement"
                                    ],
                                    "http://www.w3.org/ns/hydra/core#method": [
                                      {
                                        "@value": "post"
                                      }
                                    ],
                                    "http://www.w3.org/ns/hydra/core#expects": [
                                      {
                                        "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/request",
                                        "@type": [
                                          "http://raml.org/vocabularies/http#Request",
                                          "http://raml.org/vocabularies/document#DomainElement"
                                        ],
                                        "http://raml.org/vocabularies/http#payload": [
                                          {
                                            "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/request/application/json",
                                            "@type": [
                                              "http://raml.org/vocabularies/http#Payload",
                                              "http://raml.org/vocabularies/document#DomainElement"
                                            ],
                                            "http://raml.org/vocabularies/http#mediaType": [
                                              {
                                                "@value": "application/json"
                                              }
                                            ],
                                            "http://raml.org/vocabularies/http#schema": [
                                              {
                                                "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/request/application/json/schema",
                                                "@type": [
                                                  "http://www.w3.org/ns/shacl#NodeShape",
                                                  "http://www.w3.org/ns/shacl#Shape",
                                                  "http://raml.org/vocabularies/shapes#Shape",
                                                  "http://raml.org/vocabularies/document#DomainElement"
                                                ],
                                                "http://www.w3.org/ns/shacl#closed": [
                                                  {
                                                    "@value": false
                                                  }
                                                ],
                                                "http://www.w3.org/ns/shacl#property": [
                                                  {
                                                    "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/request/application/json/schema/property/product",
                                                    "@type": [
                                                      "http://www.w3.org/ns/shacl#PropertyShape",
                                                      "http://www.w3.org/ns/shacl#Shape",
                                                      "http://raml.org/vocabularies/shapes#Shape"
                                                    ],
                                                    "http://www.w3.org/ns/shacl#path": [
                                                      {
                                                        "@id": "http://raml.org/vocabularies/data#product"
                                                      }
                                                    ],
                                                    "http://raml.org/vocabularies/shapes#range": [
                                                      {
                                                        "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/request/application/json/schema/property/product/scalar/product",
                                                        "@type": [
                                                          "http://raml.org/vocabularies/shapes#ScalarShape",
                                                          "http://www.w3.org/ns/shacl#Shape",
                                                          "http://raml.org/vocabularies/shapes#Shape",
                                                          "http://raml.org/vocabularies/document#DomainElement"
                                                        ],
                                                        "http://www.w3.org/ns/shacl#datatype": [
                                                          {
                                                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                                                          }
                                                        ],
                                                        "http://www.w3.org/ns/shacl#name": [
                                                          {
                                                            "@value": "product"
                                                          }
                                                        ]
                                                      }
                                                    ],
                                                    "http://www.w3.org/ns/shacl#minCount": [
                                                      {
                                                        "@value": 1
                                                      }
                                                    ],
                                                    "http://www.w3.org/ns/shacl#name": [
                                                      {
                                                        "@value": "product"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/request/application/json/schema/property/component",
                                                    "@type": [
                                                      "http://www.w3.org/ns/shacl#PropertyShape",
                                                      "http://www.w3.org/ns/shacl#Shape",
                                                      "http://raml.org/vocabularies/shapes#Shape"
                                                    ],
                                                    "http://www.w3.org/ns/shacl#path": [
                                                      {
                                                        "@id": "http://raml.org/vocabularies/data#component"
                                                      }
                                                    ],
                                                    "http://raml.org/vocabularies/shapes#range": [
                                                      {
                                                        "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/request/application/json/schema/property/component/scalar/component",
                                                        "@type": [
                                                          "http://raml.org/vocabularies/shapes#ScalarShape",
                                                          "http://www.w3.org/ns/shacl#Shape",
                                                          "http://raml.org/vocabularies/shapes#Shape",
                                                          "http://raml.org/vocabularies/document#DomainElement"
                                                        ],
                                                        "http://www.w3.org/ns/shacl#datatype": [
                                                          {
                                                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                                                          }
                                                        ],
                                                        "http://www.w3.org/ns/shacl#name": [
                                                          {
                                                            "@value": "component"
                                                          }
                                                        ]
                                                      }
                                                    ],
                                                    "http://www.w3.org/ns/shacl#minCount": [
                                                      {
                                                        "@value": 1
                                                      }
                                                    ],
                                                    "http://www.w3.org/ns/shacl#name": [
                                                      {
                                                        "@value": "component"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "http://www.w3.org/ns/shacl#name": [
                                                  {
                                                    "@value": "Service"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "http://www.w3.org/ns/hydra/core#returns": [
                                      {
                                        "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/201",
                                        "@type": [
                                          "http://raml.org/vocabularies/http#Response",
                                          "http://raml.org/vocabularies/document#DomainElement"
                                        ],
                                        "http://schema.org/name": [
                                          {
                                            "@value": "201"
                                          }
                                        ],
                                        "http://www.w3.org/ns/hydra/core#statusCode": [
                                          {
                                            "@value": "201"
                                          }
                                        ],
                                        "http://raml.org/vocabularies/http#payload": [
                                          {
                                            "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/201/application/json",
                                            "@type": [
                                              "http://raml.org/vocabularies/http#Payload",
                                              "http://raml.org/vocabularies/document#DomainElement"
                                            ],
                                            "http://raml.org/vocabularies/http#mediaType": [
                                              {
                                                "@value": "application/json"
                                              }
                                            ],
                                            "http://raml.org/vocabularies/http#schema": [
                                              {
                                                "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/201/application/json/any/schema",
                                                "@type": [
                                                  "http://raml.org/vocabularies/shapes#AnyShape",
                                                  "http://www.w3.org/ns/shacl#Shape",
                                                  "http://raml.org/vocabularies/shapes#Shape"
                                                ],
                                                "http://www.w3.org/ns/shacl#name": [
                                                  {
                                                    "@value": "schema"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/post/409",
                                        "@type": [
                                          "http://raml.org/vocabularies/http#Response",
                                          "http://raml.org/vocabularies/document#DomainElement"
                                        ],
                                        "http://schema.org/name": [
                                          {
                                            "@value": "409"
                                          }
                                        ],
                                        "http://www.w3.org/ns/hydra/core#statusCode": [
                                          {
                                            "@value": "409"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/delete",
                                    "@type": [
                                      "http://www.w3.org/ns/hydra/core#Operation",
                                      "http://raml.org/vocabularies/document#DomainElement"
                                    ],
                                    "http://www.w3.org/ns/hydra/core#method": [
                                      {
                                        "@value": "delete"
                                      }
                                    ],
                                    "http://www.w3.org/ns/hydra/core#returns": [
                                      {
                                        "@id": "valkyr-for-humans-api.raml#/web-api/end-points/%2Fservice/delete/204",
                                        "@type": [
                                          "http://raml.org/vocabularies/http#Response",
                                          "http://raml.org/vocabularies/document#DomainElement"
                                        ],
                                        "http://schema.org/name": [
                                          {
                                            "@value": "204"
                                          }
                                        ],
                                        "http://www.w3.org/ns/hydra/core#statusCode": [
                                          {
                                            "@value": "204"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "http://raml.org/vocabularies/document#declares": [
                          {
                            "@id": "types/Service.raml/type",
                            "@type": [
                              "http://www.w3.org/ns/shacl#NodeShape",
                              "http://www.w3.org/ns/shacl#Shape",
                              "http://raml.org/vocabularies/shapes#Shape",
                              "http://raml.org/vocabularies/document#DomainElement"
                            ],
                            "http://www.w3.org/ns/shacl#closed": [
                              {
                                "@value": false
                              }
                            ],
                            "http://www.w3.org/ns/shacl#property": [
                              {
                                "@id": "types/Service.raml/type/property/product",
                                "@type": [
                                  "http://www.w3.org/ns/shacl#PropertyShape",
                                  "http://www.w3.org/ns/shacl#Shape",
                                  "http://raml.org/vocabularies/shapes#Shape"
                                ],
                                "http://www.w3.org/ns/shacl#path": [
                                  {
                                    "@id": "http://raml.org/vocabularies/data#product"
                                  }
                                ],
                                "http://raml.org/vocabularies/shapes#range": [
                                  {
                                    "@id": "types/Service.raml/type/property/product/scalar/product",
                                    "@type": [
                                      "http://raml.org/vocabularies/shapes#ScalarShape",
                                      "http://www.w3.org/ns/shacl#Shape",
                                      "http://raml.org/vocabularies/shapes#Shape",
                                      "http://raml.org/vocabularies/document#DomainElement"
                                    ],
                                    "http://www.w3.org/ns/shacl#datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "http://www.w3.org/ns/shacl#name": [
                                      {
                                        "@value": "product"
                                      }
                                    ]
                                  }
                                ],
                                "http://www.w3.org/ns/shacl#minCount": [
                                  {
                                    "@value": 1
                                  }
                                ],
                                "http://www.w3.org/ns/shacl#name": [
                                  {
                                    "@value": "product"
                                  }
                                ]
                              },
                              {
                                "@id": "types/Service.raml/type/property/component",
                                "@type": [
                                  "http://www.w3.org/ns/shacl#PropertyShape",
                                  "http://www.w3.org/ns/shacl#Shape",
                                  "http://raml.org/vocabularies/shapes#Shape"
                                ],
                                "http://www.w3.org/ns/shacl#path": [
                                  {
                                    "@id": "http://raml.org/vocabularies/data#component"
                                  }
                                ],
                                "http://raml.org/vocabularies/shapes#range": [
                                  {
                                    "@id": "types/Service.raml/type/property/component/scalar/component",
                                    "@type": [
                                      "http://raml.org/vocabularies/shapes#ScalarShape",
                                      "http://www.w3.org/ns/shacl#Shape",
                                      "http://raml.org/vocabularies/shapes#Shape",
                                      "http://raml.org/vocabularies/document#DomainElement"
                                    ],
                                    "http://www.w3.org/ns/shacl#datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "http://www.w3.org/ns/shacl#name": [
                                      {
                                        "@value": "component"
                                      }
                                    ]
                                  }
                                ],
                                "http://www.w3.org/ns/shacl#minCount": [
                                  {
                                    "@value": 1
                                  }
                                ],
                                "http://www.w3.org/ns/shacl#name": [
                                  {
                                    "@value": "component"
                                  }
                                ]
                              }
                            ],
                            "http://www.w3.org/ns/shacl#name": [
                              {
                                "@value": "Service"
                              }
                            ]
                          }
                        ],
                        "http://raml.org/vocabularies/document#references": [
                          {
                            "@id": "types/Service.raml",
                            "@type": [
                              "http://raml.org/vocabularies/document#DataType",
                              "http://raml.org/vocabularies/document#Fragment",
                              "http://raml.org/vocabularies/document#Unit"
                            ],
                            "http://raml.org/vocabularies/document#encodes": [
                              {
                                "@id": "types/Service.raml/type",
                                "@type": [
                                  "http://www.w3.org/ns/shacl#NodeShape",
                                  "http://www.w3.org/ns/shacl#Shape",
                                  "http://raml.org/vocabularies/shapes#Shape",
                                  "http://raml.org/vocabularies/document#DomainElement"
                                ],
                                "http://www.w3.org/ns/shacl#closed": [
                                  {
                                    "@value": false
                                  }
                                ],
                                "http://www.w3.org/ns/shacl#property": [
                                  {
                                    "@id": "types/Service.raml/type/property/product",
                                    "@type": [
                                      "http://www.w3.org/ns/shacl#PropertyShape",
                                      "http://www.w3.org/ns/shacl#Shape",
                                      "http://raml.org/vocabularies/shapes#Shape"
                                    ],
                                    "http://www.w3.org/ns/shacl#path": [
                                      {
                                        "@id": "http://raml.org/vocabularies/data#product"
                                      }
                                    ],
                                    "http://raml.org/vocabularies/shapes#range": [
                                      {
                                        "@id": "types/Service.raml/type/property/product/scalar/product",
                                        "@type": [
                                          "http://raml.org/vocabularies/shapes#ScalarShape",
                                          "http://www.w3.org/ns/shacl#Shape",
                                          "http://raml.org/vocabularies/shapes#Shape",
                                          "http://raml.org/vocabularies/document#DomainElement"
                                        ],
                                        "http://www.w3.org/ns/shacl#datatype": [
                                          {
                                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                                          }
                                        ],
                                        "http://www.w3.org/ns/shacl#name": [
                                          {
                                            "@value": "product"
                                          }
                                        ]
                                      }
                                    ],
                                    "http://www.w3.org/ns/shacl#minCount": [
                                      {
                                        "@value": 1
                                      }
                                    ],
                                    "http://www.w3.org/ns/shacl#name": [
                                      {
                                        "@value": "product"
                                      }
                                    ]
                                  },
                                  {
                                    "@id": "types/Service.raml/type/property/component",
                                    "@type": [
                                      "http://www.w3.org/ns/shacl#PropertyShape",
                                      "http://www.w3.org/ns/shacl#Shape",
                                      "http://raml.org/vocabularies/shapes#Shape"
                                    ],
                                    "http://www.w3.org/ns/shacl#path": [
                                      {
                                        "@id": "http://raml.org/vocabularies/data#component"
                                      }
                                    ],
                                    "http://raml.org/vocabularies/shapes#range": [
                                      {
                                        "@id": "types/Service.raml/type/property/component/scalar/component",
                                        "@type": [
                                          "http://raml.org/vocabularies/shapes#ScalarShape",
                                          "http://www.w3.org/ns/shacl#Shape",
                                          "http://raml.org/vocabularies/shapes#Shape",
                                          "http://raml.org/vocabularies/document#DomainElement"
                                        ],
                                        "http://www.w3.org/ns/shacl#datatype": [
                                          {
                                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                                          }
                                        ],
                                        "http://www.w3.org/ns/shacl#name": [
                                          {
                                            "@value": "component"
                                          }
                                        ]
                                      }
                                    ],
                                    "http://www.w3.org/ns/shacl#minCount": [
                                      {
                                        "@value": 1
                                      }
                                    ],
                                    "http://www.w3.org/ns/shacl#name": [
                                      {
                                        "@value": "component"
                                      }
                                    ]
                                  }
                                ],
                                "http://www.w3.org/ns/shacl#name": [
                                  {
                                    "@value": "Service"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/api/root": {
      "x-amf-displayName": "Root File",
      "description": "Root file for the API",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ],
      "get": {
        "description": "Redirects to path of root file for this API",
        "responses": {
          "301": {
            "description": "Redirection to root file if available."
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/api/{+filePath}": {
      "x-amf-displayName": "File Path",
      "description": "API file path",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "+filePath",
          "description": "The path of the API file",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The path of the API file",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Gets the API file content",
        "responses": {
          "200": {
            "description": "Retrieved file contents for the specified file.\n- For example, if api.raml was specified the response will be that raml.\n"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/domain": {
      "x-amf-displayName": "Domain",
      "description": "Allowed domain for the asset",
      "x-amf-type": "domain",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/portal": {
      "x-amf-displayName": "Portal Documentation",
      "description": "Asset portal documentation",
      "x-amf-type": "portal",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ],
      "patch": {
        "operationId": "Publishes draft documentation",
        "description": "Publishes draft version.\nThis endpoint should be executed without specifying any body.\n",
        "responses": {
          "204": {
            "description": "Asset documentation updated"
          },
          "404": {
            "description": "Asset documentation does not exist"
          },
          "409": {
            "description": "There were conflicts while publishing"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/portal/pages": {
      "x-amf-displayName": "Pages",
      "description": "Asset documentation pages",
      "x-amf-type": "pages",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/portal/pages/{+pagePath}": {
      "x-amf-displayName": "Page",
      "description": "A single documentation page path identified by a \"pagePath\"",
      "x-amf-type": "page",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "+pagePath",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/portal/resources": {
      "x-amf-displayName": "Resources",
      "description": "Asset documentation resources",
      "x-amf-type": "portalResources",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/portal/resources/{resourceId}": {
      "x-amf-displayName": "Resource",
      "description": "A single asset documentation resource identified by a \"resourceId\"",
      "x-amf-type": "portalResource",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "resourceId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/portal/draft": {
      "x-amf-displayName": "Draft",
      "description": "Asset documentation draft",
      "x-amf-type": "portal",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ],
      "delete": {
        "description": "Discards asset documentation draft",
        "responses": {
          "204": {
            "description": "Draft deleted"
          }
        }
      },
      "put": {
        "operationId": "Publishes draft documentation",
        "description": "Publishes asset documentation draft.\nThis endpoint should be executed without specifying any body.\n",
        "responses": {
          "204": {
            "description": "Asset documentation updated"
          },
          "404": {
            "description": "Asset documentation does not exist"
          },
          "409": {
            "description": "There were conflicts while publishing"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/portal/draft/pages": {
      "x-amf-displayName": "Pages",
      "description": "Asset documentation draft pages",
      "x-amf-type": "pages",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ],
      "post": {
        "x-amf-is": [
          "pagePoster"
        ],
        "responses": {
          "201": {
            "description": "Page created."
          },
          "409": {
            "description": "Page already exists"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/portal/draft/pages/{+pagePath}": {
      "x-amf-displayName": "Page",
      "description": "A single documentation page path identified by a \"pagePath\"",
      "x-amf-type": {
        "editablePage": {
          "type": "version of an asset"
        }
      },
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "+pagePath",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Gets particular pages for a specific version of an asset",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/html": {
                "schema": {
                  "example": "<h1>\n  Salesforce to Salesforce, Workday, SAP and Database Account Broadcast\n</h1>\n<p>\n  <em>\n    Real time synchronization of accounts from one Salesforce org to another as well as a Workday HCM instance, an SAP instance and a Database using a non-persistent JMS topic.\n  </em>\n</p>\n<h2>\n  Description\n</h2>\n<p>\n  This Anypoint Template should serve as a foundation for setting an online sync of accounts from a Salesforce instance to many destination systems, using the Publish-subscribe pattern. Every time there is a new account or a change in an already existing one, the integration will poll for changes in the Salesforce source Org, publish the changes to a JMS topic and each subscriber will be responsible for updating the accounts in the target systems.\\n\\nThe application has two different batch jobs consuming this JMS topic, one for migrating the changes to the second Salesforce Org and the other one for migrating the changes to the Database. During the Process stage, each Salesforce account will be matched with an existing account in the Salesforce Org B or the Database by Name. The last step of the Process stage will group the accounts and create/update them in Salesforce Org B.\\n\\nFinally during the On Complete stage the Anypoint Template will log output statistics data into the console.\\n\\nRead more about the Publish-Subscribe pattern in <a href=\"http://blogs.mulesoft.com/introducing-pubsub-pattern-anypoint-templates/\">this</a> blog post\n</p>\n"
                }
              },
              "text/markdown": {
                "schema": {
                  "example": "# Salesforce to Salesforce, Workday, SAP and Database Account Broadcast\n\n_Real time synchronization of accounts from one Salesforce org to another as well as a Workday HCM instance, an SAP instance and a Database using a non-persistent JMS topic._\n\n## Description\n\nThis Anypoint Template should serve as a foundation for setting an online sync of accounts from a Salesforce instance to many destination systems, using the Publish-subscribe pattern. Every time there is a new account or a change in an already existing one, the integration will poll for changes in the Salesforce source Org, publish the changes to a JMS topic and each subscriber will be responsible for updating the accounts in the target systems.\n\nThe application has two different batch jobs consuming this JMS topic, one for migrating the changes to the second Salesforce Org and the other one for migrating the changes to the Database. During the Process stage, each Salesforce account will be matched with an existing account in the Salesforce Org B or the Database by Name. The last step of the Process stage will group the accounts and create/update them in Salesforce Org B.\n\nFinally during the On Complete stage the Anypoint Template will log output statistics data into the console.\n\nRead more about the Publish-Subscribe pattern in [this](http://blogs.mulesoft.com/introducing-pubsub-pattern-anypoint-templates/) blog post\n"
                }
              },
              "application/json": {
                "schema": {
                  "example": {
                    "path": "home",
                    "name": "Home page"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Page not found"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/portal/draft/pagesOrder": {
      "x-amf-displayName": "Pages Order",
      "description": "Asset documentation pages order",
      "x-amf-type": "pagesOrder",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/portal/draft/resources": {
      "x-amf-displayName": "Resources",
      "description": "Asset documentation resources",
      "x-amf-type": "postablePortalResources",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/portal/draft/resources/{resourceId}": {
      "x-amf-displayName": "Resource",
      "description": "A single documentation resource identified by a \"resourceId\"",
      "x-amf-type": "portalResource",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "resourceId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "description": "Deletes a resource",
        "responses": {
          "204": {
            "description": "Resource deleted"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/policies": {
      "x-amf-displayName": "Policies",
      "description": "Asset Policies",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/policies/instances": {
      "x-amf-displayName": "API Instances",
      "description": "API instances affected by the policy",
      "x-amf-is": [
        "pagination"
      ],
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ],
      "get": {
        "description": "Gets an array of API instances affected by the policy",
        "responses": {
          "200": {
            "description": "Successfully completed",
            "headers": {
              "x-resources-count": {
                "description": "The total amount of instances affected by that policy, where the user has permissions to see them, pagination purpose.",
                "required": true,
                "schema": {
                  "description": "The total amount of instances affected by that policy, where the user has permissions to see them, pagination purpose.",
                  "type": "number"
                }
              },
              "x-total-count": {
                "description": "The total amount of instances affected by that policy even if the user has no permissions to see them.",
                "required": true,
                "schema": {
                  "description": "The total amount of instances affected by that policy even if the user has no permissions to see them.",
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "apiName": "8becfaac-7f03-4272-a5cd-fd83177af58d",
                      "environment": "production",
                      "instanceName": "v1:7",
                      "apiVersion": "v1",
                      "url": "localhost:8088/api/v1"
                    },
                    {
                      "apiName": "8becfaac-7f03-4272-a5cd-fd83177af58d",
                      "environment": "production",
                      "instanceName": "v1:8",
                      "apiVersion": "v1",
                      "url": "localhost:8088/api/v1"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/policies/environments": {
      "x-amf-displayName": "Environments",
      "description": "Environments affected by the policy",
      "x-amf-is": [
        "pagination"
      ],
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ],
      "get": {
        "description": "Gets an array with environments affected by the policy",
        "responses": {
          "200": {
            "description": "Successfully completed",
            "headers": {
              "x-resources-count": {
                "description": "The total amount of environments affected by the policy, where the user has permissions to see them, pagination purpose.",
                "required": true,
                "schema": {
                  "description": "The total amount of environments affected by the policy, where the user has permissions to see them, pagination purpose.",
                  "type": "number"
                }
              },
              "x-total-count": {
                "description": "The total amount of environments affected by the policy even if the user has no permissions to see them.",
                "required": true,
                "schema": {
                  "description": "The total amount of environments affected by the policy even if the user has no permissions to see them.",
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "environment": "production",
                      "url": "localhost:8088/api/v1"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/tags": {
      "x-amf-displayName": "Tags",
      "description": "Asset tags",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ],
      "put": {
        "operationId": "Upserts tags",
        "description": "Upserts asset tags",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "value": [
                    {
                      "value": "Twitter",
                      "key": "Apps"
                    },
                    {
                      "value": "Finance",
                      "key": "Others"
                    },
                    {
                      "value": "Enterprise IT",
                      "key": "IT"
                    },
                    {
                      "value": "HTTP",
                      "key": "Tech"
                    }
                  ]
                },
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Tags updated"
          }
        }
      }
    },
    "/assets/{groupId}/{assetId}/{version}/tags/fields": {
      "x-amf-displayName": "Custom Fields",
      "description": "Tags of type \"custom field\"",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/tags/fields/{tagKey}": {
      "x-amf-displayName": "Field Key",
      "description": "The key that identifies the custom field",
      "x-amf-type": "customField",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "tagKey",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/tags/categories": {
      "x-amf-displayName": "Categories",
      "description": "Tags of type \"category\"",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/tags/categories/{tagKey}": {
      "x-amf-displayName": "Category Key",
      "description": "The key that identifies the category",
      "x-amf-type": "customFieldCategory",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "tagKey",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/assets/{groupId}/{assetId}/{version}/status": {
      "x-amf-displayName": "Status",
      "description": "The status of the asset",
      "x-amf-type": "assetStatus",
      "parameters": [
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/organizations": {
      "x-amf-displayName": "Organizations",
      "description": "Represents all the resources under the organizations path"
    },
    "/organizations/{masterOrganizationId}": {
      "x-amf-displayName": "Master Organization",
      "description": "Master organization id",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        }
      ]
    },
    "/organizations/{masterOrganizationId}/clientProviders/{clientProviderId}/grantTypes": {
      "x-amf-displayName": "Grant Types",
      "description": "Grant types of a client provider",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "clientProviderId",
          "description": "The Id of the client provider",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the client provider",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        }
      ],
      "get": {
        "description": "Gets the grant types for the client provider",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "type": {
                      "name": "ping"
                    },
                    "grant_types": [
                      {
                        "name": "password",
                        "label": "Resource Owner Grant",
                        "depends": [],
                        "exclude": [],
                        "required": false
                      },
                      {
                        "name": "implicit",
                        "label": "Implicit Grant",
                        "depends": [],
                        "exclude": [],
                        "required": false
                      },
                      {
                        "name": "client_credentials",
                        "label": "Client Credentials Grant",
                        "depends": [],
                        "exclude": [],
                        "required": false
                      },
                      {
                        "name": "authorization_code",
                        "label": "Authorization Code Grant",
                        "depends": [],
                        "exclude": [],
                        "required": false
                      },
                      {
                        "name": "refresh_token",
                        "label": "Refresh Token",
                        "depends": [
                          "authorization_code",
                          "password"
                        ],
                        "exclude": [],
                        "required": false
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{masterOrganizationId}/identities": {
      "x-amf-displayName": "Identities",
      "description": "Identities of an organization",
      "x-amf-type": "identities",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        }
      ]
    },
    "/organizations/{masterOrganizationId}/applications": {
      "x-amf-displayName": "Applications",
      "description": "A collection of applications that consume APIs via contracts",
      "x-amf-type": "clientApplications",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        }
      ]
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}": {
      "x-amf-displayName": "Application",
      "description": "A single application identified by an \"applicationId\"",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Gets a client application",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 59453,
                    "name": "TestRequestAPIAccess",
                    "description": "TestRequestAPIAccess description",
                    "url": "http://localhost:8080",
                    "redirectUri": [
                      "http://localhost:9090"
                    ],
                    "clientId": "904ca48597f54f6a9ed98ab9f4bcbb85",
                    "clientSecret": "2D1921aEbC6847D1ADc329603E4c5dC1",
                    "masterOrganizationId": "68ef9520-24e9-4cf2-b2f5-620025690913",
                    "grantTypes": []
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Updates client application",
        "description": "Updates a client application",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Client Application",
                "example": {
                  "description": "TestRequestAPIAccess description",
                  "name": "TestRequestAPIAccess",
                  "grantTypes": [
                    "password",
                    "implicit",
                    "client_credentials",
                    "authorization_code",
                    "refresh_token"
                  ],
                  "redirectUri": [
                    "http://localhost:9090",
                    "https://qax.anypoint.mulesoft.com/apiplatform/pingfederateqa/authentication/oauth2.html",
                    "https://qax.anypoint.mulesoft.com/apiplatform/pingfederateqa/admin/authentication/oauth2.html",
                    "https://api-notebook.anypoint.mulesoft.com/authenticate/oauth.html"
                  ],
                  "url": "https://localhost:8080"
                },
                "type": "object",
                "properties": {
                  "name": {
                    "title": "Name",
                    "type": "string"
                  },
                  "description": {
                    "title": "Description",
                    "type": "string"
                  },
                  "grantTypes": {
                    "title": "Grant Types",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirectUri": {
                    "title": "Redirect Uri",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "url": {
                    "title": "URL",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "description": "TestRequestAPIAccess description",
                    "name": "TestRequestAPIAccess",
                    "grantTypes": [
                      "password",
                      "implicit",
                      "client_credentials",
                      "authorization_code",
                      "refresh_token"
                    ],
                    "redirectUri": [
                      "http://localhost:9090",
                      "https://qax.anypoint.mulesoft.com/apiplatform/pingfederateqa/authentication/oauth2.html",
                      "https://qax.anypoint.mulesoft.com/apiplatform/pingfederateqa/admin/authentication/oauth2.html",
                      "https://api-notebook.anypoint.mulesoft.com/authenticate/oauth.html"
                    ],
                    "url": "https://localhost:8080",
                    "masterOrganizationId": "2f17a3df-a5f9-45e8-a8b4-41bd26d89236",
                    "clientId": "49670e55b98b4ad2be0b6fc20d2cafa2",
                    "clientSecret": "0fD00492a2554e5f9857598Dbd675472",
                    "id": 3
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a client application",
        "responses": {
          "204": {
            "description": "Client application deleted."
          }
        }
      }
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}/environments/{environmentId}": {
      "x-amf-displayName": "Environment",
      "description": "A single environment identified by an \"environmentId\"",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        },
        {
          "name": "environmentId",
          "description": "The id of the environment for this API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the environment for this API Group instance",
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          }
        }
      ]
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}/environments/{environmentId}/apiGroupInstances": {
      "x-amf-displayName": "API Groups Instances",
      "description": "API Groups associated to an application",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        },
        {
          "name": "environmentId",
          "description": "The id of the environment for this API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the environment for this API Group instance",
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          }
        }
      ]
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}/environments/{environmentId}/apiGroupInstances/{apiGroupInstanceId}": {
      "x-amf-displayName": "Instance",
      "description": "A single API Group instance identified by an \"apiGroupInstanceId\"",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        },
        {
          "name": "environmentId",
          "description": "The id of the environment for this API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the environment for this API Group instance",
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          }
        },
        {
          "name": "apiGroupInstanceId",
          "description": "Id of the API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the API Group instance",
            "type": "integer"
          }
        }
      ]
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}/environments/{environmentId}/apiGroupInstances/{apiGroupInstanceId}/limits": {
      "x-amf-displayName": "Limits",
      "description": "Limits of each instance part of the API Group",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        },
        {
          "name": "environmentId",
          "description": "The id of the environment for this API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the environment for this API Group instance",
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          }
        },
        {
          "name": "apiGroupInstanceId",
          "description": "Id of the API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the API Group instance",
            "type": "integer"
          }
        }
      ],
      "get": {
        "description": "Gets the list of instances of the API Group with their corresponding limit",
        "parameters": [
          {
            "name": "tierId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "apiVersionId": 307123,
                      "assetId": "oas-api-indexed",
                      "groupId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                      "assetVersion": "1.0.0",
                      "productVersion": "v1",
                      "organizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                      "environmentId": "90b78656-99e5-4754-a2ec-09f2eefc7d02",
                      "isPublic": true,
                      "tier": {
                        "audit": {
                          "created": {
                            "date": "2020-09-17T13:10:55.006Z"
                          },
                          "updated": {}
                        },
                        "masterOrganizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                        "organizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                        "id": 173842,
                        "groupInstanceId": 1901,
                        "name": "Free",
                        "description": null,
                        "status": "ACTIVE",
                        "autoApprove": true,
                        "applicationCount": 0,
                        "limits": [
                          {
                            "visible": true,
                            "maximumRequests": 1,
                            "timePeriodInMilliseconds": 1000
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}/instances": {
      "x-amf-displayName": "Application Instances",
      "description": "Application instances",
      "x-amf-type": "applicationInstances",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}/instances/{instanceId}": {
      "x-amf-displayName": "Instance",
      "description": "A single API instance associated to an application an identified by an \"instanceId\"",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        },
        {
          "name": "instanceId",
          "description": "Id of the API instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the API instance",
            "type": "integer",
            "minimum": 1
          }
        }
      ]
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}/instances/{instanceId}/contracts": {
      "x-amf-displayName": "Contracts",
      "description": "The contracts for an API instance",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        },
        {
          "name": "instanceId",
          "description": "Id of the API instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the API instance",
            "type": "integer",
            "minimum": 1
          }
        }
      ],
      "get": {
        "description": "Gets the list of contracts for an API instance",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "audit": {
                        "created": {
                          "date": "2020-05-12T18:47:09.746Z"
                        },
                        "updated": {
                          "date": "2020-07-27T14:35:16.685Z"
                        }
                      },
                      "masterOrganizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                      "organizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                      "id": 298286,
                      "status": "APPROVED",
                      "approvedDate": "2020-07-27T14:35:16.685Z",
                      "rejectedDate": null,
                      "revokedDate": null,
                      "applicationId": 213125,
                      "application": {
                        "audit": {
                          "created": {
                            "date": "2020-02-11T14:09:40.515Z"
                          },
                          "updated": {
                            "date": "2020-07-28T20:54:51.546Z"
                          }
                        },
                        "id": 213125,
                        "name": "Application",
                        "description": null,
                        "clientProvider": {},
                        "coreServicesId": "150bc7635a014fd38fc6deddee942561",
                        "url": null
                      },
                      "tierId": 138725,
                      "requestedTierId": null,
                      "apiVersionId": 699301,
                      "apiVersion": {
                        "audit": {
                          "created": {},
                          "updated": {}
                        },
                        "organizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                        "id": 699301,
                        "apiId": 309557,
                        "masterOrganizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                        "groupId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                        "assetId": "some-api",
                        "assetVersion": "1.0.0"
                      },
                      "partyId": null,
                      "partyName": null,
                      "condition": "APPLIED",
                      "tier": {
                        "id": 138725,
                        "name": "Free",
                        "description": null,
                        "limits": [
                          {
                            "timePeriodInMilliseconds": 60000,
                            "maximumRequests": 30
                          },
                          {
                            "timePeriodInMilliseconds": 86400000,
                            "maximumRequests": 1000
                          }
                        ],
                        "status": "ACTIVE",
                        "autoApprove": true
                      },
                      "possibleTiers": [
                        {
                          "masterOrganizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                          "organizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                          "id": 138726,
                          "apiVersionId": 699301,
                          "name": "Improved",
                          "description": null,
                          "limits": [
                            {
                              "timePeriodInMilliseconds": 60000,
                              "maximumRequests": 30
                            }
                          ],
                          "status": "ACTIVE",
                          "autoApprove": true,
                          "compareToActual": "LESS RESTRICTIVE"
                        },
                        {
                          "masterOrganizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                          "organizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                          "id": 138727,
                          "apiVersionId": 699301,
                          "name": "Premium",
                          "description": null,
                          "limits": [
                            {
                              "timePeriodInMilliseconds": 60000,
                              "maximumRequests": 60
                            }
                          ],
                          "status": "ACTIVE",
                          "autoApprove": false,
                          "compareToActual": "LESS RESTRICTIVE"
                        }
                      ],
                      "versionGroup": "v1",
                      "assetName": "Some API"
                    },
                    {
                      "audit": {
                        "created": {
                          "date": "2020-06-26T13:50:48.981Z"
                        },
                        "updated": {}
                      },
                      "masterOrganizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                      "organizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                      "id": 336926,
                      "status": "APPROVED",
                      "approvedDate": "2020-06-26T13:50:48.995Z",
                      "rejectedDate": null,
                      "revokedDate": null,
                      "applicationId": 213125,
                      "application": {
                        "audit": {
                          "created": {
                            "date": "2020-02-11T14:09:40.515Z"
                          },
                          "updated": {
                            "date": "2020-07-28T20:54:51.546Z"
                          }
                        },
                        "id": 213125,
                        "name": "Third application",
                        "description": null,
                        "clientProvider": {},
                        "coreServicesId": "150bc7635a014fd38fc6deddee942561",
                        "url": null
                      },
                      "tierId": 138733,
                      "requestedTierId": null,
                      "apiVersionId": null,
                      "partyId": null,
                      "partyName": null,
                      "condition": "NOT_APPLIED",
                      "apiGroupInstance": {
                        "audit": {
                          "created": {},
                          "updated": {}
                        },
                        "id": 3840,
                        "organizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                        "environmentId": "4b131683-a8d4-459d-8ada-deb6578dfaaa",
                        "assetId": "api-group",
                        "assetVersion": "1.0.0",
                        "productVersion": "v1",
                        "name": "undefined:3840",
                        "groupId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                        "apiGroupVersionId": 3689
                      },
                      "apiGroupInstanceId": 3840,
                      "tier": {
                        "id": 138733,
                        "name": "Group Free",
                        "description": null,
                        "status": "ACTIVE",
                        "autoApprove": true,
                        "limitsByApi": [
                          {
                            "apiId": 699301,
                            "groupId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                            "assetId": "some-api",
                            "assetVersion": "1.0.0",
                            "productVersion": "v1",
                            "organizationId": "f68e6165-99ce-4499-97e2-2d1d45498c73",
                            "limits": [
                              {
                                "timePeriodInMilliseconds": 60000,
                                "maximumRequests": 20
                              },
                              {
                                "timePeriodInMilliseconds": 86400000,
                                "maximumRequests": 500
                              }
                            ]
                          }
                        ],
                        "apiGroupInstanceId": 3840
                      },
                      "possibleTiers": [],
                      "versionGroup": "v1",
                      "assetName": "API Group"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}/contracts": {
      "x-amf-displayName": "Application Contracts",
      "description": "Contracts associated with an application",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Gets a list of applications with contracts with the application",
        "parameters": [
          {
            "name": "includeContractsForApiVersion",
            "description": "This field is used to filter by API version",
            "required": false,
            "in": "query",
            "schema": {
              "description": "This field is used to filter by API version",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Contracts",
                  "example": [
                    {
                      "id": 36444,
                      "status": "PENDING",
                      "requestedTier": {
                        "description": null,
                        "id": 14939,
                        "limits": [
                          {
                            "maximumRequests": 1000,
                            "timePeriodInMilliseconds": 60000
                          },
                          {
                            "maximumRequests": 20000,
                            "timePeriodInMilliseconds": 3600000
                          }
                        ],
                        "name": "Gold"
                      }
                    },
                    {
                      "id": 13765,
                      "status": "APPROVED",
                      "tier": {
                        "description": null,
                        "id": 5770,
                        "limits": [
                          {
                            "maximumRequests": 5,
                            "timePeriodInMilliseconds": 60000
                          }
                        ],
                        "name": "Silver"
                      }
                    }
                  ],
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Id",
                        "type": "integer"
                      },
                      "status": {
                        "title": "Status",
                        "type": "string"
                      },
                      "requestedTier": {
                        "title": "Requested Tier",
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "null"
                          },
                          "id": {
                            "title": "Id",
                            "type": "integer"
                          },
                          "limits": {
                            "title": "Limits",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "maximumRequests": {
                                  "title": "Maximum requests",
                                  "type": "integer"
                                },
                                "timePeriodInMilliseconds": {
                                  "title": "Timeperiod in milliseconds",
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "name": {
                            "title": "Name",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "Creates a contract",
        "description": "Creates a contract for an API or an API Group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object"
                  },
                  {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "instanceType": {
                            "enum": [
                              "api-group"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "instanceType": {
                            "enum": [
                              "api"
                            ]
                          }
                        }
                      }
                    ]
                  }
                ],
                "example": {
                  "instanceType": "api-group",
                  "acceptedTerms": true,
                  "apiGroupInstanceId": 1984,
                  "requestedTierId": 7714,
                  "organizationId": "0f4a90e6-0da2-41e2-864c-0ec52477dfe5",
                  "groupId": "0f4a90e6-0da2-41e2-864c-0ec52477dfe5",
                  "assetId": "ministry-of-truth",
                  "version": "3.0.0",
                  "versionGroup": "v3"
                },
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "organizationId": {
                    "type": "string",
                    "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
                  },
                  "groupId": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "assetId": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "version": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "versionGroup": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "environmentId": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "instanceType": {
                    "enum": [
                      "api",
                      "api-group"
                    ],
                    "type": "string"
                  },
                  "acceptedTerms": {
                    "type": "boolean"
                  },
                  "apiGroupInstanceId": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "apiId": {
                    "type": "string",
                    "minimum": 1.0
                  },
                  "requestedTierId": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 384818,
                    "status": "PENDING",
                    "applicationId": 276068,
                    "clientId": "13d5201f05344a4193e1fe4b14e8cb4d",
                    "clientSecret": "285116794aE54Fa5C23BaE03D673EB09",
                    "requestedTier": {
                      "id": 173843,
                      "groupInstanceId": 1901,
                      "name": "Better free",
                      "description": null,
                      "status": "ACTIVE",
                      "autoApprove": false,
                      "limitsByApi": [
                        {
                          "apiId": 307123,
                          "limits": [
                            {
                              "timePeriodInMilliseconds": 1000,
                              "maximumRequests": 2
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}/contracts/{contractId}": {
      "x-amf-displayName": "Contract",
      "description": "A single contract associated with an application and identified by a \"contractId\"",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        },
        {
          "name": "contractId",
          "description": "Id of the contract",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the contract",
            "type": "integer",
            "minimum": 1
          }
        }
      ],
      "patch": {
        "operationId": "Updates SLA tier",
        "description": "Updates contract SLA tier for an API or an API Group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object"
                  }
                ],
                "example": {
                  "requestedTierId": 3080
                },
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "requestedTierId": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 384818,
                    "status": "APPROVED",
                    "applicationId": 276068,
                    "clientId": "13d5201f05344a4193e1fe4b14e8cb4d",
                    "clientSecret": "285116794aE54Fa5C23BaE03D673EB09",
                    "tier": {
                      "id": 173842,
                      "groupInstanceId": 1901,
                      "name": "Free",
                      "description": null,
                      "defaultLimits": [
                        {
                          "visible": true,
                          "maximumRequests": 1,
                          "timePeriodInMilliseconds": 1000
                        }
                      ],
                      "status": "ACTIVE",
                      "autoApprove": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{masterOrganizationId}/applications/{applicationId}/secret/reset": {
      "x-amf-displayName": "Reset Application Secret",
      "description": "Resets client secret for the application",
      "parameters": [
        {
          "name": "masterOrganizationId",
          "description": "The Id of the master organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of the master organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "example": "273463",
            "type": "string"
          }
        }
      ],
      "post": {
        "operationId": "Resets client secret",
        "description": "Resets the client secret for the application.\nThis endpoint should be executed without specifying any body.\n",
        "responses": {
          "201": {
            "description": "Secret reseted"
          }
        }
      }
    },
    "/organizations/{organizationId}": {
      "x-amf-displayName": "Organization",
      "description": "A single organization identified by an \"organizationId\"",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        }
      ],
      "delete": {
        "description": "Unconditional delete organization",
        "responses": {
          "204": {
            "description": "Organization deleted"
          }
        }
      }
    },
    "/organizations/{organizationId}/assets/{groupId}/{assetId}": {
      "x-amf-displayName": "Asset",
      "description": "Asset by groupId and assetId",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "groupId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{organizationId}/assets/{groupId}/{assetId}/{version}": {
      "x-amf-displayName": "Asset Version",
      "description": "Asset version",
      "x-amf-type": "assetsPublicationPost",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "groupId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "Asset version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Asset version",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/organizations/{organizationId}/assets/{groupId}/{assetId}/{version}/mutabledata": {
      "x-amf-displayName": "Asset mutable data",
      "description": "Asset mutable data",
      "x-amf-type": "assetsMutableDataPatch",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "groupId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "Asset version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Asset version",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/organizations/{organizationId}/assets/{groupId}/{assetId}/{version}/mutabledata/status": {
      "x-amf-displayName": "Status",
      "description": "mutable data publication status",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "groupId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "Asset version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Asset version",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/organizations/{organizationId}/assets/{groupId}/{assetId}/{version}/mutabledata/status/{runId}": {
      "x-amf-displayName": "By RunId",
      "description": "Mutable data publication status by \"runId\"",
      "x-amf-type": "publicationStatus",
      "parameters": [
        {
          "name": "assetId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "Asset version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Asset version",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "runId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{organizationId}/assets/{groupId}/{assetId}/{version}/publication": {
      "x-amf-displayName": "Publication",
      "description": "Asset publication",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "groupId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "Asset version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Asset version",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/organizations/{organizationId}/assets/{groupId}/{assetId}/{version}/publication/extendedStatus": {
      "x-amf-displayName": "Extended Status",
      "description": "Extended asset publication status",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "groupId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "Asset version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Asset version",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/organizations/{organizationId}/assets/{groupId}/{assetId}/{version}/publication/extendedStatus/{runId}": {
      "x-amf-displayName": "By RunId",
      "description": "Extended asset publication status by \"runId\"",
      "parameters": [
        {
          "name": "assetId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "Asset version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Asset version",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "runId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Gets extended asset publication extended status by runId",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "null": {
                "schema": {
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/type"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/assets/{groupId}/{assetId}/{version}/publication/status": {
      "x-amf-displayName": "Status",
      "description": "Asset publication status",
      "x-amf-type": "publicationStatus",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "groupId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "Asset version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Asset version",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/organizations/{organizationId}/assets/{groupId}/{assetId}/{version}/publication/status/{runId}": {
      "x-amf-displayName": "By RunId",
      "description": "Asset publication status by \"runId\"",
      "x-amf-type": "publicationStatus",
      "parameters": [
        {
          "name": "assetId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "Asset version",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Asset version",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        },
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "runId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{organizationId}/fields": {
      "x-amf-displayName": "Custom Fields",
      "description": "Tags of type \"custom field\"",
      "x-amf-type": "fieldConfiguration",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        }
      ]
    },
    "/organizations/{organizationId}/fields/{tagKey}": {
      "x-amf-displayName": "Field Key",
      "description": "The key that identifies the custom field",
      "x-amf-type": "field",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "tagKey",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{organizationId}/categories": {
      "x-amf-displayName": "Categories",
      "description": "Tags of type \"category\"",
      "x-amf-type": "categoryConfiguration",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        }
      ]
    },
    "/organizations/{organizationId}/categories/{tagKey}": {
      "x-amf-displayName": "Category Key",
      "description": "The key that identifies the category",
      "x-amf-type": "category",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "tagKey",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{organizationId}/queries": {
      "x-amf-displayName": "Organization Queries",
      "description": "Saved searches queries that belong to an organization",
      "x-amf-type": "queries",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        }
      ]
    },
    "/organizations/{organizationId}/queries/{queryId}": {
      "x-amf-displayName": "Query",
      "description": "A single organization saved search query identified by a \"queryId\"",
      "x-amf-type": "query",
      "parameters": [
        {
          "name": "organizationId",
          "description": "The Id of organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of organization",
            "example": "434b78c3-bcd9-412d-9428-dec2f8c72cb2",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          }
        },
        {
          "name": "queryId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/portals": {
      "x-amf-displayName": "Public Portals",
      "description": "Public portals"
    },
    "/portals/{organizationDomain}": {
      "x-amf-displayName": "Portal Domain",
      "description": "Public portal domain",
      "x-amf-type": "portalCustomization",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "operationId": "Publishes draft portal",
        "description": "Publishes draft portal customization.\nThis endpoint should be executed without specifying any body.\n",
        "responses": {
          "204": {
            "description": "Portal updated"
          },
          "404": {
            "description": "Custom portal does not exist"
          },
          "409": {
            "description": "There were conflicts while publishing"
          }
        }
      }
    },
    "/portals/{organizationDomain}/metadata": {
      "x-amf-displayName": "Metadata",
      "description": "Organization domain metadata",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Gets organization domain metadata from authentication service",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "isFederated": false,
                    "name": "Mulesoft Inc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/portals/{organizationDomain}/resources": {
      "x-amf-displayName": "Resources",
      "description": "Public portal customization resources",
      "x-amf-type": "portalResources",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/resources/{resourceId}": {
      "x-amf-displayName": "Resource",
      "description": "A single portal resource identified by a \"resourceId\"",
      "x-amf-type": "portalResource",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "resourceId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets": {
      "x-amf-displayName": "Public Assets",
      "description": "Public assets",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/search": {
      "x-amf-displayName": "Public Assets Search",
      "description": "Public Assets Search",
      "x-amf-type": "assetsSearch",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}": {
      "x-amf-displayName": "Asset",
      "description": "Public asset by groupId and assetId",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}/asset": {
      "x-amf-displayName": "Asset",
      "description": "Asset",
      "x-amf-type": "simpleAsset",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}/versionGroups": {
      "x-amf-displayName": "Version Groups",
      "description": "Retrieve public version groups of an asset",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}/versionGroups/{versionGroup}": {
      "x-amf-displayName": "By Version Group",
      "description": "Public asset by versionGroup",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/apiGroupInstances": {
      "x-amf-displayName": "API Group instances",
      "description": "API Group instances for an asset version group",
      "x-amf-type": "apiGroupInstance",
      "x-amf-is": [
        "pagination"
      ],
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/environments/{environmentId}": {
      "x-amf-displayName": "Environment",
      "description": "A single environment identified by an \"environmentId\"",
      "parameters": [
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "environmentId",
          "description": "The id of the environment for this API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the environment for this API Group instance",
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/environments/{environmentId}/apiGroupInstances/{apiGroupInstanceId}": {
      "x-amf-displayName": "Instance",
      "description": "A single API Group instance identified by an \"apiGroupInstanceId\"",
      "parameters": [
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "apiGroupInstanceId",
          "description": "Id of the API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the API Group instance",
            "type": "integer",
            "minimum": 0
          }
        },
        {
          "name": "environmentId",
          "description": "The id of the environment for this API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the environment for this API Group instance",
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/environments/{environmentId}/apiGroupInstances/{apiGroupInstanceId}/tiers": {
      "x-amf-displayName": "Tiers",
      "description": "Tiers for a public API Group instance",
      "x-amf-type": "apiGroupTiers",
      "parameters": [
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "apiGroupInstanceId",
          "description": "Id of the API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Id of the API Group instance",
            "type": "integer",
            "minimum": 0
          }
        },
        {
          "name": "environmentId",
          "description": "The id of the environment for this API Group instance",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the environment for this API Group instance",
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}/versionGroups/{versionGroup}/terms": {
      "x-amf-displayName": "Terms and Conditions",
      "description": "Gets public underlying API terms and conditions for a public asset version group",
      "x-amf-type": "termsAndConditions",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "versionGroup",
          "description": "Version group of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Version group of the asset",
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}/{version}": {
      "x-amf-displayName": "Asset Version",
      "description": "Public asset version",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/assets/{groupId}/{assetId}/{version}/asset": {
      "x-amf-displayName": "Asset",
      "description": "Asset",
      "x-amf-type": "simpleAsset",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "description": "groupId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "groupId of the asset",
            "type": "string"
          }
        },
        {
          "name": "assetId",
          "description": "assetId of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "assetId of the asset",
            "type": "string"
          }
        },
        {
          "name": "version",
          "description": "version of the asset",
          "required": true,
          "in": "path",
          "schema": {
            "description": "version of the asset",
            "example": "2.22.45",
            "type": "string",
            "pattern": "^v{0,1}(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/applications/{applicationId}": {
      "x-amf-displayName": "Application",
      "description": "A single application identified by an \"applicationId\"",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/applications/{applicationId}/instances": {
      "x-amf-displayName": "Instances",
      "description": "Public application instances",
      "x-amf-type": "applicationInstances",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "applicationId",
          "description": "The Id of an application",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The Id of an application",
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/domain": {
      "x-amf-displayName": "Organization Domain",
      "description": "Public portal domain",
      "x-amf-type": "domain",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "operationId": "Updates a domain",
        "description": "Updates a domain for an organization",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "example": "domain"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Removes a domain",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/portals/{organizationDomain}/cookieConsentId": {
      "x-amf-displayName": "Organization CookieConsentId",
      "description": "Public portal cookie consent id",
      "x-amf-type": "cookieConsentId",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "operationId": "Updates a cookie consent id",
        "description": "Updates a cookie consent id for an organization",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "example": "bb58d9d0-c218-4169-9742-cbc398811891"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Removes a cookie consent id",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/portals/{organizationDomain}/draft": {
      "x-amf-displayName": "Draft",
      "description": "Public portal customization draft",
      "x-amf-type": "portalCustomization",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "operationId": "Updates customization",
        "description": "Updates the portal customization draft",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "customization": {
                    "home": {
                      "heroImage": "",
                      "welcomeTitle": "Welcome to the Portal",
                      "welcomeText": "content",
                      "textColor": "#000000"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Custom portal updated"
          },
          "422": {
            "description": "Customization Data is invalid"
          }
        }
      },
      "delete": {
        "description": "Deletes the portal customization draft",
        "responses": {
          "204": {
            "description": "Draft portal deleted"
          },
          "404": {
            "description": "Draft does not exist"
          }
        }
      }
    },
    "/portals/{organizationDomain}/draft/pages": {
      "x-amf-displayName": "Pages",
      "description": "Public portal customization draft pages",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "x-amf-is": [
          "pagePoster"
        ],
        "responses": {
          "201": {
            "description": "Page created."
          },
          "409": {
            "description": "Page already exists"
          },
          "422": {
            "description": "Maximum page quantity exceeded"
          }
        }
      }
    },
    "/portals/{organizationDomain}/draft/pages/{+pagePath}": {
      "x-amf-displayName": "Page",
      "description": "A single portal draft page identified by a \"pagePath\"",
      "x-amf-type": {
        "editablePage": {
          "type": "custom draft"
        }
      },
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "+pagePath",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/draft/pagesOrder": {
      "x-amf-displayName": "Pages Order",
      "description": "Public portal pages order",
      "x-amf-type": "pagesOrder",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/draft/resources": {
      "x-amf-displayName": "Resources",
      "description": "Public portal customization resources",
      "x-amf-type": "postablePortalResources",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/portals/{organizationDomain}/draft/resources/{resourceId}": {
      "x-amf-displayName": "Resource",
      "description": "A single portal resource identified by a \"resourceId\"",
      "x-amf-type": "portalResource",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "resourceId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "description": "Deletes portals resource",
        "responses": {
          "204": {
            "description": "Resource deleted"
          }
        }
      }
    },
    "/portals/{organizationDomain}/pages/{+pagePath}": {
      "x-amf-displayName": "Page",
      "description": "A single portal page identified by a \"pagePath\"",
      "x-amf-type": "page",
      "parameters": [
        {
          "name": "organizationDomain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "+pagePath",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/users": {
      "x-amf-displayName": "Users",
      "description": "Users"
    },
    "/users/me/queries": {
      "x-amf-displayName": "Queries",
      "description": "Saved searches queries that belong to an user",
      "x-amf-type": "queries"
    },
    "/users/me/queries/{queryId}": {
      "x-amf-displayName": "Query",
      "description": "A single user saved search query identified by a \"queryId\"",
      "x-amf-type": "query",
      "parameters": [
        {
          "name": "queryId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "SingleAsset": {
        "$ref": "types/singleAsset.raml"
      }
    },
    "x-amf-resourceTypes": {
      "editablePage": {
        "$ref": "resourceTypes/editablePage.raml"
      },
      "review": {
        "$ref": "resourceTypes/review.raml"
      },
      "fieldConfiguration": {
        "$ref": "resourceTypes/fieldConfiguration.raml"
      },
      "cookieConsentId": {
        "$ref": "resourceTypes/cookieConsentId.raml"
      },
      "queries": {
        "$ref": "resourceTypes/queries.raml"
      },
      "field": {
        "$ref": "resourceTypes/field.raml"
      },
      "domain": {
        "$ref": "resourceTypes/domain.raml"
      },
      "assetsSearch": {
        "$ref": "resourceTypes/assetsSearch.raml"
      },
      "page": {
        "$ref": "resourceTypes/page.raml"
      },
      "portal": {
        "$ref": "resourceTypes/portal.raml"
      },
      "customField": {
        "$ref": "resourceTypes/customField.raml"
      },
      "pages": {
        "$ref": "resourceTypes/pages.raml"
      },
      "query": {
        "$ref": "resourceTypes/query.raml"
      },
      "applicationInstances": {
        "$ref": "resourceTypes/applicationInstances.raml"
      },
      "clientApplications": {
        "$ref": "resourceTypes/clientApplications.raml"
      },
      "apiGroupInstance": {
        "$ref": "resourceTypes/apiGroupInstance.raml"
      },
      "tiers": {
        "$ref": "resourceTypes/tiers.raml"
      },
      "portalResource": {
        "$ref": "resourceTypes/portalResource.raml"
      },
      "publicationStatus": {
        "$ref": "resourceTypes/publicationStatus.raml"
      },
      "portalResources": {
        "$ref": "resourceTypes/portalResources.raml"
      },
      "assetsMutableDataPatch": {
        "$ref": "/resourceTypes/assetsMutableDataPatch.raml"
      },
      "assetsPost": {
        "$ref": "resourceTypes/assetsPost.raml"
      },
      "identities": {
        "$ref": "resourceTypes/identities.raml"
      },
      "rating": {
        "$ref": "resourceTypes/rating.raml"
      },
      "reviews": {
        "$ref": "resourceTypes/reviews.raml"
      },
      "simpleAsset": {
        "$ref": "resourceTypes/simpleAsset.raml"
      },
      "category": {
        "$ref": "resourceTypes/category.raml"
      },
      "apiGroupTiers": {
        "$ref": "resourceTypes/apiGroupTiers.raml"
      },
      "termsAndConditions": {
        "$ref": "resourceTypes/termsAndConditions.raml"
      },
      "portalCustomization": {
        "$ref": "resourceTypes/portalCustomization.raml"
      },
      "postablePortalResources": {
        "$ref": "resourceTypes/postablePortalResources.raml"
      },
      "categoryConfiguration": {
        "$ref": "resourceTypes/categoryConfiguration.raml"
      },
      "assetsPublicationPost": {
        "$ref": "resourceTypes/assetsPublicationPost.raml"
      },
      "assetStatus": {
        "$ref": "resourceTypes/assetStatus.raml"
      },
      "customFieldCategory": {
        "$ref": "resourceTypes/customFieldCategory.raml"
      },
      "versionGroups": {
        "$ref": "resourceTypes/versionGroups.raml"
      },
      "identitiesWithRole": {
        "$ref": "resourceTypes/identitiesWithRole.raml"
      },
      "pagesOrder": {
        "$ref": "resourceTypes/pagesOrder.raml"
      }
    },
    "x-amf-traits": {
      "pagesOrderRevisionResponseHeader": {
        "responses": {
          "<<statusCode>>": {
            "headers": {
              "X-Pages-Order-Revision": {
                "type": "string",
                "description": "Hash which represents the most recent pages order revision. This hash should be sent back to the server when attempting to store a new pages order.\n"
              }
            }
          }
        }
      },
      "updateableByForce": {
        "headers": {
          "X-Force-Update": {
            "description": "Enforce update operation (possibly affecting many resources) to avoid Conflict response (409)",
            "required": false,
            "type": "boolean"
          }
        }
      },
      "assets-search": {
        "queryParameters": {
          "search?": {
            "displayName": "Search",
            "type": "string",
            "description": "Filter results that partially match the input with the asset name",
            "example": "My example",
            "maxLength": 256
          },
          "types?": {
            "displayName": "Types",
            "type": "string[] | string",
            "description": "Filter results that matches the input with the asset type"
          },
          "domain?": {
            "displayName": "Domain",
            "type": "string",
            "description": "Filter results by organization using its domain",
            "example": "sunday"
          },
          "organizationId?": {
            "displayName": "Organization Id",
            "type": "string[] | string",
            "description": "Filter results by organizations. For more than one organization, & organizationId=1& organizationId=2, etc...",
            "example": "b8886ae1-ba56-40e9-9d6d-92fe4d12758a"
          },
          "masterOrganizationId?": {
            "displayName": "Master Organization Id",
            "type": "string",
            "description": "Filter results by master organization id.",
            "example": "b8886ae1-ba56-40e9-9d6d-92fe4d12758a"
          },
          "minMuleVersion?": {
            "displayName": "Minimum Mule version",
            "example": "3.x",
            "description": "Filters results by min mule version, allowing partial versions. For example '3.x' will filter in the range [3.0, 4.0)",
            "type": "string"
          },
          "sharedWithMe?": {
            "displayName": "Shared with me",
            "example": true,
            "description": "Retrieve only the assets that has been shared with you",
            "type": "boolean"
          },
          "includeSnapshots?": {
            "displayName": "Include snapshots",
            "example": true,
            "description": "Include snapshots in the results",
            "type": "boolean"
          }
        }
      },
      "assetsPostHeader": {
        "$ref": "traits/assetsPostHeader.raml"
      },
      "deleteableByForce": {
        "headers": {
          "X-Force-Delete": {
            "description": "Enforce delete operation (possibly affecting many resources) to avoid Conflict response (409)",
            "required": false,
            "type": "boolean"
          }
        }
      },
      "pagesOrderRevisionHeader": {
        "headers": {
          "X-Pages-Order-Revision": {
            "type": "string",
            "minLength": 1,
            "required": false,
            "description": "Hash that must be sent to ensure the client is in sync with the most recent pages order stored by the server.\n"
          }
        }
      },
      "deleteable": {
        "headers": {
          "X-Delete-Type": {
            "description": "It could be 'soft-delete' or 'hard-delete', that mean the asset will be logical deleted or physical deleted\nIt's supposed to if it is not specified, the type will be 'soft-delete'\n",
            "enum": [
              "soft-delete",
              "hard-delete"
            ]
          }
        }
      },
      "assetsPagination": {
        "queryParameters": {
          "limit?": {
            "displayName": "Limit",
            "type": "number",
            "description": "Amount of objects retrieved in the response",
            "example": 10,
            "minimum": 0,
            "maximum": 250
          },
          "offset?": {
            "displayName": "Offset",
            "type": "number",
            "description": "The offset specifies the offset of the first row to return",
            "example": 1,
            "minimum": 0
          },
          "sort?": {
            "displayName": "Sort",
            "type": "string",
            "description": "Property to sort by",
            "example": "name"
          },
          "ascending?": {
            "displayName": "Ascending",
            "type": "boolean",
            "description": "Order for sorting",
            "example": true
          }
        }
      },
      "pagination": {
        "queryParameters": {
          "limit?": {
            "displayName": "Limit",
            "type": "number",
            "description": "Amount of objects retrieved in the response",
            "example": 10
          },
          "offset?": {
            "displayName": "Offset",
            "type": "number",
            "description": "The offset specifies the offset of the first row to return",
            "example": 1
          },
          "sort?": {
            "displayName": "Sort",
            "type": "string",
            "description": "Property to sort by",
            "example": "name"
          },
          "ascending?": {
            "displayName": "Ascending",
            "type": "boolean",
            "description": "Order for sorting",
            "example": true
          }
        }
      },
      "pagePoster": {
        "description": "Creates an empty page for a draft version. Remember that:\n- A page cannot be moved/created to/in a path that already contains another page with the same name.\n",
        "headers": {
          "x-move-source": {
            "type": "string",
            "description": "This header is used when you want to rename or move an existing page.\n`x-move-source` specifies the path of the page or folder that wants to be moved, the source.\nThe request body property `path` will be the destination.\n",
            "example": "/examples/",
            "required": false
          }
        },
        "body": {
          "type": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Page Created\",\n  \"type\" : \"object\",\n  \"required\": [ \n    \"pagePath\"\n  ],\n  \"properties\": {\n    \"pagePath\": {\n      \"title\": \"Page Path\",\n      \"type\": \"string\"\n    }\n  }\n}\n",
          "example": "{\n  \"pagePath\": \"docs/faq\"\n}\n"
        }
      }
    }
  },
  "x-amf-uses": {
    "IdentityTypes": "libraries/identityTypes.raml"
  }
}
