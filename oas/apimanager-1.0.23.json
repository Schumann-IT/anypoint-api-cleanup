{
  "openapi": "3.0.0",
  "info": {
    "title": "Core Services API Reference",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://anypoint.mulesoft.com/accounts/api"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/admin": {},
    "/admin/connectedApplications": {
      "description": "Admin routes for interacting with Connected Applications owned by any organization"
    },
    "/admin/connectedApplications/search": {
      "description": "Search endpoint across all Connected Applications",
      "post": {
        "x-amf-is": [
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"client_id\": \"0fa2aa2f0aeb4978b96796a0843f898c\",\n      \"owner_org_id\": \"0eb65884-4f75-48f7-a8bc-4e30b46e721d\",\n      \"client_name\": \"Client Credz\",\n      \"client_secret\": \"********\",\n      \"public_keys\": [],\n      \"redirect_uris\": [\n        \"https://why.net\"\n      ],\n      \"grant_types\": [\n        \"client_credentials\"\n      ],\n      \"scopes\": [],\n      \"enabled\": true,\n      \"audience\": \"internal\",\n      \"client_uri\": null,\n      \"policy_uri\": null,\n      \"tos_uri\": null\n    },\n    {\n      \"client_id\": \"e8c28f0249a6417bb892ff8d6013d628\",\n      \"owner_org_id\": \"0eb65884-4f75-48f7-a8bc-4e30b46e721d\",\n      \"client_name\": \"OpenID Integration\",\n      \"client_secret\": \"********\",\n      \"public_keys\": [],\n      \"redirect_uris\": [\n        \"https://example.com\"\n      ],\n      \"grant_types\": [\n        \"implicit\",\n        \"authorization_code\",\n        \"refresh_token\"\n      ],\n      \"scopes\": [\n        \"full\",\n        \"read:full\",\n        \"openid\",\n        \"profile\",\n        \"email\",\n        \"offline_access\"\n      ],\n      \"enabled\": true,\n      \"audience\": \"internal\",\n      \"client_uri\": null,\n      \"policy_uri\": null,\n      \"tos_uri\": null\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "connectedApplications.ConnectedApplication"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "includeUsage",
            "description": "flag to indicate whether to return usage statistics",
            "required": true,
            "in": "query",
            "schema": {
              "description": "flag to indicate whether to return usage statistics",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "client_id": [
                    "65c3fd77-6e2e-49b1-8cb9-cdbe0a22ec58",
                    "6fbf174a-69ed-425d-83a1-c0f1ab9a981c"
                  ]
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ConnectedApplicationAdminSearch"
                  }
                ]
              }
            }
          }
        },
        "responses": {}
      }
    },
    "/admin/keys": {},
    "/admin/keys/{usage}": {
      "parameters": [
        {
          "name": "usage",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Retrieves admin information about the JWKS",
        "x-amf-is": [
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"kid\": \"5effa76ef33ecb5e346bd512d7d89b30e47d8e98\",\n      \"created_at\": \"2018-11-08T01:40:51.355Z\",\n      \"retired_at\": \"2020-10-08T16:57:00.300Z\",\n      \"active\": false\n    },\n    {\n      \"kid\": \"234567890b5e346bd512d7d89b30e47d8e98\",\n      \"created_at\": \"2018-11-08T01:40:51.355Z\",\n      \"retired_at\": null,\n      \"active\": true\n    }\n  ],\n  \"total\": 30\n}\n",
              "type": "object"
            }
          }
        ],
        "parameters": [
          {
            "name": "retired",
            "description": "If true, return only retired keys. If false, return only active keys. Otherwise, return both.",
            "in": "query",
            "schema": {
              "description": "If true, return only retired keys. If false, return only active keys. Otherwise, return both.",
              "type": "boolean"
            }
          }
        ],
        "responses": {}
      }
    },
    "/admin/keys/{usage}/rotate": {
      "parameters": [
        {
          "name": "usage",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Triggers a key rotation event",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/authorize": {},
    "/authorize/context": {
      "post": {
        "description": "Get the set of contexts in which the caller can perform an action on resources that match a template",
        "x-amf-is": [
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"namespace\": \"cloudhub\",\n      \"resource\": \"/organizations/614b40bf-6eb6-49ac-82f4-d8332b6f4d1b/environments/a4685c7a-08fe-45d7-9e29-87b84223d251/applications\",\n      \"resourceTemplate\": \"/organizations/{{org}}/environments/{{envId}}/applications\",\n      \"resourceTemplateParams\": {\"org\": \"614b40bf-6eb6-49ac-82f4-d8332b6f4d1b\", \"envId\": \"a4685c7a-08fe-45d7-9e29-87b84223d251\" },\n      \"actions\": [\"GET\"]\n    },\n    {\n      \"namespace\": \"cloudhub\",\n      \"resource\": \"/organizations/614b40bf-6eb6-49ac-82f4-d8332b6f4d1b/environments/05e35d44-405a-4693-81ce-4e78e9a72891/applications\",\n      \"resourceTemplate\": \"/organizations/{{org}}/environments/{{envId}}/applications\",\n      \"resourceTemplateParams\": {\"org\": \"614b40bf-6eb6-49ac-82f4-d8332b6f4d1b\", \"envId\": \"05e35d44-405a-4693-81ce-4e78e9a72891\" },\n      \"actions\": [\"GET\"]\n    },\n    {\n      \"namespace\": \"cloudhub\",\n      \"resource\": \"/organizations/d71ef2da-40cf-415b-80fd-eab0a7130bc8/environments/*/applications\",\n      \"resourceTemplate\": \"/organizations/{{org}}/environments/{{envId}}/applications\",\n      \"resourceTemplateParams\": {\"org\": \"d71ef2da-40cf-415b-80fd-eab0a7130bc8\", \"envId\": \"*\" },\n      \"actions\": [\"GET\"]\n    }\n  ],\n  \"total\": 3\n}\n",
              "type": "authorize.AuthorizeContextResult"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "namespace": "cloudhub",
                  "actions": [
                    "GET"
                  ],
                  "resourceTemplates": [
                    "/organizations/{{org}}/environments/{{envId}}/applications"
                  ],
                  "offset": 0,
                  "limit": 50
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/AuthorizeContext"
                  }
                ]
              }
            }
          }
        },
        "responses": {}
      }
    },
    "/connectedApplications": {
      "description": "Access to connected applications",
      "get": {
        "description": "Get all connected applications for the organization",
        "x-amf-is": [
          "offset-paginated",
          {
            "searchable": {
              "targetDesc": "all object properties"
            }
          },
          {
            "sortable_2": {
              "field_1": "client_id",
              "field_2": "client_name",
              "default": "client_name"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "includeUsage",
            "description": "flag to indicate whether to return usage statistics",
            "required": true,
            "in": "query",
            "schema": {
              "description": "flag to indicate whether to return usage statistics",
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "orgId",
            "description": "Provide an orgId to get all clients from other organization",
            "in": "query",
            "schema": {
              "description": "Provide an orgId to get all clients from other organization",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "client_id": "0fa2aa2f0aeb4978b96796a0843f898c",
                        "owner_org_id": "0eb65884-4f75-48f7-a8bc-4e30b46e721d",
                        "client_name": "Client Credz",
                        "client_secret": "B0313ad5a6B44f7ebb4Bf482C49327e1",
                        "public_keys": [],
                        "redirect_uris": [
                          "https://why.net"
                        ],
                        "grant_types": [
                          "client_credentials"
                        ],
                        "scopes": [],
                        "enabled": true,
                        "audience": "internal",
                        "client_uri": null,
                        "policy_uri": null,
                        "tos_uri": null
                      },
                      {
                        "client_id": "e8c28f0249a6417bb892ff8d6013d628",
                        "owner_org_id": "0eb65884-4f75-48f7-a8bc-4e30b46e721d",
                        "client_name": "OpenID Integration",
                        "client_secret": "eA0Fa9BaAe454F32A6Ae8ABBc1b730C0",
                        "public_keys": [],
                        "redirect_uris": [
                          "https://example.com"
                        ],
                        "grant_types": [
                          "implicit",
                          "authorization_code",
                          "refresh_token"
                        ],
                        "scopes": [
                          "full",
                          "read:full",
                          "openid",
                          "profile",
                          "email",
                          "offline_access"
                        ],
                        "enabled": true,
                        "audience": "internal",
                        "client_uri": null,
                        "policy_uri": null,
                        "tos_uri": null
                      }
                    ],
                    "total": 2
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new connected application",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "client_id": "0fa2aa2f0aeb4978b96796a0843f898c",
                  "owner_org_id": "0eb65884-4f75-48f7-a8bc-4e30b46e721d",
                  "client_name": "SampleClient",
                  "client_secret": "B0313ad5a6B44f7ebb4Bf482C49327e1",
                  "public_keys": [],
                  "redirect_uris": [
                    "https://why.net"
                  ],
                  "grant_types": [
                    "client_credentials"
                  ],
                  "scopes": [],
                  "enabled": true,
                  "audience": "internal"
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ConnectedApplicationCreate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "client_id": "0fa2aa2f0aeb4978b96796a0843f898c",
                    "owner_org_id": "0eb65884-4f75-48f7-a8bc-4e30b46e721d",
                    "client_name": "SampleClient",
                    "client_secret": "B0313ad5a6B44f7ebb4Bf482C49327e1",
                    "public_keys": [],
                    "redirect_uris": [
                      "https://why.net"
                    ],
                    "grant_types": [
                      "client_credentials"
                    ],
                    "scopes": [],
                    "enabled": true,
                    "audience": "internal"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/connectedApplications/{clientId}": {
      "description": "Access to individual connected application",
      "parameters": [
        {
          "name": "clientId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get a single connected application",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "includeUsage",
            "description": "flag to indicate whether to return usage statistics",
            "required": true,
            "in": "query",
            "schema": {
              "description": "flag to indicate whether to return usage statistics",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "client_id": "0fa2aa2f0aeb4978b96796a0843f898c",
                    "owner_org_id": "0eb65884-4f75-48f7-a8bc-4e30b46e721d",
                    "client_name": "SampleClient",
                    "client_secret": "B0313ad5a6B44f7ebb4Bf482C49327e1",
                    "public_keys": [],
                    "redirect_uris": [
                      "https://why.net"
                    ],
                    "grant_types": [
                      "client_credentials"
                    ],
                    "scopes": [],
                    "enabled": true,
                    "audience": "internal"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Connected application with that clientId could not be found"
          }
        }
      },
      "patch": {
        "description": "Patches a single connected application",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "resetSecret",
            "description": "Asks service to reset secret as part of this operation",
            "in": "query",
            "schema": {
              "description": "Asks service to reset secret as part of this operation",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "client_name": "SampleClient",
                  "redirect_uris": [
                    "https://localhost:3000/callback",
                    "https://example.com/auth-callback"
                  ],
                  "grant_types": [
                    "implicit",
                    "authorization_code"
                  ]
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ConnectedApplicationUpdate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connected application was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "client_id": "0fa2aa2f0aeb4978b96796a0843f898c",
                    "owner_org_id": "0eb65884-4f75-48f7-a8bc-4e30b46e721d",
                    "client_name": "SampleClient",
                    "client_secret": "B0313ad5a6B44f7ebb4Bf482C49327e1",
                    "public_keys": [],
                    "redirect_uris": [
                      "https://why.net"
                    ],
                    "grant_types": [
                      "client_credentials"
                    ],
                    "scopes": [],
                    "enabled": true,
                    "audience": "internal"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Connected application with that clientId could not be found"
          }
        }
      },
      "delete": {
        "description": "Deletes a single connected application",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Connected application was deleted"
          }
        }
      }
    },
    "/connectedApplications/{clientId}/scopes": {
      "description": "Routes for operationg upon context-aware scopes assigned directly to the client's identity,\nonly for use with the client_credentials grant type. Orthogonal to the set of scopes associated\nwith user authorizations.\n",
      "parameters": [
        {
          "name": "clientId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Retrieves context-aware scopes assigned to the connected application\n",
        "x-amf-is": [
          "offset-paginated",
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "scope": "api:admin",
                        "context_params": {
                          "org": "8b0b657c-91ca-420d-870a-08699094f5e4",
                          "envId": "7cc0463b-f7be-418d-8a64-84fbad13ab00"
                        }
                      }
                    ],
                    "total": 1
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Replaces the entire list of context-aware scopes assigned to the connected application\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "scopes": [
                    {
                      "scope": "api:admin",
                      "context_params": {
                        "org": "8b0b657c-91ca-420d-870a-08699094f5e4",
                        "envId": "7cc0463b-f7be-418d-8a64-84fbad13ab00"
                      }
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "scopes"
                ],
                "properties": {
                  "scopes": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "scope",
                        "context_params"
                      ],
                      "properties": {
                        "scope": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255
                        },
                        "context_params": {
                          "type": "object",
                          "maxProperties": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Connected application scopes were successfully replaced"
          }
        }
      },
      "patch": {
        "description": "Assigns additional context-aware scopes to the connected application.\nDoes not unassign any existing scopes.\nDuplicate entries are ignored.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "scopes": [
                    {
                      "scope": "api:admin",
                      "context_params": {
                        "org": "8b0b657c-91ca-420d-870a-08699094f5e4",
                        "envId": "7cc0463b-f7be-418d-8a64-84fbad13ab00"
                      }
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "scopes"
                ],
                "properties": {
                  "scopes": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "scope",
                        "context_params"
                      ],
                      "properties": {
                        "scope": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255
                        },
                        "context_params": {
                          "type": "object",
                          "maxProperties": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Connected application scopes were successfully assigned"
          }
        }
      },
      "delete": {
        "description": "Unassigns context-aware scopes from the connected application.\nScopes must exactly match in order to be removed.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "scopes": [
                    {
                      "scope": "api:admin",
                      "context_params": {
                        "org": "8b0b657c-91ca-420d-870a-08699094f5e4",
                        "envId": "7cc0463b-f7be-418d-8a64-84fbad13ab00"
                      }
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "scopes"
                ],
                "properties": {
                  "scopes": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "scope",
                        "context_params"
                      ],
                      "properties": {
                        "scope": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255
                        },
                        "context_params": {
                          "type": "object",
                          "maxProperties": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Connected application scopes were successfully unassigned"
          }
        }
      }
    },
    "/connectedApplications/{clientId}/revoke": {
      "parameters": [
        {
          "name": "clientId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "description": "Revoke all access tokens and refresh tokens issued to the connected application",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "All tokens were revoked successfully"
          }
        }
      }
    },
    "/invites": {
      "description": "Invite people to join the organization",
      "get": {
        "description": "get outstanding or expired invites that match the criteria",
        "x-amf-is": [
          "offset-paginated",
          {
            "pagination-collection": {
              "type": "invites.Invite",
              "example": "{\n  \"data\": [\n    {\n      \"id\": 520,\n      \"code\": \"f2e8dfab-6699-4889-831f-6dc6f8428cb0\",\n      \"invited_at\": \"2015-01-30T22:23:55.433Z\",\n      \"invited_email\": \"christopher.mordue@mulesoft.com\",\n      \"invited_by_user\": {\n        \"id\": \"57e281b5-ec5b-4701-80a0-92a936a68da3\",\n        \"username\": \"organization_owner\",\n        \"first_name\": \"Organization2\",\n        \"last_name\": \"Owner\"\n      },\n      \"invited_to_org\": {\n        \"id\": \"f0c9b011-980e-4928-9430-e60e3a97c043\",\n        \"name\": \"MuleSoft Inc\"\n      },\n      \"expires_at\": \"2015-04-10T22:23:55.433Z\",\n      \"status\": \"INVITED\",\n      \"completed_at\": null,\n      \"completed_by_user\": null,\n      \"role_groups\": [\n        {\n          \"name\": \"Organization Administrators\",\n          \"role_group_id\": \"0b19f6df-ed81-4fd1-b5e7-4921f5e46f4c\"\n        }\n      ]\n    }\n  ],\n  \"total\": 1\n}"
            }
          },
          {
            "searchable": {
              "targetDesc": "invited emails"
            }
          },
          {
            "sortable_2": {
              "field_1": "invited_email",
              "field_2": "invited_at",
              "default": "invited_email"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "orgId",
            "description": "the id of the organization that the invites are for joining.",
            "required": true,
            "in": "query",
            "schema": {
              "description": "the id of the organization that the invites are for joining.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request; unknown organization, bad parameter or other failure"
          }
        }
      },
      "post": {
        "description": "Invite a person to join the organization",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "email": "christopher.mordue@mulesoft.com",
                    "teams": [
                      {
                        "team_id": "f59632be-e43f-4c4f-a303-36b8b0623f29",
                        "membership_type": "member"
                      }
                    ]
                  }
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/InviteNewList"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 520,
                      "code": "f2e8dfab-6699-4889-831f-6dc6f8428cb0",
                      "invited_at": "2015-01-30T22:23:55.433Z",
                      "invited_email": "christopher.mordue@mulesoft.com",
                      "invited_by_user": {
                        "id": "57e281b5-ec5b-4701-80a0-92a936a68da3",
                        "username": "organization_owner",
                        "first_name": "Organization2",
                        "last_name": "Owner"
                      },
                      "invited_to_org": {
                        "id": "f0c9b011-980e-4928-9430-e60e3a97c043",
                        "name": "MuleSoft Inc"
                      },
                      "expires_at": "2015-04-10T22:23:55.433Z",
                      "status": "INVITED",
                      "completed_at": null,
                      "completed_by_user": null,
                      "role_groups": [
                        {
                          "name": "Organization Administrators",
                          "role_group_id": "0b19f6df-ed81-4fd1-b5e7-4921f5e46f4c"
                        }
                      ]
                    }
                  ],
                  "type": "array",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/InviteList"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request; unknown organization, bad parameter or other failure"
          }
        }
      },
      "delete": {
        "description": "Invite a person to join your organization",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  520
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/InvitesIds"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request; unknown organization, bad parameter or no invite was deleted"
          }
        }
      }
    },
    "/invites/{inviteId}": {
      "description": "Invite resource",
      "parameters": [
        {
          "name": "inviteId",
          "description": "The ID of the invite",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The ID of the invite",
            "type": "integer"
          }
        }
      ],
      "get": {
        "description": "get an invite",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 520,
                    "code": "f2e8dfab-6699-4889-831f-6dc6f8428cb0",
                    "invited_at": "2015-01-30T22:23:55.433Z",
                    "invited_email": "christopher.mordue@mulesoft.com",
                    "invited_by_user": {
                      "id": "57e281b5-ec5b-4701-80a0-92a936a68da3",
                      "username": "organization_owner",
                      "first_name": "Organization2",
                      "last_name": "Owner"
                    },
                    "invited_to_org": {
                      "id": "f0c9b011-980e-4928-9430-e60e3a97c043",
                      "name": "MuleSoft Inc"
                    },
                    "expires_at": "2015-04-10T22:23:55.433Z",
                    "status": "INVITED",
                    "completed_at": null,
                    "completed_by_user": null,
                    "teams": [
                      {
                        "team_name": "IT",
                        "team_id": "f59632be-e43f-4c4f-a303-36b8b0623f29",
                        "membership_type": "member"
                      }
                    ]
                  },
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/Invite"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request; bad parameter or other failure"
          },
          "404": {
            "description": "No invite exists in this organization for the given inviteId"
          }
        }
      }
    },
    "/invites/accept": {
      "get": {
        "description": "Redirect to anypoint signin to accept an invite",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {}
      }
    },
    "/invites/resend": {
      "description": "Resend invites",
      "post": {
        "description": "Resend a list of invites",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  520
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/InvitesIds"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "succeeded": [
                      520
                    ],
                    "failed": []
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/InvitesResendResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "One or more of the invites are not in the organization or no invites were sent"
          }
        }
      }
    },
    "/users": {},
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/users/{userId}/teams": {
      "parameters": [
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns a list of teams the user is a member of",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "team name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"team_id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n      \"team_name\": \"IT\",\n      \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n      \"org_name\": \"Mythical Bank\",\n      \"team_type\": \"internal\",\n      \"ancestor_team_ids\": [\"6cad8143-5f3c-4258-8091-2e664819e7f3\"],\n      \"created_at\": \"2019-07-15T09:36:07.123Z\",\n      \"updated_at\": \"2019-07-15T09:36:07.123Z\",\n      \"membership_type\": \"maintainer\",\n      \"is_assigned_via_external_groups\": false\n    }\n  ],\n  \"total\": 1\n}\n",
              "type": "teams.TeamIsMemberOf"
            }
          },
          {
            "sortable_3": {
              "field_1": "team_name",
              "field_2": "created_at",
              "field_3": "team_id",
              "default": "team_name"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "ancestor_team_id",
            "description": "team_id that must appear in the team's ancestor_team_ids.",
            "in": "query",
            "schema": {
              "description": "team_id that must appear in the team's ancestor_team_ids.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "parent_team_id",
            "description": "team_id of the immediate parent of the team to return.",
            "in": "query",
            "schema": {
              "description": "team_id of the immediate parent of the team to return.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_type",
            "description": "return only teams that are of this type",
            "required": false,
            "in": "query",
            "schema": {
              "description": "return only teams that are of this type",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "membership_type",
            "description": "return only teams where the user is this type of member",
            "required": false,
            "in": "query",
            "schema": {
              "description": "return only teams where the user is this type of member",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/roles": {},
    "/roles/users": {},
    "/roles/users/search": {
      "description": "Search users by role assignments",
      "post": {
        "description": "Seach users by role assignments",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "name": "expression",
                    "operator": "AND",
                    "operands": [
                      {
                        "role_id": "b7711f5b-6d74-440b-84f1-0648e84f8ebc",
                        "context_params": {
                          "org": "8b2ce61f-9ebb-4f2a-98e8-bfe730bb90a2"
                        },
                        "match_type": "exact"
                      },
                      {
                        "role_id": "b5860f29-7e8e-4a87-8264-b3759d976e90",
                        "context_params": {
                          "org": "8b2ce61f-9ebb-4f2a-98e8-bfe730bb90a2"
                        },
                        "match_type": "partial"
                      }
                    ]
                  },
                  {
                    "name": "pagination",
                    "limit": 25,
                    "offset": 0
                  },
                  {
                    "name": "sort",
                    "order": "ASC",
                    "field": "id"
                  }
                ],
                "type": "array",
                "maxItems": 3,
                "minItems": 1,
                "uniqueItems": true,
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "operator",
                        "operands"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "operator": {
                          "enum": [
                            "AND",
                            "OR"
                          ],
                          "type": "string"
                        },
                        "operands": {
                          "type": "array",
                          "maxItems": 5,
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "role_id",
                              "context_params",
                              "match_type"
                            ],
                            "properties": {
                              "role_id": {
                                "type": "string",
                                "minLength": 36,
                                "maxLength": 36
                              },
                              "context_params": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "match_type": {
                                "default": "partial",
                                "enum": [
                                  "exact",
                                  "partial"
                                ],
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "limit",
                        "offset"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 500.0
                        },
                        "offset": {
                          "type": "number",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "order",
                        "field"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "order": {
                          "enum": [
                            "ASC",
                            "DESC"
                          ],
                          "type": "string"
                        },
                        "field": {
                          "enum": [
                            "id",
                            "first_name",
                            "firstName",
                            "last_name",
                            "lastName",
                            "username"
                          ],
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "id": "d5d309ee-8c23-49e3-bec1-70ee99c42061",
                        "username": "Immanuel1234",
                        "firstName": "Immanuel",
                        "lastName": "Jagerson",
                        "email": "Immanuel@gmail.com",
                        "enabled": true,
                        "idprovider_id": "mulesoft",
                        "type": "host",
                        "createdAt": "Mon Feb 09 2015 17:47:26 GMT-0300 (ART)",
                        "updatedAt": "Mon Feb 09 2015 17:47:26 GMT-0300 (ART)",
                        "lastLogin": "Mon Feb 09 2015 17:47:26 GMT-0300 (ART)",
                        "organizationId": "7f30ff47-5917-4a5a-b94d-9fe029edc04d",
                        "assignments": [
                          {
                            "role_id": "833ab9ca-0c72-45ba-9764-1df83240db57",
                            "context_params": {
                              "org": "7f30ff47-5917-4a5a-b94d-9fe029edc04d",
                              "user": "d5d309ee-8c23-49e3-bec1-70ee99c42061"
                            },
                            "created_at": "2019-10-21T11:11:48.204521-07:00"
                          },
                          {
                            "role_id": "e3284047-6334-4580-b441-53afe7598b6e",
                            "context_params": {
                              "org": "7f30ff47-5917-4a5a-b94d-9fe029edc04d",
                              "envId": "4c4efd56-9232-4f41-bb5c-4990539d519f"
                            },
                            "created_at": "2019-10-21T11:11:48.204521-07:00"
                          }
                        ]
                      }
                    ],
                    "total": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/rolegroups": {},
    "/roles/rolegroups/search": {
      "description": "Search rolegroups by role assignments",
      "post": {
        "description": "Search rolegroups by role assignments",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "name": "expression",
                    "operator": "AND",
                    "operands": [
                      {
                        "role_id": "b7711f5b-6d74-440b-84f1-0648e84f8ebc",
                        "context_params": {
                          "org": "8b2ce61f-9ebb-4f2a-98e8-bfe730bb90a2"
                        },
                        "match_type": "exact"
                      },
                      {
                        "role_id": "b5860f29-7e8e-4a87-8264-b3759d976e90",
                        "context_params": {
                          "org": "8b2ce61f-9ebb-4f2a-98e8-bfe730bb90a2"
                        },
                        "match_type": "partial"
                      }
                    ]
                  },
                  {
                    "name": "pagination",
                    "limit": 25,
                    "offset": 0
                  },
                  {
                    "name": "sort",
                    "order": "ASC",
                    "field": "role_group_id"
                  }
                ],
                "type": "array",
                "maxItems": 3,
                "minItems": 1,
                "uniqueItems": true,
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "operator",
                        "operands"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "operator": {
                          "enum": [
                            "AND",
                            "OR"
                          ],
                          "type": "string"
                        },
                        "operands": {
                          "type": "array",
                          "maxItems": 5,
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "role_id",
                              "context_params",
                              "match_type"
                            ],
                            "properties": {
                              "role_id": {
                                "type": "string",
                                "minLength": 36,
                                "maxLength": 36
                              },
                              "context_params": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "match_type": {
                                "default": "partial",
                                "enum": [
                                  "exact",
                                  "partial"
                                ],
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "limit",
                        "offset"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 25.0
                        },
                        "offset": {
                          "type": "number",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "order",
                        "field"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "order": {
                          "enum": [
                            "ASC",
                            "DESC"
                          ],
                          "type": "string"
                        },
                        "field": {
                          "enum": [
                            "role_group_id",
                            "name"
                          ],
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "created_at": "2021-02-27T01:32:59.572Z",
                        "updated_at": "2021-02-27T01:32:59.572Z",
                        "role_group_id": "1af07a40-cf95-4ed5-a312-7bd453576ac9",
                        "name": "f25df118-08c9-496d-9689-3690eeac6eba",
                        "description": "d50d05da-880a-4d75-beab-d3c2c1398e10",
                        "org_id": "7dc95b9d-aae3-426c-a86d-7f6b19265af1",
                        "editable": true,
                        "external_names": [
                          {
                            "external_group_name": "my external group",
                            "provider_id": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67"
                          }
                        ],
                        "user_count": 1,
                        "assignments": [
                          {
                            "role_id": "f5b8dd3e-8988-4f39-afab-79f86c710cd4",
                            "context_params": {
                              "org": "7dc95b9d-aae3-426c-a86d-7f6b19265af1"
                            },
                            "created_at": "2021-02-26T17:32:59.606836"
                          }
                        ],
                        "org_name": "and Sons0"
                      }
                    ],
                    "total": 1
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/RoleGroupApiResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/roles/teams": {
      "description": "Teams by role"
    },
    "/roles/teams/search": {
      "description": "Search teams by role assignments",
      "post": {
        "description": "Search teams by role assignments",
        "x-amf-is": [
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"team_id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n      \"team_name\": \"IT\",\n      \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n      \"org_name\": \"Mythical Bank\",\n      \"team_type\": \"internal\",\n      \"ancestor_team_ids\": [\"6cad8143-5f3c-4258-8091-2e664819e7f3\"],\n      \"created_at\": \"2019-07-15T09:36:07.123Z\",\n      \"updated_at\": \"2019-07-15T09:36:07.123Z\",\n      \"assignments\": [\n        {\n          \"role_id\": \"53823f29-6e57-4c42-acdb-e42a881a888f\",\n          \"name\": \"Manage Servers\",\n          \"context_params\": {\n            \"org\": \"7f30ff47-5917-4a5a-b94d-9fe029edc04d\",\n            \"envId\": \"4c4efd56-9232-4f41-bb5c-4990539d519f\"\n          },\n          \"created_at\": \"2019-10-21T11:11:48.204521-07:00\"\n        }\n      ]\n    }\n  ],\n  \"total\": 1\n}\n",
              "type": "teams.TeamRoleSearchResult"
            }
          },
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "name": "expression",
                    "operator": "AND",
                    "operands": [
                      {
                        "role_id": "b7711f5b-6d74-440b-84f1-0648e84f8ebc",
                        "context_params": {
                          "org": "8b2ce61f-9ebb-4f2a-98e8-bfe730bb90a2"
                        },
                        "match_type": "exact"
                      },
                      {
                        "role_id": "b5860f29-7e8e-4a87-8264-b3759d976e90",
                        "context_params": {
                          "org": "8b2ce61f-9ebb-4f2a-98e8-bfe730bb90a2"
                        },
                        "match_type": "partial"
                      }
                    ]
                  },
                  {
                    "name": "pagination",
                    "limit": 25,
                    "offset": 0
                  },
                  {
                    "name": "sort",
                    "order": "ASC",
                    "field": "team_name"
                  }
                ],
                "type": "array",
                "maxItems": 3,
                "minItems": 1,
                "uniqueItems": true,
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "operator",
                        "operands"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "operator": {
                          "enum": [
                            "AND",
                            "OR"
                          ],
                          "type": "string"
                        },
                        "operands": {
                          "type": "array",
                          "maxItems": 5,
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "role_id",
                              "context_params",
                              "match_type"
                            ],
                            "properties": {
                              "role_id": {
                                "type": "string",
                                "minLength": 36,
                                "maxLength": 36
                              },
                              "context_params": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "match_type": {
                                "default": "partial",
                                "enum": [
                                  "exact",
                                  "partial"
                                ],
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "limit",
                        "offset"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 25.0
                        },
                        "offset": {
                          "type": "number",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "order",
                        "field"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "order": {
                          "enum": [
                            "ASC",
                            "DESC"
                          ],
                          "type": "string"
                        },
                        "field": {
                          "enum": [
                            "team_id",
                            "name",
                            "team_name",
                            "first_name",
                            "firstName",
                            "last_name",
                            "lastName",
                            "username"
                          ],
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {}
      }
    },
    "/recover": {
      "description": "recover user's account"
    },
    "/recover/username": {
      "post": {
        "description": "sends email with list of usernames associated with the given email",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "email": "christopher.mordue@mulesoft.com"
                },
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "email was sent or no users are associated with the given email"
          },
          "400": {
            "description": "Bad request; missing email parameter"
          }
        },
        "security": [
          {
            "null": []
          }
        ]
      }
    },
    "/recover/password": {
      "post": {
        "description": "sends a 'forgot password' email with password reset link to the email associated with the given username",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "username": "cmordue"
                },
                "type": "object",
                "required": [
                  "username"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "email was sent or user with username does not exist",
            "content": {
              "text/plain": {
                "schema": {
                  "example": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad request; missing username parameter"
          }
        },
        "security": [
          {
            "null": []
          }
        ]
      }
    },
    "/recover/password/{recoverCode}": {
      "description": "reset password",
      "parameters": [
        {
          "name": "recoverCode",
          "description": "A code sent in a password reset email used to prove the bearer has the right to change a user's password",
          "required": true,
          "in": "path",
          "schema": {
            "description": "A code sent in a password reset email used to prove the bearer has the right to change a user's password",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Checks the validity of the password reset code",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "the code is valid",
            "content": {
              "text/plain": {
                "schema": {
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "description": "the code does not exist"
          }
        },
        "security": [
          {
            "null": []
          }
        ]
      },
      "post": {
        "description": "Sets a new password for the user associated with the password reset code",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "password": "Password1",
                  "confirmPassword": "Password1"
                },
                "type": "object",
                "required": [
                  "password",
                  "confirmPassword"
                ],
                "properties": {
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "confirmPassword": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "the password was successfully reset",
            "content": {
              "text/plain": {
                "schema": {
                  "example": "OK"
                }
              }
            }
          },
          "400": {
            "description": "any of the code, password or confirmPassword are missing or password and confirmPassword do not match"
          },
          "404": {
            "description": "the code does not exist"
          }
        },
        "security": [
          {
            "null": []
          }
        ]
      }
    },
    "/cs": {},
    "/cs/connectedApplications": {
      "get": {
        "description": "Search endpoint over all Connected Applications the caller might want to whitelist.\nReturns all public Connected Applications, as well as all applications in the caller's own organization.\nDoes not return disabled applications.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "offset-paginated",
          {
            "searchable": {
              "targetDesc": "client id or client name"
            }
          },
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"client_id\": \"0fa2aa2f0aeb4978b96796a0843f898c\",\n      \"owner_org_id\": \"0eb65884-4f75-48f7-a8bc-4e30b46e721d\",\n      \"client_name\": \"Client Credz\",\n      \"client_uri\": null,\n      \"policy_uri\": null,\n      \"tos_uri\": null\n    },\n    {\n      \"client_id\": \"e8c28f0249a6417bb892ff8d6013d628\",\n      \"owner_org_id\": \"0eb65884-4f75-48f7-a8bc-4e30b46e721d\",\n      \"client_name\": \"OpenID Integration\",\n      \"client_uri\": null,\n      \"policy_uri\": null,\n      \"tos_uri\": null\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "connectedApplications.PublicConnectedApplication"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "search for specific client_id",
            "in": "query",
            "schema": {
              "description": "search for specific client_id",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/cs/login/{domain}/metadata": {
      "parameters": [
        {
          "name": "domain",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get the metadata (isFederated, name) for the organization domain.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "isFederated": true,
                    "name": "domain"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Domain not found"
          }
        }
      }
    },
    "/cs/users/{userId}/rolegroups": {
      "parameters": [
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get all the user rolegroup assignments the caller has permission to see\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "role_group_id": "36c6f48a-f26a-44b0-9789-dd8edd0f2df9",
                        "name": "Organization Administrators",
                        "description": "Organization Administrators",
                        "external_names": [],
                        "editable": false,
                        "org_id": "27a9bd7e-f962-4287-94ff-b3f4ae7a2c20",
                        "created_at": "2019-07-15T09:36:07.123Z",
                        "updated_at": "2019-07-15T09:36:07.123Z",
                        "context_params": {},
                        "user_role_group_id": "9ca1f615-45f8-4f36-86a0-ed1fe43cb551",
                        "user_count": 1
                      },
                      {
                        "role_group_id": "458b2756-6dfe-459a-9266-b5e79e5d074c",
                        "name": "Cloudhub Admin (Sandbox)",
                        "description": "Cloudhub (Sandbox) Admin users",
                        "external_names": [],
                        "editable": false,
                        "org_id": "27a9bd7e-f962-4287-94ff-b3f4ae7a2c20",
                        "created_at": "2019-07-15T09:36:07.123Z",
                        "updated_at": "2019-07-15T09:36:07.123Z",
                        "context_params": {},
                        "user_role_group_id": "3502c24f-eaac-49c6-bf1e-b2c19b1f8db8",
                        "user_count": 1
                      },
                      {
                        "role_group_id": "52de3521-906e-406f-8930-517897b0a0ee",
                        "name": "Cloudhub Admin (Sandbox)",
                        "description": "Cloudhub (Sandbox) Admin users",
                        "external_names": [],
                        "editable": false,
                        "org_id": "27a9bd7e-f962-4287-94ff-b3f4ae7a2c20",
                        "created_at": "2019-07-15T09:36:07.123Z",
                        "updated_at": "2019-07-15T09:36:07.123Z",
                        "context_params": {},
                        "user_role_group_id": "37cbeba9-e489-4309-85cc-ff6d4a3035e3",
                        "user_count": 1
                      },
                      {
                        "role_group_id": "95ab11f7-43be-4f7e-abc7-d258d6eb439a",
                        "name": "Organization Administrators",
                        "description": "Organization Administrators",
                        "external_names": [],
                        "editable": false,
                        "org_id": "27a9bd7e-f962-4287-94ff-b3f4ae7a2c20",
                        "created_at": "2019-07-15T09:36:07.123Z",
                        "updated_at": "2019-07-15T09:36:07.123Z",
                        "context_params": {},
                        "user_role_group_id": "3b01414f-57d4-44cf-85b4-e357cd381827",
                        "user_count": 1
                      },
                      {
                        "role_group_id": "bca51325-54e5-41fa-9cfa-0e1b64cefa01",
                        "name": "Cloudhub Admin (Design)",
                        "description": "Cloudhub (Design) Admin users",
                        "external_names": [],
                        "editable": false,
                        "org_id": "27a9bd7e-f962-4287-94ff-b3f4ae7a2c20",
                        "created_at": "2019-07-15T09:36:07.123Z",
                        "updated_at": "2019-07-15T09:36:07.123Z",
                        "context_params": {},
                        "user_role_group_id": "c345d5b6-7df5-4220-9731-d754f4dd79db",
                        "user_count": 1
                      },
                      {
                        "role_group_id": "d0473f21-8424-4aea-9fec-be54b9f84cf8",
                        "name": "Cloudhub Admin (Design)",
                        "description": "Cloudhub (Design) Admin users",
                        "external_names": [],
                        "editable": false,
                        "org_id": "27a9bd7e-f962-4287-94ff-b3f4ae7a2c20",
                        "created_at": "2019-07-15T09:36:07.123Z",
                        "updated_at": "2019-07-15T09:36:07.123Z",
                        "context_params": {},
                        "user_role_group_id": "c1757a9f-a72c-440c-a775-c125ce4fa466",
                        "user_count": 1
                      }
                    ],
                    "total": 6
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/RoleGroupApiResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cs/scopes": {
      "get": {
        "description": "Retrieve all scopes currently enabled in the platform.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "scope": "openid",
                      "displayName": "Profile Data",
                      "description": "Read-only access to your Profile Data (username, email, unique ID)"
                    },
                    {
                      "scope": "offline_access",
                      "displayName": "Background Access",
                      "description": "Access to your data when you are not logged in"
                    },
                    {
                      "scope": "api:admin",
                      "displayName": "API Admin",
                      "description": "Admin access to your applications in the API Portal"
                    }
                  ],
                  "type": "array",
                  "minItems": 1,
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "scope",
                      "displayName",
                      "description"
                    ],
                    "properties": {
                      "scope": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 256
                      },
                      "displayName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 256
                      },
                      "description": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 256
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cs/scopeAssignments": {
      "get": {
        "description": "Retrieve all eligible scope assignment contexts the caller has permission to assign to a client_credentials domain client.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "organizations": [
                      {
                        "id": "2cd73eff-e862-4b4e-b596-84cf8eb6f11d",
                        "name": "The Master Org",
                        "environments": [
                          {
                            "id": "9d8b7b39-7744-4ab7-9fb6-a75a343c5ee4",
                            "name": "Prod"
                          },
                          {
                            "id": "2d6660fe-d5fc-4da6-90bd-68fc17b478f7",
                            "name": "Design"
                          }
                        ]
                      },
                      {
                        "id": "0e6700dc-41a1-4234-889e-908d9d6df3e2",
                        "name": "A Sub-Org",
                        "environments": [
                          {
                            "id": "f16f1c35-c517-4442-8f73-36d0879e5832",
                            "name": "Sandbox"
                          },
                          {
                            "id": "f84ab301-17d4-4ed0-9beb-0c977e98045c",
                            "name": "Sub-Org Sandbox"
                          }
                        ]
                      }
                    ],
                    "scopes": [
                      {
                        "scope": "api:admin",
                        "displayName": "API Admin",
                        "description": "Admin access to your applications in the API Portal",
                        "requiredContext": "orgWithEnv"
                      },
                      {
                        "scope": "org:read",
                        "displayName": "Read Organization Data",
                        "description": "Read-only access to your organization data",
                        "requiredContext": "orgOnly"
                      },
                      {
                        "scope": "profile",
                        "displayName": "Read Anypoint Profile",
                        "description": "Read-only access to your Anypoint Profile",
                        "requiredContext": "none"
                      }
                    ]
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "organizations",
                    "scopes"
                  ],
                  "properties": {
                    "organizations": {
                      "type": "array",
                      "minItems": 1,
                      "uniqueItems": true,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "id",
                          "name",
                          "environments"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "environments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "name"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "scope",
                          "displayName",
                          "description",
                          "requiredContext"
                        ],
                        "properties": {
                          "scope": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 256
                          },
                          "displayName": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 256
                          },
                          "description": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 256
                          },
                          "requiredContext": {
                            "enum": [
                              "orgOnly",
                              "orgWithEnv",
                              "none"
                            ],
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cs/conditionalAssignments": {
      "get": {
        "description": "Retrieve all elegible scope and role assignment contexts the caller has permission to assign to another identity,\nalong with all platform data used to draw the UI for each product tab\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "intent",
            "description": "The caller's intent for how they will use the context data - whether for a role assignment, scope assignment, or scope delegation request\n",
            "in": "query",
            "schema": {
              "description": "The caller's intent for how they will use the context data - whether for a role assignment, scope assignment, or scope delegation request\n",
              "enum": [
                "role_assignment",
                "scope_assignment",
                "scope_request"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "organizations": [
                      {
                        "id": "2cd73eff-e862-4b4e-b596-84cf8eb6f11d",
                        "name": "The Master Org",
                        "isMaster": true,
                        "environments": [
                          {
                            "id": "9d8b7b39-7744-4ab7-9fb6-a75a343c5ee4",
                            "name": "Prod",
                            "type": "production"
                          },
                          {
                            "id": "2d6660fe-d5fc-4da6-90bd-68fc17b478f7",
                            "name": "Design",
                            "type": "design"
                          }
                        ]
                      },
                      {
                        "id": "0e6700dc-41a1-4234-889e-908d9d6df3e2",
                        "name": "A Sub-Org",
                        "isMaster": false,
                        "environments": [
                          {
                            "id": "f16f1c35-c517-4442-8f73-36d0879e5832",
                            "name": "Americas",
                            "type": "design"
                          },
                          {
                            "id": "f84ab301-17d4-4ed0-9beb-0c977e98045c",
                            "name": "Sub-Org Sandbox",
                            "type": "sandbox"
                          }
                        ]
                      }
                    ],
                    "products": [
                      {
                        "product_id": "api_manager",
                        "label": "API Manager",
                        "permissions": [
                          {
                            "displayName": "API Manager Environment Administrator",
                            "contextKeys": [
                              "org",
                              "envId"
                            ],
                            "scope": "manage:apis",
                            "role_id": "f14b0d23-a267-4014-9563-29d46a26295b",
                            "description": "Manage all APIs inside a specific environment",
                            "conditions": []
                          },
                          {
                            "displayName": "Manage Policies",
                            "contextKeys": [
                              "org",
                              "envId"
                            ],
                            "scope": "manage:api_policies",
                            "role_id": "92000113-61b8-4d82-a98f-7d36275d6bc6",
                            "description": "Manage all APIs policies inside a specific environment",
                            "conditions": []
                          }
                        ]
                      },
                      {
                        "product_id": "cloudhub",
                        "label": "We Changed Our Name Too Many Times",
                        "permissions": [
                          {
                            "displayName": "Read Applications",
                            "contextKeys": [
                              "org",
                              "envId"
                            ],
                            "scope": "read:applications",
                            "role_id": "3c91e5ca-fe58-441f-b6ab-a2be0a684bbf",
                            "description": "Gives read access to applications in a specific environment",
                            "conditions": [
                              "noDesignEnvironments"
                            ]
                          }
                        ]
                      },
                      {
                        "product_id": "visualizer",
                        "label": "Application Visualizer",
                        "permissions": [
                          {
                            "displayName": "Visualizer Editor",
                            "contextKeys": [
                              "org"
                            ],
                            "scope": "edit:visualizer",
                            "role_id": "6a78512a-8c75-4744-ad24-87e6e5847e73",
                            "description": "Grants write and read access to Visualizer",
                            "conditions": [
                              "noSubOrganizations"
                            ]
                          }
                        ]
                      },
                      {
                        "product_id": "cs_auth",
                        "label": "Access Management",
                        "permissions": [
                          {
                            "displayName": "openidConnect",
                            "contextKeys": [],
                            "scope": "openid",
                            "role_id": "9f3f516d-4355-491c-bbf1-523b1480dcce",
                            "description": "Read-only access to your username and Anypoint ID",
                            "conditions": []
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/ConditionalAssignments"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cs/organizations/{orgId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/cs/organizations/{orgId}/administrators": {
      "description": "Experience API over an organization's administrators (teams & users)\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Experience API for getting a list of users that administer an organization\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "firstName, lastName, email or username of the user"
            }
          },
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"id\": \"462ddd98-edd2-423b-9218-9f8e0f4c42ba\",\n      \"username\": \"anypointadmin\",\n      \"firstName\": \"Admin\",\n      \"lastName\": \"Admin\",\n      \"email\": \"mulesoft.library+admin@gmail.com\",\n      \"organizationId\": \"68ef9520-24e9-4cf2-b2f5-620025690913\",\n      \"enabled\": true,\n      \"idprovider_id\": \"mulesoft\",\n      \"context_params\": {}\n    }\n  ],\n  \"total\": 1\n}\n",
              "type": "users.UserAbbrevated"
            }
          },
          "offset-paginated",
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "id": "462ddd98-edd2-423b-9218-9f8e0f4c42ba",
                        "username": "anypointadmin",
                        "firstName": "Admin",
                        "lastName": "Admin",
                        "email": "mulesoft.library+admin@gmail.com",
                        "organizationId": "68ef9520-24e9-4cf2-b2f5-620025690913",
                        "enabled": true,
                        "idprovider_id": "mulesoft",
                        "context_params": {}
                      }
                    ],
                    "total": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cs/organizations/{orgId}/clientProviders": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the list of client management belonging to the organization along with the details of number of environments using it.\n",
        "x-amf-is": [
          "offset-paginated",
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "provider_id",
            "description": "One or more ids of the provider(s) to return.\n",
            "in": "query",
            "schema": {
              "description": "One or more ids of the provider(s) to return.\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "providerId": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67",
                        "organizationId": "2e71d283-6248-4c81-98eb-e254a89b7e0a",
                        "name": "Production Client Management Config",
                        "type": {
                          "description": "PingFederate",
                          "name": "ping"
                        },
                        "associatedEnvironmentCount": 5
                      }
                    ],
                    "total": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cs/organizations/{orgId}/clientProviders/{clientProviderId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientProviderId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/cs/organizations/{orgId}/clientProviders/{clientProviderId}/environments": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientProviderId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the associated environments details.",
        "x-amf-is": [
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"id\": \"226909a3-7ad6-4f4f-8e2e-f8091c9e11d6\",\n      \"name\": \"test-env\",\n      \"type\": \"sandbox\",\n      \"organization_name\": \"mulesoft\"\n    }\n  ],\n  \"total\": 3\n}\n",
              "type": "clientProviders.associatedEnvironments"
            }
          },
          "rate-limited"
        ],
        "responses": {}
      }
    },
    "/cs/organizations/{orgId}/connectedApplications/authorizations": {
      "description": "Permissions granted to connected applications by users within the organization.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns all the authorizations that grant access to resources in the organization.\nIf a user is specified, it will return the authorization_id of the (user, client) pairing.\nIf a user is not specified, the count of the users that authorize the app will be returned.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "offset-paginated",
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "user_id",
            "description": "Only return authorizations granted by that user",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Only return authorizations granted by that user",
              "example": "3f7eb03b-1e53-4dd7-8304-c7f52cef183d",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "x-amf-examples": {
                    "rolled up by client": {
                      "data": [
                        {
                          "client_id": "d5e32198-7cc1-4c26-ab83-fd8912e16967",
                          "client_name": "RAML Sync Tool",
                          "client_uri": "https://ramlsynctool.com/about.html",
                          "tos_uri": "https://ramlsynctool.com/tos.html",
                          "policy_uri": "https://ramlsynctool.com/privacy.html",
                          "user_authorized_scopes": [
                            "profile",
                            "read:raml"
                          ],
                          "attached_scopes": [
                            "profile",
                            "offline_access",
                            "read:raml",
                            "read:users"
                          ],
                          "whitelisted_scopes": [
                            "profile",
                            "read:raml",
                            "read:users"
                          ],
                          "user_count": 5,
                          "is_internal_app": false,
                          "whitelist_applies_to_app": true,
                          "whitelist_outdated": true
                        }
                      ],
                      "total": 1
                    },
                    "for a single user": {
                      "data": [
                        {
                          "authorization_id": "d75aae72-d7ee-4a3f-b997-e6a11275e48a",
                          "client_id": "d5e32198-7cc1-4c26-ab83-fd8912e16967",
                          "client_name": "RAML Sync Tool",
                          "client_uri": "https://ramlsynctool.com/about.html",
                          "tos_uri": "https://ramlsynctool.com/tos.html",
                          "policy_uri": "https://ramlsynctool.com/privacy.html",
                          "scopes": [
                            "read:raml",
                            "read:users",
                            "offline_access"
                          ]
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cs/organizations/{orgId}/connectedApplications": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/cs/organizations/{orgId}/connectedApplications/{clientId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "description": "Deletes the ownerless connected App if the Org has composer entitlement",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Connected Application was successfully deleted"
          }
        }
      }
    },
    "/cs/organizations/{orgId}/externalAccess": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "description": "Offboards the organization from external access\nThis API will only be called by Platform Administrators\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/cs/organizations/{orgId}/externalAccess/domainTest": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Checks to see if the domain is a valid target to grant external access priviledges to\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "domain",
            "description": "A domain or lost of domains to check",
            "required": true,
            "in": "query",
            "schema": {
              "description": "A domain or lost of domains to check",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "domain": "foo",
                      "shareable": true,
                      "details": {
                        "name": "Foo Banking",
                        "id": "fff6cf9b-2ade-4563-bf9d-03953592a170"
                      }
                    },
                    {
                      "domain": "bar",
                      "shareable": false,
                      "details": {}
                    }
                  ],
                  "type": "array",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/DomainTestsResultArray"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cs/organizations/{orgId}/externalAccess/relations": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns all external access relations configured for the organization\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "domain": "domain-1",
                      "details": {
                        "name": "Mythical Banking",
                        "id": "450e1b65-4cdd-4269-b887-33b1f8b244fc"
                      }
                    },
                    {
                      "domain": "domain-2",
                      "details": {
                        "name": "Anypoint Services",
                        "id": "1f720705-46bf-48b9-9bcf-fdc539740532"
                      }
                    }
                  ],
                  "type": "array",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/OrganizationExternalAccessDetailedArray"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Replaces the external access relations configured for the organization\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/OrganizationExternalAccessArray"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid relation"
          }
        }
      }
    },
    "/cs/organizations/{orgId}/environments": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the list of environments belonging to the organization along with the details of the suggested client management provider for those environment's\n",
        "x-amf-is": [
          "offset-paginated",
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "id": "f0c9b011-980e-4928-9430-e60e3a97c043",
                        "organizationId": "70b3f7cb-614c-4276-b0cd-4f73db11602c",
                        "name": "Development",
                        "isProduction": true,
                        "type": "production",
                        "clientId": "abdf31490ba44484a1de789baf685e37",
                        "defaultClientManagementProvider": {
                          "providerId": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67",
                          "organizationId": "2e71d283-6248-4c81-98eb-e254a89b7e0a",
                          "name": "Production Client Management Config",
                          "type": {
                            "description": "PingFederate",
                            "name": "ping"
                          }
                        },
                        "suggestedClientManagementProviderCount": 3
                      }
                    ],
                    "total": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cs/organizations/{org}": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/cs/organizations/{org}/hubSpokeRelations": {
      "description": "API to initiate the linking process between the hub and spoke organizations. Initiated from the hub org.\n",
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Invite spoke orgs to be linked with the hub Organization",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  "83e8126e-0369-46de-9da5-c9410bfa7ac5",
                  "e8f5a3e4-0840-4dd8-b812-976afc39000a"
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/RelationsNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 600,
                      "invited_at": "2022-01-13T19:51:55.433Z",
                      "invited_by_user": {
                        "id": "d4691cf7-6cf6-4eb0-b095-87a3b2072a0a",
                        "username": "hub_org_admin",
                        "first_name": "HubOrgAdmin",
                        "last_name": "Administrator"
                      },
                      "hub_org": {
                        "id": "025abacc-e018-4e38-a117-8c1e6251006c",
                        "name": "Anypoint Org"
                      },
                      "spoke_org": {
                        "id": "c731e714-35c2-4e08-98ae-9b843129f4fb",
                        "name": "Composer Org 1"
                      },
                      "status": "PENDING",
                      "completed_at": null,
                      "completed_by_user": null
                    },
                    {
                      "id": 601,
                      "invited_at": "2022-01-13T19:51:55.433Z",
                      "invited_by_user": {
                        "id": "d4691cf7-6cf6-4eb0-b095-87a3b2072a0a",
                        "username": "hub_org_admin",
                        "first_name": "HubOrgAdmin",
                        "last_name": "Administrator"
                      },
                      "hub_org": {
                        "id": "025abacc-e018-4e38-a117-8c1e6251006c",
                        "name": "Anypoint Org"
                      },
                      "spoke_org": {
                        "id": "74b1bbb0-d8e4-4c34-a501-2cce62d7df9e",
                        "name": "Composer Org 2"
                      },
                      "status": "PENDING",
                      "completed_at": null,
                      "completed_by_user": null
                    }
                  ],
                  "type": "array",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/RelationsList"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "description": "Show the existing hub spoke relations based on the status. Only accessible by hub admin",
        "x-amf-is": [
          "offset-paginated",
          {
            "pagination-collection": {
              "type": "hubSpokeRelations.Relations",
              "example": "{\n  \"data\": [\n    {\n      \"id\": 600,\n      \"invited_at\": \"2022-01-13T19:51:55.433Z\",\n      \"invited_by_user\": {\n        \"id\": \"d4691cf7-6cf6-4eb0-b095-87a3b2072a0a\",\n        \"username\": \"hub_org_admin\",\n        \"first_name\": \"HubOrgAdmin\",\n        \"last_name\": \"Administrator\"\n      },\n      \"hub_org\": {\n        \"id\": \"025abacc-e018-4e38-a117-8c1e6251006c\",\n        \"name\": \"Anypoint Org\"\n      },\n      \"spoke_org\": {\n        \"id\": \"c731e714-35c2-4e08-98ae-9b843129f4fb\",\n        \"name\": \"Composer Org 1\"\n      },\n      \"status\": \"PENDING\",\n      \"completed_at\": null,\n      \"completed_by_user\": null\n    }\n  ],\n  \"total\": 1\n}\n"
            }
          },
          {
            "sortable_3": {
              "field_1": "id",
              "field_2": "status",
              "field_3": "invited_at",
              "default": "invited_at"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "status",
            "description": "returns the relation invites based on the status.",
            "in": "query",
            "schema": {
              "description": "returns the relation invites based on the status.",
              "enum": [
                "all",
                "pending",
                "rejected",
                "accepted",
                "unlinked"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request; unknown organization, bad parameter or other failure"
          }
        }
      }
    },
    "/cs/organizations/{org}/hubSpokeRelations/{hubSpokeRelationId}": {
      "description": "Relation Invite resource",
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "hubSpokeRelationId",
          "description": "The ID of the hub Spoke Relation Invite",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The ID of the hub Spoke Relation Invite",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "get the hubSpoke Relation invite",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 600,
                    "invited_at": "2022-01-13T19:51:55.433Z",
                    "invited_by_user": {
                      "id": "d4691cf7-6cf6-4eb0-b095-87a3b2072a0a",
                      "username": "hub_org_admin",
                      "first_name": "HubOrgAdmin",
                      "last_name": "Administrator"
                    },
                    "hub_org": {
                      "id": "025abacc-e018-4e38-a117-8c1e6251006c",
                      "name": "Anypoint Org"
                    },
                    "spoke_org": {
                      "id": "c731e714-35c2-4e08-98ae-9b843129f4fb",
                      "name": "Composer Org 1"
                    },
                    "status": "PENDING",
                    "completed_at": null,
                    "completed_by_user": null
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/Relations"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request; bad parameter or other failure"
          },
          "404": {
            "description": "No relation invite exists in this organization for the given hubSpokeRelationId"
          }
        }
      }
    },
    "/cs/organizations/{org}/hubSpokeRelations/{hubSpokeRelationId}/reject": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "hubSpokeRelationId",
          "description": "The ID of the hub Spoke Relation Invite",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The ID of the hub Spoke Relation Invite",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Reject the hub spoke relation invite. Only accessible by spoke admin",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request; unknown organization, bad parameter or other failure"
          },
          "404": {
            "description": "No relation invite exists for the given hubSpokeRelationId"
          }
        }
      }
    },
    "/cs/organizations/{org}/identities": {
      "description": "Experience API over an organization's identities (teams & users)\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Experience API for getting/searching over an organization's identities (users, teams, and organizations)\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "firstName, lastName, email or username of a user, name of a team, or name or domain of an organization"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n      \"name\": \"IT\",\n      \"type\": \"team\",\n      \"details\": {\n        \"team_id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n        \"team_name\": \"IT\",\n        \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n        \"org_name\": \"Mythical Bank\",\n        \"team_type\": \"internal\",\n        \"ancestor_team_ids\": [\"6cad8143-5f3c-4258-8091-2e664819e7f3\"],\n        \"created_at\": \"2019-07-15T09:36:07.123Z\",\n        \"updated_at\": \"2019-07-15T09:36:07.123Z\"\n      }\n    },\n    {\n      \"id\": \"d5d309ee-8c23-49e3-bec1-70ee99c42061\",\n      \"name\": \"Immanuel1234\",\n      \"type\": \"user\",\n      \"details\": {\n        \"id\": \"d5d309ee-8c23-49e3-bec1-70ee99c42061\",\n        \"username\": \"example1234\",\n        \"firstName\": \"Example\",\n        \"lastName\": \"Test\",\n        \"email\": \"example1234@example.com\",\n        \"enabled\": true,\n        \"idprovider_id\": \"mulesoft\",\n        \"type\": \"host\",\n        \"createdAt\": \"Mon Feb 09 2015 17:47:26 GMT-0300 (ART)\",\n        \"updatedAt\": \"Mon Feb 09 2015 17:47:26 GMT-0300 (ART)\",\n        \"lastLogin\": \"Mon Feb 09 2015 17:47:26 GMT-0300 (ART)\",\n        \"organizationId\": \"7f30ff47-5917-4a5a-b94d-9fe029edc04d\"\n      }\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "identities.IdentityWithDetailsAndMembershipCount"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "identity_type",
            "description": "type of identity to query by. Can be either 'user', 'team', or 'organization'",
            "required": false,
            "in": "query",
            "schema": {
              "description": "type of identity to query by. Can be either 'user', 'team', or 'organization'",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "identity_id",
            "description": "One or more ids of the identities to return",
            "required": false,
            "in": "query",
            "schema": {
              "description": "One or more ids of the identities to return",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include_membership_count",
            "description": "include membership counts on teams that are included in the response",
            "required": false,
            "in": "query",
            "schema": {
              "description": "include membership counts on teams that are included in the response",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/cs/organizations/{org}/identities/roles": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Experience API to update role assignments to identities (teams, users, external organizations) in bulk\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "assign": [
                    {
                      "identity_ids": [
                        "f59632be-e43f-4c4f-a303-36b8b0623f29"
                      ],
                      "role_id": "53823f29-6e57-4c42-acdb-e42a881a888f",
                      "context_params": {
                        "org": "7f30ff47-5917-4a5a-b94d-9fe029edc04d",
                        "envId": "4c4efd56-9232-4f41-bb5c-4990539d519f"
                      }
                    },
                    {
                      "identity_ids": [
                        "f59632be-e43f-4c4f-a303-36b8b0623f29",
                        "d5d309ee-8c23-49e3-bec1-70ee99c42061"
                      ],
                      "role_id": "8b7caaba-e94a-11e4-b02c-1681e6b88ec1",
                      "context_params": {
                        "org": "7f30ff47-5917-4a5a-b94d-9fe029edc04d",
                        "envId": "4c4efd56-9232-4f41-bb5c-4990539d519f"
                      }
                    }
                  ],
                  "unassign": [
                    {
                      "identity_ids": [
                        "f59632be-e43f-4c4f-a303-36b8b0623f29"
                      ],
                      "role_id": "8b7caaba-e94a-11e4-b02c-1681e6b88ec1",
                      "context_params": {
                        "org": "7f30ff47-5917-4a5a-b94d-9fe029edc04d",
                        "envId": "5d8bbc1f-a123-4034-bef2-01333db12eec"
                      }
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/IdentitiesBulkRoleUpdateOperation"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "One of the parameters (role_id, identity_id, context_params) is not valid for this organization"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/cs/organizations/{org}/identities/roles/search": {
      "description": "Experience API to search for identities by role assignments\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Search identities by role assignments",
        "x-amf-is": [
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"id\": \"55a17d8e-093f-4865-884c-f00f3c60711b\",\n      \"name\": \"ACME\",\n      \"type\": \"external_organization\",\n      \"details\": {\n        \"id\": \"55a17d8e-093f-4865-884c-f00f3c60711b\",\n        \"name\": \"ACME\",\n        \"domain\": \"acme-inc\"\n      },\n      \"assignments\": [\n        {\n          \"role_id\": \"53823f29-6e57-4c42-acdb-e42a881a888f\",\n          \"name\": \"Manage Servers\",\n          \"context_params\": {\n            \"org\": \"7f30ff47-5917-4a5a-b94d-9fe029edc04d\",\n            \"envId\": \"4c4efd56-9232-4f41-bb5c-4990539d519f\"\n          },\n          \"created_at\": \"2020-01-02T15:36:07.123Z\"\n        }\n      ]\n    },\n    {\n      \"id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n      \"name\": \"IT\",\n      \"type\": \"team\",\n      \"details\": {\n        \"team_id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n        \"team_name\": \"IT\",\n        \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n        \"org_name\": \"Mythical Bank\",\n        \"team_type\": \"internal\",\n        \"ancestor_team_ids\": [\"6cad8143-5f3c-4258-8091-2e664819e7f3\"],\n        \"created_at\": \"2019-07-15T09:36:07.123Z\",\n        \"updated_at\": \"2019-07-15T09:36:07.123Z\"\n      },\n      \"assignments\": [\n        {\n          \"role_id\": \"53823f29-6e57-4c42-acdb-e42a881a888f\",\n          \"name\": \"Manage Servers\",\n          \"context_params\": {\n            \"org\": \"7f30ff47-5917-4a5a-b94d-9fe029edc04d\",\n            \"envId\": \"4c4efd56-9232-4f41-bb5c-4990539d519f\"\n          },\n          \"created_at\": \"2019-07-15T09:36:07.123Z\"\n        }\n      ]\n    },\n    {\n      \"id\": \"d5d309ee-8c23-49e3-bec1-70ee99c42061\",\n      \"name\": \"Immanuel1234\",\n      \"type\": \"user\",\n      \"details\": {\n        \"id\": \"d5d309ee-8c23-49e3-bec1-70ee99c42061\",\n        \"username\": \"example1234\",\n        \"firstName\": \"Example\",\n        \"lastName\": \"Test\",\n        \"email\": \"example1234@example.com\",\n        \"enabled\": true,\n        \"idprovider_id\": \"mulesoft\",\n        \"type\": \"host\",\n        \"createdAt\": \"Mon Feb 09 2015 17:47:26 GMT-0300 (ART)\",\n        \"updatedAt\": \"Mon Feb 09 2015 17:47:26 GMT-0300 (ART)\",\n        \"lastLogin\": \"Mon Feb 09 2015 17:47:26 GMT-0300 (ART)\",\n        \"organizationId\": \"7f30ff47-5917-4a5a-b94d-9fe029edc04d\"\n      },\n      \"assignments\": [\n        {\n          \"role_id\": \"53823f29-6e57-4c42-acdb-e42a881a888f\",\n          \"name\": \"Manage Servers\",\n          \"context_params\": {\n            \"org\": \"7f30ff47-5917-4a5a-b94d-9fe029edc04d\",\n            \"envId\": \"d5d309ee-8c23-49e3-bec1-70ee99c42061\"\n          },\n          \"created_at\": \"2019-07-15T09:36:07.123Z\"\n        },\n        {\n          \"role_id\": \"53823f29-6e57-4c42-acdb-e42a881a888f\",\n          \"name\": \"Manage Servers\",\n          \"context_params\": {\n            \"org\": \"7f30ff47-5917-4a5a-b94d-9fe029edc04d\",\n            \"envId\": \"4c4efd56-9232-4f41-bb5c-4990539d519f\"\n          },\n          \"created_at\": \"2019-07-15T09:36:07.123Z\"\n        }\n      ]\n    }\n  ],\n  \"total\": 3\n}\n",
              "type": "identities.IdentityRoleSearchResult"
            }
          },
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "name": "expression",
                    "operator": "AND",
                    "operands": [
                      {
                        "role_id": "b7711f5b-6d74-440b-84f1-0648e84f8ebc",
                        "context_params": {
                          "org": "8b2ce61f-9ebb-4f2a-98e8-bfe730bb90a2"
                        },
                        "match_type": "exact"
                      },
                      {
                        "role_id": "b5860f29-7e8e-4a87-8264-b3759d976e90",
                        "context_params": {
                          "org": "8b2ce61f-9ebb-4f2a-98e8-bfe730bb90a2"
                        },
                        "match_type": "partial"
                      }
                    ]
                  },
                  {
                    "name": "pagination",
                    "limit": 25,
                    "offset": 0
                  }
                ],
                "type": "array",
                "maxItems": 2,
                "minItems": 1,
                "uniqueItems": true,
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "operator",
                        "operands"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "operator": {
                          "enum": [
                            "AND",
                            "OR"
                          ],
                          "type": "string"
                        },
                        "operands": {
                          "type": "array",
                          "maxItems": 5,
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "role_id",
                              "context_params",
                              "match_type"
                            ],
                            "properties": {
                              "role_id": {
                                "type": "string",
                                "minLength": 36,
                                "maxLength": 36
                              },
                              "context_params": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "match_type": {
                                "default": "partial",
                                "enum": [
                                  "exact",
                                  "partial"
                                ],
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "limit",
                        "offset"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 25.0
                        },
                        "offset": {
                          "type": "number",
                          "minimum": 0.0
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {}
      }
    },
    "/cs/organizations/{org}/identityProviders": {
      "description": "Experience API over an organization's Identity Providers\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/cs/organizations/{org}/identityProviders/names": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Experience API over an organization's Identity Providers's names\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "provider_id": "2e71d283-6248-4c81-98eb-e254a89b7e0a",
                      "name": "Primary Identity Management Config",
                      "idprovider_id": "https://example.com:example.anypoint.mulesoft.com"
                    },
                    {
                      "provider_id": "00f5d684-c4ed-4c50-8a8e-cdcd0df1dd11",
                      "name": "Secondary Identity Management Config"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cs/organizations/{org}/rolegroups": {
      "description": "Experience API over an organization's rolegroups.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/cs/organizations/{org}/rolegroups/delete_empty": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "description": "Deletes all empty rolegroups associated with the organization.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/cs/organizations/{org}/rolegroups/{roleGroupId}": {
      "description": "Experience API over a specific rolegroup\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "roleGroupId",
          "description": "The ID of the role group in GUID format",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The ID of the role group in GUID format",
            "type": "string"
          }
        }
      ]
    },
    "/cs/organizations/{org}/rolegroups/{roleGroupId}/migrate": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "roleGroupId",
          "description": "The ID of the role group in GUID format",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The ID of the role group in GUID format",
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Migrates a specific rolegroup to a Team or Permission format. This process is irreversable.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "kind": "merge_with_team",
                  "target_team_id": "69602cfc-18f5-4a65-b6a4-00e33e1bf88e"
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/RolegroupMigrationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. Data is returned when a new team is created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/RolegroupMigrationResponse"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "Success. No data is returned when rolegroups are converted to permissions or merged with an existing team."
          },
          "404": {
            "description": "Team or rolegroup not found"
          }
        }
      }
    },
    "/cs/organizations/{org}/users": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/cs/organizations/{org}/users/{userId}": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/cs/organizations/{org}/users/{userId}/teams": {
      "description": "Experience API over user's teams\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Experience API for getting/searching over user's teams\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "team name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"team_id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n      \"team_name\": \"IT\",\n      \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n      \"org_name\": \"Mythical Bank\",\n      \"team_type\": \"internal\",\n      \"ancestor_team_ids\": [\"6cad8143-5f3c-4258-8091-2e664819e7f3\"],\n      \"created_at\": \"2019-07-15T09:36:07.123Z\",\n      \"updated_at\": \"2019-07-15T09:36:07.123Z\",\n      \"is_assigned_via_external_groups\": false,\n      \"membership_count\": 31,\n      \"membership_type\": \"member\",\n      \"ancestors\": [\n        {\n          \"team_id\": \"6cad8143-5f3c-4258-8091-2e664819e7f3\",\n          \"team_name\": \"Mythical Bank all\",\n          \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n          \"org_name\": \"Mythical Bank\",\n          \"team_type\": \"internal\",\n          \"ancestor_team_ids\": [],\n          \"created_at\": \"2019-07-10T08:36:07.123Z\",\n          \"updated_at\": \"2019-07-11T16:46:27.123Z\"\n        }\n      ]\n    },\n    {\n      \"team_id\": \"6cad8143-5f3c-4258-8091-2e664819e7f3\",\n      \"team_name\": \"Mythical Bank all\",\n      \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n      \"org_name\": \"Mythical Bank\",\n      \"team_type\": \"internal\",\n      \"ancestor_team_ids\": [],\n      \"created_at\": \"2019-07-10T08:36:07.123Z\",\n      \"updated_at\": \"2019-07-11T16:46:27.123Z\",\n      \"is_assigned_via_external_groups\": false,\n      \"membership_count\": 360,\n      \"membership_type\": \"member\",\n      \"ancestors\": []\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "teamsExperienceApi.TeamExtended"
            }
          },
          {
            "sortable_3": {
              "field_1": "team_name",
              "field_2": "created_at",
              "field_3": "team_id",
              "default": "team_name"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "ancestor_team_id",
            "description": "team_id that must appear in the team's ancestor_team_ids.",
            "in": "query",
            "schema": {
              "description": "team_id that must appear in the team's ancestor_team_ids.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "parent_team_id",
            "description": "team_id of the immediate parent of the team to return.",
            "in": "query",
            "schema": {
              "description": "team_id of the immediate parent of the team to return.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include_ancestors",
            "description": "return ancestor teams for each result",
            "in": "query",
            "schema": {
              "description": "return ancestor teams for each result",
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "include_capabilities",
            "description": "return the actions the caller is allowed to take over each team",
            "in": "query",
            "schema": {
              "description": "return the actions the caller is allowed to take over each team",
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "membership_type",
            "description": "return only teams where the caller has a specific membership_type",
            "in": "query",
            "schema": {
              "description": "return only teams where the caller has a specific membership_type",
              "enum": [
                "member",
                "maintainer"
              ],
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "description": "One or more ids of the team(s) to return. Type should be primitives.IdString but Osprey can't\nhandle custom types in query params\n",
            "in": "query",
            "schema": {
              "description": "One or more ids of the team(s) to return. Type should be primitives.IdString but Osprey can't\nhandle custom types in query params\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/cs/organizations/{org}/users/{userId}/roles": {
      "description": "Experience API for getting all role assignments for a user, whether direct or inherited\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Experience API for getting all role assignments for a user, whether direct or inherited\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"organization_id\": \"dec88a92-657b-4a36-a5e6-101c990ec2fa\",\n      \"organization_name\": \"Mythical\",\n      \"environment_id\": \"86cace9d-44e5-4a6f-bb14-b24f9f8ac7b1\",\n      \"environment_name\": \"Design\",\n      \"data\": [\n        {\n          \"product_id\": \"product_1\",\n          \"role_ids\": [\n            \"1\"\n          ]\n        },\n        {\n          \"product_id\": \"product_2\",\n          \"role_ids\": [\n            \"3\"\n          ]\n        }\n      ]\n    },\n    {\n      \"organization_id\": \"dec88a92-657b-4a36-a5e6-101c990ec2fa\",\n      \"organization_name\": \"Mythical\",\n      \"environment_id\": null,\n      \"environment_name\": null,\n      \"data\": [\n        {\n          \"product_id\": \"product_1\",\n          \"role_ids\": [\n            \"2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "teamsExperienceApi.RoleAssignmentsByContext"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "envId",
            "description": "environmentId to filter context by",
            "in": "query",
            "schema": {
              "description": "environmentId to filter context by",
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "description": "organizationId to filter context by",
            "in": "query",
            "schema": {
              "description": "organizationId to filter context by",
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/cs/organizations/{org}/teamAddMemberOptions": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Experience API over all potential teams the caller may add members to\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "team name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"team_id\": \"1d0cd3f3-4a5d-41ec-a9a1-1aa63b1a61c5\",\n      \"team_name\": \"Potential New Parent A\"\n    },\n    {\n      \"team_id\": \"f44a37bf-6a35-4e8a-baaa-3314e336c008\",\n      \"team_name\": \"Potential New Parent B\"\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "teamsExperienceApi.TeamAbbreviated"
            }
          },
          "rate-limited"
        ],
        "responses": {}
      }
    },
    "/cs/organizations/{org}/teamNewParentOptions": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Experience API over the potential new parents of a team\nEither team_id or team_type must be provided\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "team name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"team_id\": \"1d0cd3f3-4a5d-41ec-a9a1-1aa63b1a61c5\",\n      \"team_name\": \"Potential New Parent A\"\n    },\n    {\n      \"team_id\": \"f44a37bf-6a35-4e8a-baaa-3314e336c008\",\n      \"team_name\": \"Potential New Parent B\"\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "teamsExperienceApi.TeamAbbreviated"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "team_id",
            "description": "id of the team whose new parent options shoud be returned",
            "in": "query",
            "schema": {
              "description": "id of the team whose new parent options shoud be returned",
              "type": "string"
            }
          },
          {
            "name": "team_type",
            "description": "type of the team whose new parent options should be returned",
            "in": "query",
            "schema": {
              "description": "type of the team whose new parent options should be returned",
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/cs/organizations/{org}/teams": {
      "description": "Experience API over an organization's teams\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Experience API for getting/searching over an organization's teams\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "team name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"team_id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n      \"team_name\": \"IT\",\n      \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n      \"org_name\": \"Mythical Bank\",\n      \"team_type\": \"internal\",\n      \"ancestor_team_ids\": [\"6cad8143-5f3c-4258-8091-2e664819e7f3\"],\n      \"created_at\": \"2019-07-15T09:36:07.123Z\",\n      \"updated_at\": \"2019-07-15T09:36:07.123Z\",\n      \"is_assigned_via_external_groups\": false,\n      \"membership_count\": 31,\n      \"membership_type\": \"member\",\n      \"ancestors\": [\n        {\n          \"team_id\": \"6cad8143-5f3c-4258-8091-2e664819e7f3\",\n          \"team_name\": \"Mythical Bank all\",\n          \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n          \"org_name\": \"Mythical Bank\",\n          \"team_type\": \"internal\",\n          \"ancestor_team_ids\": [],\n          \"created_at\": \"2019-07-10T08:36:07.123Z\",\n          \"updated_at\": \"2019-07-11T16:46:27.123Z\"\n        }\n      ]\n    },\n    {\n      \"team_id\": \"6cad8143-5f3c-4258-8091-2e664819e7f3\",\n      \"team_name\": \"Mythical Bank all\",\n      \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n      \"org_name\": \"Mythical Bank\",\n      \"team_type\": \"internal\",\n      \"ancestor_team_ids\": [],\n      \"created_at\": \"2019-07-10T08:36:07.123Z\",\n      \"updated_at\": \"2019-07-11T16:46:27.123Z\",\n      \"is_assigned_via_external_groups\": false,\n      \"membership_count\": 360,\n      \"membership_type\": \"member\",\n      \"ancestors\": []\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "teamsExperienceApi.TeamExtended"
            }
          },
          {
            "sortable_3": {
              "field_1": "team_name",
              "field_2": "created_at",
              "field_3": "team_id",
              "default": "team_name"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "ancestor_team_id",
            "description": "team_id that must appear in the team's ancestor_team_ids.",
            "in": "query",
            "schema": {
              "description": "team_id that must appear in the team's ancestor_team_ids.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "parent_team_id",
            "description": "team_id of the immediate parent of the team to return.",
            "in": "query",
            "schema": {
              "description": "team_id of the immediate parent of the team to return.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include_ancestors",
            "description": "return ancestor teams for each result",
            "in": "query",
            "schema": {
              "description": "return ancestor teams for each result",
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "include_capabilities",
            "description": "return the actions the caller is allowed to take over each team",
            "in": "query",
            "schema": {
              "description": "return the actions the caller is allowed to take over each team",
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "membership_type",
            "description": "return only teams where the caller has a specific membership_type. Use \"none\" to return teams where the user is not a member.",
            "in": "query",
            "schema": {
              "description": "return only teams where the caller has a specific membership_type. Use \"none\" to return teams where the user is not a member.",
              "enum": [
                "member",
                "maintainer",
                "none"
              ],
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "description": "One or more ids of the team(s) to return. Type should be primitives.IdString but Osprey can't\nhandle custom types in query params\n",
            "in": "query",
            "schema": {
              "description": "One or more ids of the team(s) to return. Type should be primitives.IdString but Osprey can't\nhandle custom types in query params\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/cs/organizations/{org}/teams/{teamId}": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "teamId",
          "description": "id of the team",
          "required": true,
          "in": "path",
          "schema": {
            "description": "id of the team",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Experience API over an organization's team\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "include_ancestors",
            "description": "return ancestor teams for each result",
            "in": "query",
            "schema": {
              "description": "return ancestor teams for each result",
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "include_capabilities",
            "description": "return the actions the caller is allowed to take over each team",
            "in": "query",
            "schema": {
              "description": "return the actions the caller is allowed to take over each team",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "team_id": "f59632be-e43f-4c4f-a303-36b8b0623f29",
                    "team_name": "IT",
                    "org_id": "6cb9cf0c-de02-4403-ace9-1857c0d0425f",
                    "org_name": "Mythical Bank",
                    "team_type": "internal",
                    "ancestor_team_ids": [
                      "6cad8143-5f3c-4258-8091-2e664819e7f3"
                    ],
                    "created_at": "2019-07-15T09:36:07.123Z",
                    "updated_at": "2019-07-15T09:36:07.123Z",
                    "is_assigned_via_external_groups": false,
                    "membership_count": 31,
                    "membership_type": "member",
                    "ancestors": [
                      {
                        "team_id": "6cad8143-5f3c-4258-8091-2e664819e7f3",
                        "team_name": "Mythical Bank all",
                        "org_id": "6cb9cf0c-de02-4403-ace9-1857c0d0425f",
                        "org_name": "Mythical Bank",
                        "team_type": "internal",
                        "ancestor_team_ids": [],
                        "created_at": "2019-07-10T08:36:07.123Z",
                        "updated_at": "2019-07-11T16:46:27.123Z"
                      }
                    ],
                    "external_group_mappings": {
                      "total": 2,
                      "data": [
                        {
                          "membership_type": "maintainer",
                          "external_group_name": "maintainer_group"
                        },
                        {
                          "membership_type": "member",
                          "external_group_name": "member_group"
                        }
                      ]
                    }
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/TeamExtended"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cs/organizations/{org}/teams/{teamId}/roles": {
      "parameters": [
        {
          "name": "org",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "teamId",
          "description": "id of the team",
          "required": true,
          "in": "path",
          "schema": {
            "description": "id of the team",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Experience API over roles assigned to a team. Returns results grouped by context.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "x-amf-is": [
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"organization_id\": \"dec88a92-657b-4a36-a5e6-101c990ec2fa\",\n      \"organization_name\": \"Mythical\",\n      \"environment_id\": \"86cace9d-44e5-4a6f-bb14-b24f9f8ac7b1\",\n      \"environment_name\": \"Design\",\n      \"data\": [\n        {\n          \"product_id\": \"product_1\",\n          \"role_ids\": [\n            \"1\"\n          ]\n        },\n        {\n          \"product_id\": \"product_2\",\n          \"role_ids\": [\n            \"3\"\n          ]\n        }\n      ]\n    },\n    {\n      \"organization_id\": \"dec88a92-657b-4a36-a5e6-101c990ec2fa\",\n      \"organization_name\": \"Mythical\",\n      \"environment_id\": null,\n      \"environment_name\": null,\n      \"data\": [\n        {\n          \"product_id\": \"product_1\",\n          \"role_ids\": [\n            \"2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "teamsExperienceApi.RoleAssignmentsByContext"
            }
          },
          "offset-paginated",
          "rate-limited"
        ],
        "responses": {}
      }
    },
    "/cs/resources": {},
    "/cs/resources/authorize": {
      "description": "Retrieve authorized resource(s) on behalf of an actor",
      "post": {
        "description": "Specify resource(s) for an actor",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "actor": {
                    "userId": "4b353f44-6486-42ae-ae77-18b4032f9643",
                    "clientId": "f0c9b011-980e-4928-9430-e60e3a97c043",
                    "clientType": "platform",
                    "context": "user"
                  },
                  "resourceDetails": [
                    {
                      "namespace": "somenamespace1",
                      "action": "GET",
                      "resources": [
                        "/api/users",
                        "/api/clients"
                      ]
                    },
                    {
                      "namespace": "somenamespace2",
                      "action": "GET",
                      "resources": [
                        "/api/users",
                        "/api/clients"
                      ]
                    },
                    {
                      "namespace": "somenamespace3",
                      "action": "GET",
                      "resources": [
                        "/api/users",
                        "/api/clients"
                      ]
                    }
                  ]
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/AuthorizeResourcesTypes"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "namespace": "somenamespace1",
                      "action": "GET",
                      "resources": [
                        "/api/users",
                        "/api/clients"
                      ],
                      "authorizedResources": [
                        "/api/users"
                      ]
                    },
                    {
                      "namespace": "somenamespace2",
                      "action": "GET",
                      "resources": [
                        "/api/users",
                        "/api/clients"
                      ],
                      "authorizedResources": [
                        "/api/users",
                        "/api/clients"
                      ]
                    },
                    {
                      "namespace": "somenamespace3",
                      "action": "GET",
                      "resources": [
                        "/api/users",
                        "/api/clients"
                      ],
                      "authorizedResources": [
                        "/api/users",
                        "/api/clients"
                      ]
                    }
                  ],
                  "type": "array",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/AuthorizedResourcesResponseTypes"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad request parameters"
          },
          "401": {
            "description": "Invalid credentials. Authentication failed!"
          },
          "403": {
            "description": "Forbidden. Caller does not have authorization to access this endpoint"
          },
          "404": {
            "description": "Actor does not exist"
          }
        }
      }
    },
    "/cs/resources/connectedApplications": {},
    "/cs/resources/connectedApplications/authorization": {
      "description": "Retrieve whether a given connected app is authorized by a user.",
      "get": {
        "description": "Given a user_id and client_id (connected app), determine whether user has authorized the connected app.",
        "parameters": [
          {
            "name": "user_id",
            "required": true,
            "in": "query",
            "schema": {
              "example": "3f7eb03b-1e53-4dd7-8304-c7f52cef183d",
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "required": true,
            "in": "query",
            "schema": {
              "example": "d5e32198-7cc1-4c26-ab83-fd8912e16967",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "authorization_id": "231245124",
                    "created_at": "2018-01-26T22:39:02.312Z",
                    "updated_at": "2018-01-26T22:39:02.312Z",
                    "last_used": "2018-01-26T22:39:02.312Z",
                    "user_id": "b65f412f-7d36-4109-b196-9d5ad07c2083",
                    "client_id": "d5e32198-7cc1-4c26-ab83-fd8912e16967",
                    "as_id": "anypoint",
                    "scopes": [
                      "read:raml",
                      "read:users",
                      "offline_access"
                    ]
                  },
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/UserAuthorization"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cs/resources/connectedApplications/refreshTokens": {
      "description": "Determine whether a refresh token is issued for a given user and a connected application.",
      "get": {
        "description": "Given a user_id and client_id (Connected App), determine whether refresh token(s) are issued or not.",
        "parameters": [
          {
            "name": "user_id",
            "required": true,
            "in": "query",
            "schema": {
              "example": "3f7eb03b-1e53-4dd7-8304-c7f52cef183d",
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "required": true,
            "in": "query",
            "schema": {
              "example": "d5e32198-7cc1-4c26-ab83-fd8912e16967",
              "type": "string"
            }
          },
          {
            "name": "as_id",
            "required": true,
            "in": "query",
            "schema": {
              "example": "anypoint",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "refresh_token": "********",
                      "user_id": "3b0c42f9-edaf-4075-a61c-7e9711247a52",
                      "client_id": "78941e8d-7b57-4e90-bee6-46d5b668e4a6",
                      "next_refresh_token": "********",
                      "prev_refresh_token": "********",
                      "scopes": [
                        "openid",
                        "refresh_token",
                        "org:admin"
                      ],
                      "expires_at": 5614654321,
                      "expires_in": 8873927299
                    }
                  ],
                  "type": "array",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/RefreshTokens"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cs/resources/connectedApplications/organizationGrants": {
      "description": "Determine whether a organization's settings allow it to use a given connected application.",
      "get": {
        "description": "Given org_id, as_id and grant type, determine if the organization's settings allow the connected application with grant type to use it.",
        "parameters": [
          {
            "name": "org_id",
            "required": true,
            "in": "query",
            "schema": {
              "example": "f1040f73-8566-4638-9a5a-2447e604a318",
              "type": "string"
            }
          },
          {
            "name": "as_id",
            "required": true,
            "in": "query",
            "schema": {
              "example": "anypoint",
              "type": "string"
            }
          },
          {
            "name": "grant",
            "required": true,
            "in": "query",
            "schema": {
              "example": "client_credentials",
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "required": true,
            "in": "query",
            "schema": {
              "example": "d5e32198-7cc1-4c26-ab83-fd8912e16967",
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization's settings allows given connected application to use it.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "isSuccessful": false,
                    "errorMessages": [
                      "Connected Applications are not enabled for this organization",
                      "Grant is not allowed for organization - cannot fulfill grant"
                    ]
                  },
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/validateOrganizationSettingsForClientResult"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/oauth2": {
      "description": "oauth 2 routes"
    },
    "/oauth2/introspect": {
      "description": "Look up caller information from an access token",
      "post": {
        "description": "Look up caller information from an access token\nThis implements RFC-7662: OAuth 2.0 Token Introspection\n",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "token": "b8071e09-ece8-4edd-85f4-76a30cb732f6",
                  "token_type_hint": "access_token"
                },
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "token_type_hint": {
                    "type": "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "token_type_hint": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "active": true,
                    "token_type": "bearer",
                    "user_id": "40e238d8-9f6c-495f-b000-0029f5576041",
                    "username": "paul.hilfinger",
                    "client_id": null,
                    "iat": 1539823220995,
                    "exp": 1539857830528
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/support": {
      "description": "Support portal",
      "get": {
        "description": "Redirect to the support portal or the getting help documentation",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "302": {
            "description": "Location header contains the link to sso into the support portal, the link to the getting help documentation or (if not signed in) the signin page"
          },
          "500": {
            "description": "Support portal not available or an unknown error occurred"
          }
        }
      }
    },
    "/organizations": {},
    "/organizations/{orgId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{orgId}/clients/search": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Search clients",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "client_id": [
                    "client1",
                    "client2"
                  ]
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/OrgClientsSearch"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "client_id": "ac_client",
                      "name": "Authorization Code",
                      "redirect_uris": [
                        "http://localhost:3004/auth/callback"
                      ],
                      "grant_types": [
                        "authorization_code",
                        "refresh_token"
                      ],
                      "properties": {
                        "additional": "meta-data"
                      },
                      "org_id": "40260a62-bbdc-469d-9330-5eec892abbbb"
                    },
                    {
                      "client_id": "rs_client",
                      "name": "Resource Server",
                      "grant_types": [
                        "validate_bearer"
                      ],
                      "properties": {
                        "additional": "meta-data"
                      },
                      "org_id": "40260a62-bbdc-469d-9330-5eec892abbbb"
                    },
                    {
                      "client_id": "ro_client",
                      "name": "Resource Owner",
                      "grant_types": [
                        "password",
                        "refresh_token"
                      ],
                      "properties": {
                        "additional": "meta-data"
                      },
                      "org_id": "40260a62-bbdc-469d-9330-5eec892abbbb"
                    },
                    {
                      "client_id": "cc_client",
                      "name": "Client Credentials",
                      "grant_types": [
                        "client_credentials"
                      ],
                      "properties": {
                        "additional": "meta-data"
                      },
                      "org_id": "40260a62-bbdc-469d-9330-5eec892abbbb"
                    },
                    {
                      "client_id": "im_client",
                      "name": "Implicit",
                      "redirect_uris": [
                        "http://localhost:3004/auth/callback"
                      ],
                      "grant_types": [
                        "implicit",
                        "validate_bearer"
                      ],
                      "properties": {
                        "additional": "meta-data"
                      },
                      "org_id": "40260a62-bbdc-469d-9330-5eec892abbbb"
                    },
                    {
                      "client_id": "cp_client",
                      "name": "Client Credentials",
                      "redirect_uris": [
                        "http://localhost:3004/auth/callback"
                      ],
                      "grant_types": [
                        "client_credentials"
                      ],
                      "org_id": "40260a62-bbdc-469d-9330-5eec892abbbb",
                      "client_management_provider_id": "b732985a-d30f-11e9-bb65-2a2ae2dbcce4"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{orgId}/connectedApplications": {
      "description": "An organization's connected application authorizations.\nAuthorizations are shared between all business groups.\nModifications are only allowed on the master organization.\n",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{orgId}/connectedApplications/authorizations": {
      "description": "Permissions granted to connected applications by users within the organization",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns all the authorizations that grant access to resources in the organization.\n",
        "x-amf-is": [
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"authorization_id\": \"456\",\n      \"created_at\": \"2018-01-26T22:39:02.312Z\",\n      \"updated_at\": \"2018-01-26T22:39:02.312Z\",\n      \"last_used\": \"2018-01-26T22:39:02.312Z\",\n      \"user_id\": \"b65f412f-7d36-4109-b196-9d5ad07c2083\",\n      \"client_id\": \"d5e32198-7cc1-4c26-ab83-fd8912e16967\",\n      \"as_id\": \"anypoint\",\n      \"scopes\": [\n        \"read:raml\",\n        \"read:users\",\n        \"offline_access\"\n      ]\n    }\n  ],\n  \"total\": 1\n}\n",
              "type": "authorization.UserAuthorization"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "user_id",
            "description": "Only return authorizations granted by that user",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Only return authorizations granted by that user",
              "example": "3f7eb03b-1e53-4dd7-8304-c7f52cef183d",
              "type": "string"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "description": "Revoke all authorizations that grant rights to accessing resources in the business group. Only available on the master organization.",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "user_id",
            "description": "Only delete authorizations granted by that user",
            "required": true,
            "in": "query",
            "schema": {
              "description": "Only delete authorizations granted by that user",
              "example": "3f7eb03b-1e53-4dd7-8304-c7f52cef183d",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "405": {
            "description": "The organization is a business group. Revoking must be done from a master organization"
          }
        }
      }
    },
    "/organizations/{orgId}/connectedApplications/authorizations/{authorizationId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "authorizationId",
          "description": "The ID of the authorization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The ID of the authorization",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns a single authorization",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "authorization_id": "231245124",
                    "created_at": "2018-01-26T22:39:02.312Z",
                    "updated_at": "2018-01-26T22:39:02.312Z",
                    "last_used": "2018-01-26T22:39:02.312Z",
                    "user_id": "b65f412f-7d36-4109-b196-9d5ad07c2083",
                    "client_id": "d5e32198-7cc1-4c26-ab83-fd8912e16967",
                    "as_id": "anypoint",
                    "scopes": [
                      "read:raml",
                      "read:users",
                      "offline_access"
                    ]
                  },
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/UserAuthorization"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Revokes an authorization. Only available on the master organization.",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "405": {
            "description": "The organization is a business group. Revoking must be done from a master organization"
          }
        }
      }
    },
    "/organizations/{orgId}/connectedApplications/settings": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the organization's Connected Application settings. For business groups, this will return the master organization's settings.",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "whitelist_enabled": false,
                    "applications_enabled": "partial",
                    "grant_types_allowed": [
                      "implicit",
                      "client_credentials",
                      "refresh_token"
                    ],
                    "whitelist_internal_applications": true
                  },
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/ConnectedApplicationSettings"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The organization does not exist"
          }
        }
      },
      "patch": {
        "description": "Updates the organization's connected application settings",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "whitelist_enabled": false,
                  "applications_enabled": "partial",
                  "grant_types_allowed": [
                    "implicit",
                    "client_credentials",
                    "refresh_token"
                  ],
                  "whitelist_internal_applications": true,
                  "whitelist": [
                    {
                      "client_id": "cba8d24f-8e6b-4615-9bb8-bc5a2c9933cd",
                      "as_id": "anypoint"
                    }
                  ]
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ConnectedApplicationSettingsUpdate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "whitelist_enabled": false,
                    "applications_enabled": "partial",
                    "grant_types_allowed": [
                      "implicit",
                      "client_credentials",
                      "refresh_token"
                    ],
                    "whitelist_internal_applications": true
                  },
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/ConnectedApplicationSettings"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The organization does not exist"
          },
          "405": {
            "description": "The organization is a business group. Settings are only editable on a master organization"
          }
        }
      }
    },
    "/organizations/{orgId}/connectedApplications/whitelist": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the entries on the organization's Connected Application whitelist",
        "x-amf-is": [
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"client_id\": \"cba8d24f-8e6b-4615-9bb8-bc5a2c9933cd\",\n      \"authorized_scopes\": [\n        \"openid\",\n        \"offline_access\",\n        \"read:organization\"\n      ]\n    }\n  ],\n  \"total\": 1\n}\n",
              "type": "connectedApplications.ConnectedApplicationSettingsWhitelistEntry"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "search for whitelist entries by specific client_id",
            "in": "query",
            "schema": {
              "description": "search for whitelist entries by specific client_id",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "404": {
            "description": "The organization does not exist"
          }
        }
      },
      "put": {
        "description": "Replaces the organization's Connected Application whitelist with a new one",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "client_id": "cf89d2b1-0f5f-4ef3-b70e-0954118d111f",
                    "authorized_scopes": [
                      "openid",
                      "offline_access",
                      "read:organization"
                    ]
                  }
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ConnectedApplicationSettingsWhitelist"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "The organization does not exist"
          },
          "405": {
            "description": "The organization is a business group. The whitelist is only editable on a master organization."
          }
        }
      },
      "patch": {
        "description": "Inserts the entries into the organization's Connected Application whitelist",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "client_id": "cf89d2b1-0f5f-4ef3-b70e-0954118d111f",
                    "authorized_scopes": [
                      "openid",
                      "offline_access",
                      "read:organization"
                    ]
                  }
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ConnectedApplicationSettingsWhitelist"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "The organization does not exist"
          },
          "405": {
            "description": "The organization is a business group. The whitelist is only editable on a master organization."
          }
        }
      },
      "delete": {
        "description": "Deletes the entries from the organization's Connected Application whitelist",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "client_id": "85ad935f-f81a-464c-93a9-5d72794f3ad6"
                  }
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ConnectedApplicationSettingsWhitelist"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "The organization does not exist"
          },
          "405": {
            "description": "The organization is a business group. The whitelist is only editable on a master organization"
          }
        }
      }
    },
    "/organizations/{orgId}/environments/{environmentId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "environmentId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{orgId}/environments/{environmentId}/clientManagementProviders": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "environmentId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Retrieves client management providers for the environment",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "returns client management providerIds for the environment",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "suggestedClientManagementProviderIds": [
                      "6a57bf06-9124-11e9-bc42-526af7764f64"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "No environment exists with that id"
          }
        }
      },
      "put": {
        "description": "Upsert client providers for the environment",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "suggestedClientManagementProviderIds": [
                    "6a57bf06-9124-11e9-bc42-526af7764f64"
                  ]
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/EnvironmentClientProviders"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "returns client management providerIds for the environment",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "suggestedClientManagementProviderIds": [
                      "6a57bf06-9124-11e9-bc42-526af7764f64"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "No environment exists with that id"
          }
        }
      }
    },
    "/organizations/{orgId}/clientProviders": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns list of client management providers for the master organization with a subset of values (providerId, organizationId, name, type (name, description, version))",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"providerId\": \"2e50e859-0042-46ff-8cf8-1ad6f0c78b67\",\n      \"organizationId\": \"2e71d283-6248-4c81-98eb-e254a89b7e0a\",\n      \"name\": \"Production Client Management Config\",\n      \"type\": {\n        \"description\": \"PingFederate\",\n        \"name\": \"ping\"\n      }\n    }\n  ],\n  \"total\": 1\n}",
              "type": "clientProviders.ExternalClientProvidersFind"
            }
          },
          {
            "sortable_2": {
              "field_1": "provider_id",
              "field_2": "name",
              "default": "provider_id"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "provider_id",
            "description": "One or more ids of the provider(s) to return.\n",
            "in": "query",
            "schema": {
              "description": "One or more ids of the provider(s) to return.\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "cp_type",
            "description": "One or more types of provider(s) to return.\n",
            "in": "query",
            "schema": {
              "description": "One or more types of provider(s) to return.\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {}
      },
      "post": {
        "description": "Adds a new client management provider for the organization. This can be called only on Master Organizations",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Production Client Management Config",
                  "type": {
                    "description": "PingFederate",
                    "name": "ping"
                  },
                  "allow_untrusted_certificates": true,
                  "oauth2_authorization_provider": {
                    "urls": {
                      "authorize": "https://example.com/as/authorization.oauth2"
                    }
                  },
                  "oauth2_token_provider": {
                    "urls": {
                      "create": "https:/example.com/as/token.oauth2"
                    }
                  },
                  "oauth2_token_validation_provider": {
                    "urls": {
                      "validate": "https://example.com/as/token.oauth2"
                    },
                    "client_id": "c123985a07a64c08ad7a12738a954471",
                    "client_secret": "********",
                    "token_mapping": {
                      "username": "username",
                      "email": "email",
                      "firstName": "firstName",
                      "lastName": "lastName",
                      "user": "user"
                    }
                  },
                  "oauth2_client_provider": {
                    "urls": {
                      "create": "https://example.com/pf-ws/rest/oauth/clients",
                      "delete": "https://example.com/pf-ws/rest/oauth/clients/{{client_id}}"
                    },
                    "username": "max.mule",
                    "password": "********",
                    "grant_types": [
                      {
                        "name": "password",
                        "label": "Resource Owner Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "implicit",
                        "label": "Implicit Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "client_credentials",
                        "label": "Client Credentials Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "authorization_code",
                        "label": "Authorization Code Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "refresh_token",
                        "label": "Refresh Token",
                        "required": false,
                        "exclude": [],
                        "depends": [
                          "authorization_code",
                          "password"
                        ]
                      }
                    ],
                    "bypass_approval_page": false,
                    "send_credentials_in_header": false
                  }
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ExternalClientProvider"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid data in body"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Organization does not exist"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/clientProviders/{clientProviderId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientProviderId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the associated client management provider config for the master organization and a subset of values (providerId, organizationId, name, type (name, description, version)) for Business Groups",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "includeSecrets",
            "description": "flag to include the secrets as part of the response or not",
            "required": true,
            "in": "query",
            "schema": {
              "description": "flag to include the secrets as part of the response or not",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "providerId": "2e71d283-6248-4c81-98eb-e254a89b7e0a",
                    "organizationId": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67",
                    "name": "Production Client Management Config",
                    "type": {
                      "description": "PingFederate",
                      "name": "ping"
                    },
                    "allow_untrusted_certificates": true,
                    "oauth2_authorization_provider": {
                      "urls": {
                        "authorize": "https://example.com/as/authorization.oauth2"
                      }
                    },
                    "oauth2_token_provider": {
                      "urls": {
                        "create": "https:/example.com/as/token.oauth2"
                      }
                    },
                    "oauth2_token_validation_provider": {
                      "urls": {
                        "validate": "https://example.com/as/token.oauth2"
                      },
                      "client_id": "c123985a07a64c08ad7a12738a954471",
                      "client_secret": "********",
                      "token_mapping": {
                        "username": "username",
                        "email": "email",
                        "firstName": "firstName",
                        "lastName": "lastName",
                        "user": "user"
                      }
                    },
                    "oauth2_client_provider": {
                      "urls": {
                        "create": "https://example.com/pf-ws/rest/oauth/clients",
                        "delete": "https://example.com/pf-ws/rest/oauth/clients/{{client_id}}"
                      },
                      "username": "max.mule",
                      "password": "********",
                      "grant_types": [
                        {
                          "name": "password",
                          "label": "Resource Owner Grant",
                          "required": false,
                          "exclude": [],
                          "depends": []
                        },
                        {
                          "name": "implicit",
                          "label": "Implicit Grant",
                          "required": false,
                          "exclude": [],
                          "depends": []
                        },
                        {
                          "name": "client_credentials",
                          "label": "Client Credentials Grant",
                          "required": false,
                          "exclude": [],
                          "depends": []
                        },
                        {
                          "name": "authorization_code",
                          "label": "Authorization Code Grant",
                          "required": false,
                          "exclude": [],
                          "depends": []
                        },
                        {
                          "name": "refresh_token",
                          "label": "Refresh Token",
                          "required": false,
                          "exclude": [],
                          "depends": [
                            "authorization_code",
                            "password"
                          ]
                        }
                      ],
                      "bypass_approval_page": false,
                      "send_credentials_in_header": false
                    }
                  },
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/ExternalClientProvider"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Client Provider ID does not exist in the Organization"
          }
        }
      },
      "put": {
        "description": "Replaces the associated client management provider config",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Production Client Management Config",
                  "type": {
                    "description": "PingFederate",
                    "name": "ping"
                  },
                  "allow_untrusted_certificates": true,
                  "oauth2_authorization_provider": {
                    "urls": {
                      "authorize": "https://example.com/as/authorization.oauth2"
                    }
                  },
                  "oauth2_token_provider": {
                    "urls": {
                      "create": "https:/example.com/as/token.oauth2"
                    }
                  },
                  "oauth2_token_validation_provider": {
                    "urls": {
                      "validate": "https://example.com/as/token.oauth2"
                    },
                    "client_id": "c123985a07a64c08ad7a12738a954471",
                    "client_secret": "********",
                    "token_mapping": {
                      "username": "username",
                      "email": "email",
                      "firstName": "firstName",
                      "lastName": "lastName",
                      "user": "user"
                    }
                  },
                  "oauth2_client_provider": {
                    "urls": {
                      "create": "https://example.com/pf-ws/rest/oauth/clients",
                      "delete": "https://example.com/pf-ws/rest/oauth/clients/{{client_id}}"
                    },
                    "username": "max.mule",
                    "password": "********",
                    "grant_types": [
                      {
                        "name": "password",
                        "label": "Resource Owner Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "implicit",
                        "label": "Implicit Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "client_credentials",
                        "label": "Client Credentials Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "authorization_code",
                        "label": "Authorization Code Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "refresh_token",
                        "label": "Refresh Token",
                        "required": false,
                        "exclude": [],
                        "depends": [
                          "authorization_code",
                          "password"
                        ]
                      }
                    ],
                    "bypass_approval_page": false,
                    "send_credentials_in_header": false
                  }
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ExternalClientProvider"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid data in body"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Client Provider ID does not exist in the Organization"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      },
      "patch": {
        "description": "Updates the associated client management provider config",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "recreateTokenValidationClient",
            "description": "flag to indicate whether to recreate token validation client on update or not",
            "required": true,
            "in": "query",
            "schema": {
              "description": "flag to indicate whether to recreate token validation client on update or not",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Production Client Management Config",
                  "type": {
                    "description": "PingFederate"
                  },
                  "allow_untrusted_certificates": true,
                  "oauth2_authorization_provider": {
                    "urls": {
                      "authorize": "https://example.com/as/authorization.oauth2"
                    }
                  },
                  "oauth2_token_provider": {
                    "urls": {
                      "create": "https:/example.com/as/token.oauth2"
                    }
                  },
                  "oauth2_token_validation_provider": {
                    "urls": {
                      "validate": "https://example.com/as/token.oauth2"
                    },
                    "client_id": "c123985a07a64c08ad7a12738a954471",
                    "client_secret": "********",
                    "token_mapping": {
                      "username": "username",
                      "email": "email",
                      "firstName": "firstName",
                      "lastName": "lastName",
                      "user": "user"
                    }
                  },
                  "oauth2_client_provider": {
                    "urls": {
                      "create": "https://example.com/pf-ws/rest/oauth/clients",
                      "delete": "https://example.com/pf-ws/rest/oauth/clients/{{client_id}}"
                    },
                    "username": "max.mule",
                    "password": "********",
                    "grant_types": [
                      {
                        "name": "password",
                        "label": "Resource Owner Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "implicit",
                        "label": "Implicit Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "client_credentials",
                        "label": "Client Credentials Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "authorization_code",
                        "label": "Authorization Code Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "refresh_token",
                        "label": "Refresh Token",
                        "required": false,
                        "exclude": [],
                        "depends": [
                          "authorization_code",
                          "password"
                        ]
                      }
                    ],
                    "bypass_approval_page": false,
                    "send_credentials_in_header": false
                  }
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ExternalClientProviderOptional"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid data in body"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Client Provider ID does not exist in the Organization"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      },
      "delete": {
        "description": "Deletes the associated client management provider",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Client Provider ID does not exist in the Organization"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/clientProviders/{clientProviderId}/grantTypes": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientProviderId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the associated client management provider type and grant types it suppports.",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "type": {
                      "description": "PingFederate",
                      "name": "ping"
                    },
                    "grant_types": [
                      {
                        "name": "password",
                        "label": "Resource Owner Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "implicit",
                        "label": "Implicit Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "client_credentials",
                        "label": "Client Credentials Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "authorization_code",
                        "label": "Authorization Code Grant",
                        "required": false,
                        "exclude": [],
                        "depends": []
                      },
                      {
                        "name": "refresh_token",
                        "label": "Refresh Token",
                        "required": false,
                        "exclude": [],
                        "depends": [
                          "authorization_code",
                          "password"
                        ]
                      }
                    ]
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/clientProvidersTypeAndGrantTypes"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{orgId}/clientProviders/{clientProviderId}/clients": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientProviderId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the clients created using this specific Client Management Provider",
        "x-amf-is": [
          "offset-paginated",
          {
            "searchable": {
              "targetDesc": "client_name"
            }
          },
          {
            "sortable_2": {
              "field_1": "client_id",
              "field_2": "client_name",
              "default": "client_id"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "One or more ids of the client(s) to return.\n",
            "in": "query",
            "schema": {
              "description": "One or more ids of the client(s) to return.\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucess",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "client_id": "8c45c1f1-d35b-42ed-b497-8c4af9e18c4e",
                        "client_name": "SampleClient",
                        "client_secret": "test-client-secret",
                        "grant_types": [
                          "implicit"
                        ],
                        "redirect_uris": [
                          "https://localhost:3000/callback",
                          "https://example.com/auth-callback"
                        ],
                        "org_id": "693ceb1a-c801-4b31-a491-8f194a624165",
                        "client_management_provider_id": "ff62313fc59845beaba2ffa79da1abc8"
                      }
                    ],
                    "total": 1
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Organization or Client Management Provider does not exist"
          }
        }
      },
      "post": {
        "description": "Adds a new client using the Client Management Provider",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "client_id": "8c45c1f1-d35b-42ed-b497-8c4af9e18c4e",
                  "client_name": "SampleClient",
                  "client_secret": "test-client-secret",
                  "grant_types": [
                    "implicit",
                    "authorization_code"
                  ],
                  "redirect_uris": [
                    "https://localhost:3000/callback",
                    "https://example.com/auth-callback"
                  ]
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ClientProviderClient"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid data in body"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Organization or Client Management Provider does not exist"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/clientProviders/{clientProviderId}/clients/{clientId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientProviderId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "clientId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the associated clients info",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "client_id": "8c45c1f1-d35b-42ed-b497-8c4af9e18c4e",
                    "client_name": "SampleClient",
                    "client_secret": "test-client-secret",
                    "grant_types": [
                      "implicit",
                      "authorization_code"
                    ],
                    "redirect_uris": [
                      "https://localhost:3000/callback",
                      "https://example.com/auth-callback"
                    ],
                    "org_id": "693ceb1a-c801-4b31-a491-8f194a624165",
                    "client_management_provider_id": "ff62313fc59845beaba2ffa79da1abc8"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "ClientId does not exist in the Organization or Client Management Provider"
          }
        }
      },
      "patch": {
        "description": "Updates the associated client",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "resetSecret",
            "description": "Asks service to reset secret as part of this operation",
            "in": "query",
            "schema": {
              "description": "Asks service to reset secret as part of this operation",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "client_id": "8c45c1f1-d35b-42ed-b497-8c4af9e18c4e",
                  "client_name": "SampleClient",
                  "client_secret": "test-client-secret",
                  "grant_types": [
                    "implicit",
                    "authorization_code"
                  ],
                  "redirect_uris": [
                    "https://localhost:3000/callback",
                    "https://example.com/auth-callback"
                  ]
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ClientProviderClient"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid data in body"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "ClientId does not exist in the Organization or Client Management Provider"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      },
      "delete": {
        "description": "Deletes the associated client",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "ClientId does not exist in the Organization or Client Management Provider"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/identityProviders": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns list of identity management providers for the master organization with a subset of values.",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"provider_id\": \"2e50e859-0042-46ff-8cf8-1ad6f0c78b67\",\n      \"org_id\": \"2e71d283-6248-4c81-98eb-e254a89b7e0a\",\n      \"name\": \"Primary Identity Management Config\",\n      \"type\": {\n        \"description\": \"OpenID Connect\",\n        \"name\": \"openid\"\n      }\n    }\n  ],\n  \"total\": 1\n}\n",
              "type": "identityProviders.ExternalIdentityProvidersFind"
            }
          },
          {
            "sortable_2": {
              "field_1": "provider_id",
              "field_2": "name",
              "default": "provider_id"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "provider_id",
            "description": "One or more ids of the provider(s) to return.\n",
            "required": false,
            "in": "query",
            "schema": {
              "description": "One or more ids of the provider(s) to return.\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "idp_type",
            "description": "One or more types of provider(s) to return.\n",
            "required": false,
            "in": "query",
            "schema": {
              "description": "One or more types of provider(s) to return.\n",
              "type": "array",
              "items": {
                "enum": [
                  "saml",
                  "openid",
                  "ldap"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "include_full_details",
            "description": "If true, returns the full set of properties\n",
            "required": true,
            "in": "query",
            "schema": {
              "description": "If true, returns the full set of properties\n",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of identity management providers"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      },
      "post": {
        "description": "Add a new identity management provider to the master organization.",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Primary Identity Management Config",
                  "type": {
                    "description": "SAML 2.0",
                    "name": "saml"
                  },
                  "service_provider": {
                    "urls": {
                      "sign_on": "https://example.com/idp/login",
                      "sign_out": "https://example.com/idp/logout"
                    }
                  },
                  "saml": {
                    "audience": "example.anypoint.mulesoft.com",
                    "issuer": "https://example.com",
                    "public_key": [
                      "-----BEGIN CERTIFICATE-----\nMIID4DCCA8igAwIBAgIOAXD1Vx9oAAAAAE8I+UMwDQYJKoZIhvcNAQELBQAwgaEx\nORA3BgNVBAMMMFNlbGZTaWduZWRDZXJTZWxmU2lnbmVkQ2VydF8xOU1hcjIwMjB0\nXzE5TWFyMjAyMDEYMBYGA1UECwwPMDBEZjQwMDAwNDNBVjZmMRcwFQYDVQQKDA5T\nYWxlc2ZvcmNlLmNvbTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbZELMAkGA1UECAwC\nQ0ExDDAKBgNVBAYTA1VTQTAeFw0yMDAzMjAwMDI4MTJaFw0yMTAzMjAwMDAwMDBa\nMIGhMTkwNwYDVQQDDDBTZWxmU2lnbmVkQ2VyU2VsZlNpZ25lZENlcnRfMTlNYXIy\nMDIwdF8xOU1hcjIwMjAxGDAWBgNVBAsMDzAwRGY0MDAwMDAzQVY2ZjEXMBUGA1UE\nCgwOU2FsZXNmb3JjZS5jb20xFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xCzAJBgNV\nBAgMAkNBMQwwCgYDVQQGEwNVU0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQCe/YnyilbiG6ptsIQu4V+Oe+hAMNYeBHh9JvnihAYe4z679KVJLpY+rE3N\nXK+JbZRDCUVewlSj+QhfvykzvJyXUrPC2NyrshW9DFUB36JbOBIYQL00s4TNEBTt\nz/LgDuVn0B7p5uk1HfeL6Ycul3XmAss913XRRMBmdTwi6vK+sVr4rTfzoFxyg7vS\nAAxDfrZh0mgieuVUENGXmV1OEKuX4G4WIeTwsOz0woHbNXM1M7Q1F9zLJK93QrpS\nOg0n3oAFyk9KAQ/Gv3AW12N5VlUAc+/NttRkO9k+ZhDllZSDWQSYokRbrxXurske\n22Tp+rxr80lGFqDyb6bTem1c8s8jAgMBAAGjggESMIIBDjAdBgNVHQ4EFgQUM50l\nbdnhkFhJAcf/28trPacGk18wDwYDVR0TAQH/BAUwAwEB/zCB2wYDVR0jBIHTMIHQ\ngBQznSVt2eGQWEkBx//by2s9pwaTX6GBp6SBpDCBoTE5MDcGA1UEAwwwU2VsZlNp\nZ25lZENlclNlbGZTaWduZWRDZXJ0XzE5TWFyMjAyMHRfMTlNYXIyMDIwMRgwFgYD\nVQQLDA8wMERmNDAwMDAwM0FWNmYxFzAVBgNVBAoMDlNhbGVzZm9yY2UuY29tMRYw\nFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQswCQYDVQQIDAJDQTEMMAoGA1UEBhMDVVNB\ngg4BcPVXH2gAAAAATwj5QzANBgkqhkiG9w0BAQsFAAOCAQEANEupbkT3hHAP0iXR\n7TUNxYBi5y/TeMHE7SfRboMZpjLKMRiRCpCjSl2KlZp+wmGpGBfRiL1fPmiDOiPp\n3XyWcJ5+xPL5btQhcnD+YsMcFLsKIIbCtqS0NXUWa1K4oRq2z4/EBrXZLtniQ+8M\noQnXYvH5zKkpjH1JM8BDfceymgrYsdXmu3rflXuvxBLsDMDdk0zTojL1rIqzxTPH\nS2iabxwLeVWQEGPtXmRtS+kP6CY1pNoYbAFrJzZf4wakx95vwTqSXfcIoFdHUG5B\nX6db+brGnxVgv4mL8ZbxljYhcNDMyNm6kGoPqEyhGHhDTnQyn1RKcStBxkDXPIL3\nb6ojYg==\n-----END CERTIFICATE-----"
                    ],
                    "claims_mapping": {
                      "group_attribute": "memberOf"
                    },
                    "sp_initiated_sso_enabled": false,
                    "idp_initiated_sso_enabled": true,
                    "require_encrypted_saml_assertions": false
                  }
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ExternalIdentityProvider"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid data in body"
          },
          "405": {
            "description": "Cannot add identity providers to business groups"
          }
        }
      }
    },
    "/organizations/{orgId}/identityProviders/saml-sp-metadata": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Download the SAML SP metadata of the associated SAML identity management provider",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "provider_id",
            "description": "ID of the provider to get the associated SAML SP metadata.\n",
            "required": true,
            "in": "query",
            "schema": {
              "description": "ID of the provider to get the associated SAML SP metadata.\n",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/samlmetadata+xml": {
                "schema": {
                  "example": "<?xml version=\"1.0\"?>\n<EntityDescriptor xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"domain.anypoint.mulesoft.com\" ID=\"domain_anypoint_mulesoft.com\">\n  <SPSSODescriptor protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n    <KeyDescriptor use=\"signing\">\n      <ds:KeyInfo>\n        <ds:X509Data>\n          <ds:X509Certificate>MIIEDzCCAvegAwIBAgIJALr9HwgrQ7GeMA0GCSqGSIb3DQEBBQUAMGIxGDAWBgNV\nBAMTD2F1dGgwLmF1dGgwLmNvbTESMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQG\nEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDAeFw0x\nMjEyMjkxNTMwNDdaFw0xMzAxMjgxNTMwNDdaMGIxGDAWBgNVBAMTD2F1dGgwLmF1\ndGgwLmNvbTESMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQGEwJVUzETMBEGA1UE\nCBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDCCASIwDQYJKoZIhvcNAQEB\nBQADggEPADCCAQoCggEBAMZiVmNHiXLldrgbS50ONNOH7pJ2zg6OcSMkYZGDZJbO\nZ/TqwauC6JOnI7+xtkPJsQHZSFJs4U0srjZKzDCmaz2jLAJDShP2jaXlrki16nDL\nPE//IGAg3BJguSmBCWpDbSm92V9hSsE+Mhx6bDaJiw8yQ+Q8iSm0aTQZtp6O4ICM\nu00ESdh9NJqIECELvP31ADV1Xhj7IbyyVPDFxMv3ol5BySE9wwwOFUq/wv7Xz9LR\niUjUzPO+Lq3OM3o/uCDbk7jD7XrGUuOydALD8ULsXp4EuDO+nFbeXB/iKndZynuV\nKokirywl2nD2IP0/yncdLQZ8ByIyqP3G82fq/l8p7AsCAwEAAaOBxzCBxDAdBgNV\nHQ4EFgQUHI2rUXeBjTv1zAllaPGrHFcEK0YwgZQGA1UdIwSBjDCBiYAUHI2rUXeB\njTv1zAllaPGrHFcEK0ahZqRkMGIxGDAWBgNVBAMTD2F1dGgwLmF1dGgwLmNvbTES\nMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu\nZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZIIJALr9HwgrQ7GeMAwGA1UdEwQFMAMBAf8w\nDQYJKoZIhvcNAQEFBQADggEBAFrXIhCy4T4eGrikb0R2wHv/uS548r3pZyBV0CDb\ncRwAtbnpJMvkGFqKVp4pmyoIDSVNK/j+sLEshB20XftezHZyRJbCUbtKvXQ6Fsxo\neZMlN0ITYKTaoBZKhUxxj90otAhNC58qwGUPqt2LewJhHyLucKkGJ1mQ3b5xKZ53\n2ToufouH9VLhig3H1KnxWo/zMD6Ke8cCk6qO9htuhI06s3GQGS1QWQtAmm17C6Tf\nKgDwQFZwhqHUUZnwKRH8gU6OgZsvhgV1B7H5mjZcu57KMiDBekU9MEY0DCVTN3Wk\nmcTII668zLsJrkNX6PEfck1AMBbVE6pEUKcWwq3uaLvlAUo=\n</ds:X509Certificate>\n        </ds:X509Data>\n      </ds:KeyInfo>\n    </KeyDescriptor>\n    <KeyDescriptor use=\"encryption\">\n      <ds:KeyInfo>\n        <ds:X509Data>\n          <ds:X509Certificate>MIIEDzCCAvegAwIBAgIJALr9HwgrQ7GeMA0GCSqGSIb3DQEBBQUAMGIxGDAWBgNV\nBAMTD2F1dGgwLmF1dGgwLmNvbTESMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQG\nEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDAeFw0x\nMjEyMjkxNTMwNDdaFw0xMzAxMjgxNTMwNDdaMGIxGDAWBgNVBAMTD2F1dGgwLmF1\ndGgwLmNvbTESMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQGEwJVUzETMBEGA1UE\nCBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDCCASIwDQYJKoZIhvcNAQEB\nBQADggEPADCCAQoCggEBAMZiVmNHiXLldrgbS50ONNOH7pJ2zg6OcSMkYZGDZJbO\nZ/TqwauC6JOnI7+xtkPJsQHZSFJs4U0srjZKzDCmaz2jLAJDShP2jaXlrki16nDL\nPE//IGAg3BJguSmBCWpDbSm92V9hSsE+Mhx6bDaJiw8yQ+Q8iSm0aTQZtp6O4ICM\nu00ESdh9NJqIECELvP31ADV1Xhj7IbyyVPDFxMv3ol5BySE9wwwOFUq/wv7Xz9LR\niUjUzPO+Lq3OM3o/uCDbk7jD7XrGUuOydALD8ULsXp4EuDO+nFbeXB/iKndZynuV\nKokirywl2nD2IP0/yncdLQZ8ByIyqP3G82fq/l8p7AsCAwEAAaOBxzCBxDAdBgNV\nHQ4EFgQUHI2rUXeBjTv1zAllaPGrHFcEK0YwgZQGA1UdIwSBjDCBiYAUHI2rUXeB\njTv1zAllaPGrHFcEK0ahZqRkMGIxGDAWBgNVBAMTD2F1dGgwLmF1dGgwLmNvbTES\nMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu\nZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZIIJALr9HwgrQ7GeMAwGA1UdEwQFMAMBAf8w\nDQYJKoZIhvcNAQEFBQADggEBAFrXIhCy4T4eGrikb0R2wHv/uS548r3pZyBV0CDb\ncRwAtbnpJMvkGFqKVp4pmyoIDSVNK/j+sLEshB20XftezHZyRJbCUbtKvXQ6Fsxo\neZMlN0ITYKTaoBZKhUxxj90otAhNC58qwGUPqt2LewJhHyLucKkGJ1mQ3b5xKZ53\n2ToufouH9VLhig3H1KnxWo/zMD6Ke8cCk6qO9htuhI06s3GQGS1QWQtAmm17C6Tf\nKgDwQFZwhqHUUZnwKRH8gU6OgZsvhgV1B7H5mjZcu57KMiDBekU9MEY0DCVTN3Wk\nmcTII668zLsJrkNX6PEfck1AMBbVE6pEUKcWwq3uaLvlAUo=\n</ds:X509Certificate>\n        </ds:X509Data>\n      </ds:KeyInfo>\n      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes256-cbc\"/>\n      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes128-cbc\"/>\n      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\"/>\n    </KeyDescriptor>\n    <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://anypoint.mulesoft.com/accounts/logout/receive-id\"/>\n    <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>\n    <AssertionConsumerService index=\"1\" isDefault=\"true\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://anypoint.mulesoft.com/accounts/login/receive-id\"/>\n  </SPSSODescriptor>\n</EntityDescriptor>\n"
                }
              }
            }
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/identityProviders/ldap-test": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Test the LDAP config before saving the configuration",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "provider_id",
            "description": "ID of the provider to get the associated LDAP config that's already persisted\n",
            "required": false,
            "in": "query",
            "schema": {
              "description": "ID of the provider to get the associated LDAP config that's already persisted\n",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Test LDAP Connection",
                  "type": {
                    "name": "ldap",
                    "description": "LDAP"
                  },
                  "connection": {
                    "binddn": "cn=foo,dc=example,dc=com",
                    "connectTimeoutSeconds": 60,
                    "host": "ldap://some-ldap-host.example.com",
                    "operationTimeoutMs": 60000,
                    "password": "result.defaultPassword",
                    "port": 3389
                  },
                  "search_bases": {
                    "group": "ou=groups,dc=example,dc=com",
                    "user": "ou=people,dc=example,dc=com"
                  },
                  "dns": {
                    "group": "cn={{groupName}},ou=groups,dc=example,dc=com",
                    "user": "uid={{username}},ou=people,dc=example,dc=com"
                  },
                  "filters": {
                    "groupsByUsername": "(&(objectClass=groupOfUniqueNames)(uniqueMember=uid={{username}},ou=people,dc=example,dc=com))",
                    "userByUsername": "(&(objectClass=inetOrgPerson)(uid={{username}}))"
                  },
                  "user_mapping": {
                    "email": "mail",
                    "firstName": "givenName",
                    "id": "entryUUID",
                    "lastName": "sn",
                    "username": "uid"
                  },
                  "group_mapping": {
                    "groupName": "cn",
                    "id": "entryUUID"
                  },
                  "test_connection": {
                    "username": "Test123",
                    "password": ""
                  }
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/LDAPProviderTest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid data in body"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/identityProviders/{identityProviderId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "identityProviderId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the associated identity management provider config.",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "include_secrets",
            "description": "If true, include secrets in the response",
            "required": true,
            "in": "query",
            "schema": {
              "description": "If true, include secrets in the response",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "provider_id": "2e71d283-6248-4c81-98eb-e254a89b7e0a",
                    "org_id": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67",
                    "name": "Primary Identity Management Config",
                    "type": {
                      "description": "SAML 2.0",
                      "name": "saml"
                    },
                    "service_provider": {
                      "urls": {
                        "sign_on": "https://example.com/idp/login",
                        "sign_out": "https://example.com/idp/logout"
                      }
                    },
                    "saml": {
                      "audience": "example.anypoint.mulesoft.com",
                      "issuer": "https://example.com",
                      "public_key": [
                        "-----BEGIN CERTIFICATE-----\nMIID4DCCA8igAwIBAgIOAXD1Vx9oAAAAAE8I+UMwDQYJKoZIhvcNAQELBQAwgaEx\nORA3BgNVBAMMMFNlbGZTaWduZWRDZXJTZWxmU2lnbmVkQ2VydF8xOU1hcjIwMjB0\nXzE5TWFyMjAyMDEYMBYGA1UECwwPMDBEZjQwMDAwNDNBVjZmMRcwFQYDVQQKDA5T\nYWxlc2ZvcmNlLmNvbTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbZELMAkGA1UECAwC\nQ0ExDDAKBgNVBAYTA1VTQTAeFw0yMDAzMjAwMDI4MTJaFw0yMTAzMjAwMDAwMDBa\nMIGhMTkwNwYDVQQDDDBTZWxmU2lnbmVkQ2VyU2VsZlNpZ25lZENlcnRfMTlNYXIy\nMDIwdF8xOU1hcjIwMjAxGDAWBgNVBAsMDzAwRGY0MDAwMDAzQVY2ZjEXMBUGA1UE\nCgwOU2FsZXNmb3JjZS5jb20xFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xCzAJBgNV\nBAgMAkNBMQwwCgYDVQQGEwNVU0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQCe/YnyilbiG6ptsIQu4V+Oe+hAMNYeBHh9JvnihAYe4z679KVJLpY+rE3N\nXK+JbZRDCUVewlSj+QhfvykzvJyXUrPC2NyrshW9DFUB36JbOBIYQL00s4TNEBTt\nz/LgDuVn0B7p5uk1HfeL6Ycul3XmAss913XRRMBmdTwi6vK+sVr4rTfzoFxyg7vS\nAAxDfrZh0mgieuVUENGXmV1OEKuX4G4WIeTwsOz0woHbNXM1M7Q1F9zLJK93QrpS\nOg0n3oAFyk9KAQ/Gv3AW12N5VlUAc+/NttRkO9k+ZhDllZSDWQSYokRbrxXurske\n22Tp+rxr80lGFqDyb6bTem1c8s8jAgMBAAGjggESMIIBDjAdBgNVHQ4EFgQUM50l\nbdnhkFhJAcf/28trPacGk18wDwYDVR0TAQH/BAUwAwEB/zCB2wYDVR0jBIHTMIHQ\ngBQznSVt2eGQWEkBx//by2s9pwaTX6GBp6SBpDCBoTE5MDcGA1UEAwwwU2VsZlNp\nZ25lZENlclNlbGZTaWduZWRDZXJ0XzE5TWFyMjAyMHRfMTlNYXIyMDIwMRgwFgYD\nVQQLDA8wMERmNDAwMDAwM0FWNmYxFzAVBgNVBAoMDlNhbGVzZm9yY2UuY29tMRYw\nFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQswCQYDVQQIDAJDQTEMMAoGA1UEBhMDVVNB\ngg4BcPVXH2gAAAAATwj5QzANBgkqhkiG9w0BAQsFAAOCAQEANEupbkT3hHAP0iXR\n7TUNxYBi5y/TeMHE7SfRboMZpjLKMRiRCpCjSl2KlZp+wmGpGBfRiL1fPmiDOiPp\n3XyWcJ5+xPL5btQhcnD+YsMcFLsKIIbCtqS0NXUWa1K4oRq2z4/EBrXZLtniQ+8M\noQnXYvH5zKkpjH1JM8BDfceymgrYsdXmu3rflXuvxBLsDMDdk0zTojL1rIqzxTPH\nS2iabxwLeVWQEGPtXmRtS+kP6CY1pNoYbAFrJzZf4wakx95vwTqSXfcIoFdHUG5B\nX6db+brGnxVgv4mL8ZbxljYhcNDMyNm6kGoPqEyhGHhDTnQyn1RKcStBxkDXPIL3\nb6ojYg==\n-----END CERTIFICATE-----"
                      ],
                      "claims_mapping": {
                        "group_attribute": "memberOf"
                      },
                      "sp_initiated_sso_enabled": false,
                      "idp_initiated_sso_enabled": true,
                      "require_encrypted_saml_assertions": false
                    }
                  },
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/ExternalIdentityProviderGet"
                    }
                  ]
                }
              }
            }
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      },
      "patch": {
        "description": "Updates the associated identity management provider config",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Updated Identity Management Config",
                  "type": {
                    "description": "SAML 2.0"
                  },
                  "service_provider": {
                    "urls": {
                      "sign_on": "https://example.com/idp/login",
                      "sign_out": "https://example.com/idp/logout"
                    }
                  },
                  "saml": {
                    "audience": "example.anypoint.mulesoft.com",
                    "issuer": "https://example.com",
                    "public_key": [
                      "-----BEGIN CERTIFICATE-----\nMIID4DCCA8igAwIBAgIOAXD1Vx9oAAAAAE8I+UMwDQYJKoZIhvcNAQELBQAwgaEx\nORA3BgNVBAMMMFNlbGZTaWduZWRDZXJTZWxmU2lnbmVkQ2VydF8xOU1hcjIwMjB0\nXzE5TWFyMjAyMDEYMBYGA1UECwwPMDBEZjQwMDAwNDNBVjZmMRcwFQYDVQQKDA5T\nYWxlc2ZvcmNlLmNvbTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbZELMAkGA1UECAwC\nQ0ExDDAKBgNVBAYTA1VTQTAeFw0yMDAzMjAwMDI4MTJaFw0yMTAzMjAwMDAwMDBa\nMIGhMTkwNwYDVQQDDDBTZWxmU2lnbmVkQ2VyU2VsZlNpZ25lZENlcnRfMTlNYXIy\nMDIwdF8xOU1hcjIwMjAxGDAWBgNVBAsMDzAwRGY0MDAwMDAzQVY2ZjEXMBUGA1UE\nCgwOU2FsZXNmb3JjZS5jb20xFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xCzAJBgNV\nBAgMAkNBMQwwCgYDVQQGEwNVU0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQCe/YnyilbiG6ptsIQu4V+Oe+hAMNYeBHh9JvnihAYe4z679KVJLpY+rE3N\nXK+JbZRDCUVewlSj+QhfvykzvJyXUrPC2NyrshW9DFUB36JbOBIYQL00s4TNEBTt\nz/LgDuVn0B7p5uk1HfeL6Ycul3XmAss913XRRMBmdTwi6vK+sVr4rTfzoFxyg7vS\nAAxDfrZh0mgieuVUENGXmV1OEKuX4G4WIeTwsOz0woHbNXM1M7Q1F9zLJK93QrpS\nOg0n3oAFyk9KAQ/Gv3AW12N5VlUAc+/NttRkO9k+ZhDllZSDWQSYokRbrxXurske\n22Tp+rxr80lGFqDyb6bTem1c8s8jAgMBAAGjggESMIIBDjAdBgNVHQ4EFgQUM50l\nbdnhkFhJAcf/28trPacGk18wDwYDVR0TAQH/BAUwAwEB/zCB2wYDVR0jBIHTMIHQ\ngBQznSVt2eGQWEkBx//by2s9pwaTX6GBp6SBpDCBoTE5MDcGA1UEAwwwU2VsZlNp\nZ25lZENlclNlbGZTaWduZWRDZXJ0XzE5TWFyMjAyMHRfMTlNYXIyMDIwMRgwFgYD\nVQQLDA8wMERmNDAwMDAwM0FWNmYxFzAVBgNVBAoMDlNhbGVzZm9yY2UuY29tMRYw\nFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQswCQYDVQQIDAJDQTEMMAoGA1UEBhMDVVNB\ngg4BcPVXH2gAAAAATwj5QzANBgkqhkiG9w0BAQsFAAOCAQEANEupbkT3hHAP0iXR\n7TUNxYBi5y/TeMHE7SfRboMZpjLKMRiRCpCjSl2KlZp+wmGpGBfRiL1fPmiDOiPp\n3XyWcJ5+xPL5btQhcnD+YsMcFLsKIIbCtqS0NXUWa1K4oRq2z4/EBrXZLtniQ+8M\noQnXYvH5zKkpjH1JM8BDfceymgrYsdXmu3rflXuvxBLsDMDdk0zTojL1rIqzxTPH\nS2iabxwLeVWQEGPtXmRtS+kP6CY1pNoYbAFrJzZf4wakx95vwTqSXfcIoFdHUG5B\nX6db+brGnxVgv4mL8ZbxljYhcNDMyNm6kGoPqEyhGHhDTnQyn1RKcStBxkDXPIL3\nb6ojYg==\n-----END CERTIFICATE-----"
                    ],
                    "claims_mapping": {
                      "group_attribute": "memberOf"
                    },
                    "sp_initiated_sso_enabled": false,
                    "idp_initiated_sso_enabled": true,
                    "require_encrypted_saml_assertions": false
                  }
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ExternalIdentityProviderPatch"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid data in body"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      },
      "delete": {
        "description": "Deletes the associated identity management provider",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/identityProviders/{identityProviderId}/saml-sp-keys": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "identityProviderId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the list of SAML SP keys associated to the identity management provider config",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "primary",
            "description": "If true, return only the primary SAML SP key",
            "in": "query",
            "schema": {
              "description": "If true, return only the primary SAML SP key",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": "1e2994ff-e6f1-4d11-ab93-3f17af9c9630",
                      "primary": false,
                      "created_at": "2020-07-02T18:28:25.218Z"
                    },
                    {
                      "id": "624e3b14-60f4-4813-955a-ef2049f3a0da",
                      "primary": true,
                      "created_at": "2020-07-03T18:28:25.218Z"
                    }
                  ],
                  "type": "array",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/SAMLProviderKeysArray"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The identity provider does not exist or is not a SAML provider"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      },
      "post": {
        "description": "Add or generate a new SAML SP key pair",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Key pair to add, or an empty body to generate a new key pair",
                "x-amf-examples": {
                  "add_key": {
                    "key_pair": {
                      "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEApkYZoDdPZQRSP7w3v59xrKb3fqLkb5C5NZEZZ5cWQqys2G40\nzDPdtIKn/VjEtFbyvnlmG7SWSnXixW4sAw2muemKKkphF8YFiq/Cu14oJO+p6t4b\nvI61neQPKSj/bl1ZSnFLum4owX2afjVYiTbp3iBCMNlNRx2qTzixczpsgQPQAPnk\nx6fmIBM8IzrJqjFSbUUAV7SFh39ONtayIL/C6rm/GZMmR9AAEjuzFMEbg422htGS\nm/EjhulYY8/wGj8RThA/EkXLC0ScPUtvbaM23rnQklAqBzKxDu75UfYgAgMNaGiw\njMbzqte8tj+VCwEiQvD1QD8/HeZyCQpEVmqGTwIDAQABAoIBAQChwAvpyiSYNo30\npprs9KTWuk6FiN0Ekxs5OwAlv9rN3cD/gqYmCEai9X+Ke7JPZU4bcWmdhh22Ldv/\nB+AU0FDjBod8AINXZzG46qZbM4uF8wevDYaZ9ZJEGLmO5u0lZfYY7wImSEepgxCp\nuid4xEzZ4zPA5YPBrOAi1Rn66FjpX0QARNn9nN424ivCShyV5r6yyMIiOQNqjye9\nX4EYh3ACQNYB0lisAR4rzQS8MJ8Tu//XQrBbBvufiphJSydKEyEGMvD3sNtYZce8\nUDvZ994JYfrxfpLRePbjag02QNU6l2opqIZjQYkwbGjY+5lx1ln5lKiH7f4Qz36E\n8BpVu4ABAoGBANqvxasRCAlQFZ8Knk7/2Am9ZQoBn7fAJMkmHswUFfpZJoasITph\nQTxLd3BFUVZPbtHMUPNK7SDCu//P4uTooX0+QrRSWXeMxFbaW8CsFhOHTOfEBRY6\noi8hVp/+FCoW9SnOERgZnHrP4KmYwY4LPryig9REjFRT28JeO6D6EmABAoGBAMKk\n8D47nsdxfWoQ7ytkheaqA7ZFI7oEN53OaRb/WprfzvP2M4UIJMO9mUDm8g7cfdYL\nBI4TSPghn5oT+vukIEKhpMO79OQTrY57qdZnVWt8Xgr+z0e+F/6vpjUr5ZObSgFQ\nE/WXvy+ZEMCVm7MecCdSzi5y178pjfxN1t9ofuZPAoGBAJLTCrL1B2FBTJLwTSOb\nMJAxgcH7HyH+tnP6zRiVr7/a1Tv8G38XxvXVcUaGs7pwMGZZeEwwlQ620ARLrfmk\nmq/8+koZNApJD5WEm6+7mkLYR3EgMY4gJb3g80kODLnJmibMPLvijiYCpcMYVXOp\n5yA9OKdusoz3lIdmP0CwRWABAoGBAKzfDLhY/1Ynh7mSPLkPWJVa3l0d3vMxF6xC\nTLeuJ2xx5j5qpas7ZluqotgvxUBJuEFIG82Ldz1Zr4SKxliEllpXchydbIy8pWJs\nlpTjxcvm8ydU1Afl3y3GFxoWWJnWS84Krw9qrNS7X1OMDHLzT6y9MH20ZcVURNSW\n1YYqKrqlAoGASXKyghK5w8WLGiN1M9mkKqOoEtZadY9ZKRi1dQS5Nv0Wx+bjEXTr\n8jrEVULAmEmB71+gVbkbfYW8hxxXILa3jOQXHNR0Xwi598whdVyz+B/EzAt3djw2\n/GqCkxHg23nCWs9c7Fc1T1+oo/OJumF3H0iBvkM1sppcXyUjAMIy/C0=\n-----END RSA PRIVATE KEY-----",
                      "certificate": "-----BEGIN CERTIFICATE-----\nMIID2jCCAsICCQD4pI4hPjEsTjANBgkqhkiG9w0BAQ0FADCBrjELMAkGA1UEBhMC\nVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28x\nFTATBgNVBAoMDE11bGVTb2Z0IEluYzEWMBQGA1UECwwNQ29yZSBTZXJ2aWNlczEe\nMBwGA1UEAwwVYW55cG9pbnQubXVsZXNvZnQuY29tMSMwIQYJKoZIhvcNAQkBFhRz\ndXBwb3J0QG11bGVzb2Z0LmNvbTAeFw0yMDA3MjkyMzU3NTZaFw0zMDA3MjkyMzU3\nNTZaMIGuMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UE\nBwwNU2FuIEZyYW5jaXNjbzEVMBMGA1UECgwMTXVsZVNvZnQgSW5jMRYwFAYDVQQL\nDA1Db3JlIFNlcnZpY2VzMR4wHAYDVQQDDBVhbnlwb2ludC5tdWxlc29mdC5jb20x\nIzAhBgkqhkiG9w0BCQEWFHN1cHBvcnRAbXVsZXNvZnQuY29tMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEApkYZoDdPZQRSP7w3v59xrKb3fqLkb5C5NZEZ\nZ5cWQqys2G40zDPdtIKn/VjEtFbyvnlmG7SWSnXixW4sAw2muemKKkphF8YFiq/C\nu14oJO+p6t4bvI61neQPKSj/bl1ZSnFLum4owX2afjVYiTbp3iBCMNlNRx2qTzix\nczpsgQPQAPnkx6fmIBM8IzrJqjFSbUUAV7SFh39ONtayIL/C6rm/GZMmR9AAEjuz\nFMEbg422htGSm/EjhulYY8/wGj8RThA/EkXLC0ScPUtvbaM23rnQklAqBzKxDu75\nUfYgAgMNaGiwjMbzqte8tj+VCwEiQvD1QD8/HeZyCQpEVmqGTwIDAQABMA0GCSqG\nSIb3DQEBDQUAA4IBAQBCCH1ftf7Oftw8H5e4RCTY8GkNgOLOoaShu7+mb0Oca0ZS\nHDl0oXhFJE7iSTolHbEjMYg5nRNIPVhETNhwEEtRJ7IpU8STuerXRsbXv2TOdArR\nv7SWft+VoEFZodXzM0GU9Bnlq49LedwAgIi6/D7yrHx5qYFenRtWZKKsesNwB4D7\nFLEknpmozxrDYFc9lIG/xbCeig8ElU2d3hU41EX3G83pIwQQBm0NHBi1KMXG50NB\nKc/1/Sf7l4EqNqxYM6Akh0XUBiIgvWEjOvsEcONXoP5mODAq2We/bCQ3gUQrcPyE\nKrUDT/fzLzSTkLBGOGFHJfD3C88AlyiXCErArnlT\n-----END CERTIFICATE-----\n"
                    }
                  },
                  "generate_key": {}
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/SAMLProviderKeysPost"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1e2994ff-e6f1-4d11-ab93-3f17af9c9630",
                    "primary": false,
                    "created_at": "2020-07-02T18:28:25.218Z"
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/SAMLProviderKeys"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The identity provider does not exist or is not a SAML provider"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/identityProviders/{identityProviderId}/saml-sp-keys/{samlSpKeyId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "identityProviderId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "samlSpKeyId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the SAML SP certificate in .pem format",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "binary/octet-stream": {
                "schema": {
                  "example": "-----BEGIN CERTIFICATE-----\nMIID2jCCAsICCQD4pI4hPjEsTjANBgkqhkiG9w0BAQ0FADCBrjELMAkGA1UEBhMC\nVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28x\nFTATBgNVBAoMDE11bGVTb2Z0IEluYzEWMBQGA1UECwwNQ29yZSBTZXJ2aWNlczEe\nMBwGA1UEAwwVYW55cG9pbnQubXVsZXNvZnQuY29tMSMwIQYJKoZIhvcNAQkBFhRz\ndXBwb3J0QG11bGVzb2Z0LmNvbTAeFw0yMDA3MjkyMzU3NTZaFw0zMDA3MjkyMzU3\nNTZaMIGuMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UE\nBwwNU2FuIEZyYW5jaXNjbzEVMBMGA1UECgwMTXVsZVNvZnQgSW5jMRYwFAYDVQQL\nDA1Db3JlIFNlcnZpY2VzMR4wHAYDVQQDDBVhbnlwb2ludC5tdWxlc29mdC5jb20x\nIzAhBgkqhkiG9w0BCQEWFHN1cHBvcnRAbXVsZXNvZnQuY29tMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEApkYZoDdPZQRSP7w3v59xrKb3fqLkb5C5NZEZ\nZ5cWQqys2G40zDPdtIKn/VjEtFbyvnlmG7SWSnXixW4sAw2muemKKkphF8YFiq/C\nu14oJO+p6t4bvI61neQPKSj/bl1ZSnFLum4owX2afjVYiTbp3iBCMNlNRx2qTzix\nczpsgQPQAPnkx6fmIBM8IzrJqjFSbUUAV7SFh39ONtayIL/C6rm/GZMmR9AAEjuz\nFMEbg422htGSm/EjhulYY8/wGj8RThA/EkXLC0ScPUtvbaM23rnQklAqBzKxDu75\nUfYgAgMNaGiwjMbzqte8tj+VCwEiQvD1QD8/HeZyCQpEVmqGTwIDAQABMA0GCSqG\nSIb3DQEBDQUAA4IBAQBCCH1ftf7Oftw8H5e4RCTY8GkNgOLOoaShu7+mb0Oca0ZS\nHDl0oXhFJE7iSTolHbEjMYg5nRNIPVhETNhwEEtRJ7IpU8STuerXRsbXv2TOdArR\nv7SWft+VoEFZodXzM0GU9Bnlq49LedwAgIi6/D7yrHx5qYFenRtWZKKsesNwB4D7\nFLEknpmozxrDYFc9lIG/xbCeig8ElU2d3hU41EX3G83pIwQQBm0NHBi1KMXG50NB\nKc/1/Sf7l4EqNqxYM6Akh0XUBiIgvWEjOvsEcONXoP5mODAq2We/bCQ3gUQrcPyE\nKrUDT/fzLzSTkLBGOGFHJfD3C88AlyiXCErArnlT\n-----END CERTIFICATE-----\n"
                }
              }
            }
          },
          "404": {
            "description": "The key or identity provider does not exist, or it is not a SAML provider"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      },
      "delete": {
        "description": "Delete the SAML SP key",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "The key or identity provider does not exist, or it is not a SAML provider"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/identityProviders/{identityProviderId}/saml-sp-keys/{samlSpKeyId}/setPrimary": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "identityProviderId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "samlSpKeyId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Make the key the primary SAML SP key for the identity management provider config",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": "1e2994ff-e6f1-4d11-ab93-3f17af9c9630",
                      "primary": false,
                      "created_at": "2020-07-02T18:28:25.218Z"
                    },
                    {
                      "id": "624e3b14-60f4-4813-955a-ef2049f3a0da",
                      "primary": true,
                      "created_at": "2020-07-03T18:28:25.218Z"
                    }
                  ],
                  "type": "array",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/SAMLProviderKeysArray"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The key or identity provider does not exist, or it is not a SAML provider"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/identityProviderSettings": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get the identity provider settings for the org",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "allow_new_non_sso_users": true
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/IdentityProviderSettings"
                    }
                  ]
                }
              }
            }
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      },
      "patch": {
        "description": "Update the identity provider settings for the org",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "allow_new_non_sso_users": true
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/IdentityProviderSettings"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid data in body"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/invites": {
      "description": "Invite people to join the organization",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "get outstanding or expired invites that match the criteria",
        "x-amf-is": [
          "offset-paginated",
          {
            "pagination-collection": {
              "type": "invites.Invite",
              "example": "{\n  \"data\": [\n    {\n      \"id\": 520,\n      \"code\": \"f2e8dfab-6699-4889-831f-6dc6f8428cb0\",\n      \"invited_at\": \"2015-01-30T22:23:55.433Z\",\n      \"invited_email\": \"christopher.mordue@mulesoft.com\",\n      \"invited_by_user\": {\n        \"id\": \"57e281b5-ec5b-4701-80a0-92a936a68da3\",\n        \"username\": \"organization_owner\",\n        \"first_name\": \"Organization2\",\n        \"last_name\": \"Owner\"\n      },\n      \"invited_to_org\": {\n        \"id\": \"f0c9b011-980e-4928-9430-e60e3a97c043\",\n        \"name\": \"MuleSoft Inc\"\n      },\n      \"expires_at\": \"2015-04-10T22:23:55.433Z\",\n      \"status\": \"INVITED\",\n      \"completed_at\": null,\n      \"completed_by_user\": null,\n      \"role_groups\": [\n        {\n          \"name\": \"Organization Administrators\",\n          \"role_group_id\": \"0b19f6df-ed81-4fd1-b5e7-4921f5e46f4c\"\n        }\n      ]\n    }\n  ],\n  \"total\": 1\n}"
            }
          },
          {
            "searchable": {
              "targetDesc": "invited emails"
            }
          },
          "rate-limited"
        ],
        "responses": {
          "400": {
            "description": "Bad request; unknown organization, bad parameter or other failure"
          }
        }
      },
      "post": {
        "description": "Invite a person to join the organization",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-amf-examples": {
                  "teams": [
                    {
                      "email": "christopher.mordue@mulesoft.com",
                      "teams": [
                        {
                          "team_id": "f59632be-e43f-4c4f-a303-36b8b0623f29",
                          "membership_type": "member"
                        }
                      ]
                    }
                  ],
                  "roles": [
                    {
                      "email": "lshanmugavel@mulesoft.com",
                      "roles": [
                        {
                          "role_id": "674c9f7a-ee81-44d7-b25f-eb938d8ebaa1",
                          "context_params": {
                            "org": "f0c9b011-980e-4928-9430-e60e3a97c043"
                          }
                        }
                      ]
                    }
                  ]
                },
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/InviteNewList"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 520,
                      "code": "f2e8dfab-6699-4889-831f-6dc6f8428cb0",
                      "invited_at": "2015-01-30T22:23:55.433Z",
                      "invited_email": "christopher.mordue@mulesoft.com",
                      "invited_by_user": {
                        "id": "57e281b5-ec5b-4701-80a0-92a936a68da3",
                        "username": "organization_owner",
                        "first_name": "Organization2",
                        "last_name": "Owner"
                      },
                      "invited_to_org": {
                        "id": "f0c9b011-980e-4928-9430-e60e3a97c043",
                        "name": "MuleSoft Inc"
                      },
                      "expires_at": "2015-04-10T22:23:55.433Z",
                      "status": "INVITED",
                      "completed_at": null,
                      "completed_by_user": null,
                      "role_groups": [
                        {
                          "name": "Organization Administrators",
                          "role_group_id": "0b19f6df-ed81-4fd1-b5e7-4921f5e46f4c"
                        }
                      ]
                    }
                  ],
                  "type": "array",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/InviteList"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request; unknown organization, bad parameter or other failure"
          }
        }
      },
      "delete": {
        "description": "Invite a person to join your organization",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  520
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/InvitesIds"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request; unknown organization, bad parameter or no invite was deleted"
          }
        }
      }
    },
    "/organizations/{orgId}/invites/{inviteId}": {
      "description": "Invite resource",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "inviteId",
          "description": "The ID of the invite",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The ID of the invite",
            "type": "integer"
          }
        }
      ],
      "get": {
        "description": "get an invite",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 520,
                    "code": "f2e8dfab-6699-4889-831f-6dc6f8428cb0",
                    "invited_at": "2015-01-30T22:23:55.433Z",
                    "invited_email": "christopher.mordue@mulesoft.com",
                    "invited_by_user": {
                      "id": "57e281b5-ec5b-4701-80a0-92a936a68da3",
                      "username": "organization_owner",
                      "first_name": "Organization2",
                      "last_name": "Owner"
                    },
                    "invited_to_org": {
                      "id": "f0c9b011-980e-4928-9430-e60e3a97c043",
                      "name": "MuleSoft Inc"
                    },
                    "expires_at": "2015-04-10T22:23:55.433Z",
                    "status": "INVITED",
                    "completed_at": null,
                    "completed_by_user": null,
                    "teams": [
                      {
                        "team_name": "IT",
                        "team_id": "f59632be-e43f-4c4f-a303-36b8b0623f29",
                        "membership_type": "member"
                      }
                    ]
                  },
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/Invite"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request; bad parameter or other failure"
          },
          "404": {
            "description": "No invite exists in this organization for the given inviteId"
          }
        }
      }
    },
    "/organizations/{orgId}/invites/resend": {
      "description": "Resend invites",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Resend a list of invites",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  520
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/InvitesIds"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "succeeded": [
                      520
                    ],
                    "failed": []
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/InvitesResendResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "One or more of the invites are not in the organization or no invites were sent"
          }
        }
      }
    },
    "/organizations/{orgId}/provider": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{orgId}/provider/users": {
      "description": "Identity provider information for the organization",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the identity provider details",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "identity_management": {
                      "type": {
                        "name": "saml",
                        "description": "SAML 2.0"
                      },
                      "service_provider": {
                        "name": "Identity Federation Service Provider",
                        "urls": {
                          "sign_on": "https://pingfederate:9031/idp/startSSO.ping?PartnerSpId=chris.localhost.mulesoft.com",
                          "sign_out": "https://pingfederate:9031/idp/SLO.saml2"
                        }
                      },
                      "saml": {
                        "name": "SAML 2.0",
                        "issuer": "test.9.1.mulesoft.com",
                        "public_key": [
                          "AAAA"
                        ],
                        "audience": "chris.localhost.mulesoft.com",
                        "claims_mapping": {
                          "group_attribute": "memberOf"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates the identity provider for the organization",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "identity_management": {
                    "type": {
                      "name": "saml",
                      "description": "SAML 2.0"
                    },
                    "service_provider": {
                      "name": "Identity Federation Service Provider",
                      "urls": {
                        "sign_on": "https://pingfederate:9031/idp/startSSO.ping?PartnerSpId=chris.localhost.mulesoft.com",
                        "sign_out": "https://pingfederate:9031/idp/SLO.saml2"
                      }
                    },
                    "saml": {
                      "name": "SAML 2.0",
                      "issuer": "test.9.1.mulesoft.com",
                      "public_key": [
                        "AAAA"
                      ],
                      "audience": "chris.localhost.mulesoft.com",
                      "claims_mapping": {
                        "group_attribute": "memberOf"
                      }
                    }
                  }
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/ExternalIdentityProviderLegacy"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "description": "Revert to using the default identity provider",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/organizations/{orgId}/provider/users/saml-sp-metadata": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Download the SAML SP metadata",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/samlmetadata+xml": {
                "schema": {
                  "example": "<?xml version=\"1.0\"?>\n<EntityDescriptor xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"domain.anypoint.mulesoft.com\" ID=\"domain_anypoint_mulesoft.com\">\n  <SPSSODescriptor protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n    <KeyDescriptor use=\"signing\">\n      <ds:KeyInfo>\n        <ds:X509Data>\n          <ds:X509Certificate>MIIEDzCCAvegAwIBAgIJALr9HwgrQ7GeMA0GCSqGSIb3DQEBBQUAMGIxGDAWBgNV\nBAMTD2F1dGgwLmF1dGgwLmNvbTESMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQG\nEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDAeFw0x\nMjEyMjkxNTMwNDdaFw0xMzAxMjgxNTMwNDdaMGIxGDAWBgNVBAMTD2F1dGgwLmF1\ndGgwLmNvbTESMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQGEwJVUzETMBEGA1UE\nCBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDCCASIwDQYJKoZIhvcNAQEB\nBQADggEPADCCAQoCggEBAMZiVmNHiXLldrgbS50ONNOH7pJ2zg6OcSMkYZGDZJbO\nZ/TqwauC6JOnI7+xtkPJsQHZSFJs4U0srjZKzDCmaz2jLAJDShP2jaXlrki16nDL\nPE//IGAg3BJguSmBCWpDbSm92V9hSsE+Mhx6bDaJiw8yQ+Q8iSm0aTQZtp6O4ICM\nu00ESdh9NJqIECELvP31ADV1Xhj7IbyyVPDFxMv3ol5BySE9wwwOFUq/wv7Xz9LR\niUjUzPO+Lq3OM3o/uCDbk7jD7XrGUuOydALD8ULsXp4EuDO+nFbeXB/iKndZynuV\nKokirywl2nD2IP0/yncdLQZ8ByIyqP3G82fq/l8p7AsCAwEAAaOBxzCBxDAdBgNV\nHQ4EFgQUHI2rUXeBjTv1zAllaPGrHFcEK0YwgZQGA1UdIwSBjDCBiYAUHI2rUXeB\njTv1zAllaPGrHFcEK0ahZqRkMGIxGDAWBgNVBAMTD2F1dGgwLmF1dGgwLmNvbTES\nMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu\nZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZIIJALr9HwgrQ7GeMAwGA1UdEwQFMAMBAf8w\nDQYJKoZIhvcNAQEFBQADggEBAFrXIhCy4T4eGrikb0R2wHv/uS548r3pZyBV0CDb\ncRwAtbnpJMvkGFqKVp4pmyoIDSVNK/j+sLEshB20XftezHZyRJbCUbtKvXQ6Fsxo\neZMlN0ITYKTaoBZKhUxxj90otAhNC58qwGUPqt2LewJhHyLucKkGJ1mQ3b5xKZ53\n2ToufouH9VLhig3H1KnxWo/zMD6Ke8cCk6qO9htuhI06s3GQGS1QWQtAmm17C6Tf\nKgDwQFZwhqHUUZnwKRH8gU6OgZsvhgV1B7H5mjZcu57KMiDBekU9MEY0DCVTN3Wk\nmcTII668zLsJrkNX6PEfck1AMBbVE6pEUKcWwq3uaLvlAUo=\n</ds:X509Certificate>\n        </ds:X509Data>\n      </ds:KeyInfo>\n    </KeyDescriptor>\n    <KeyDescriptor use=\"encryption\">\n      <ds:KeyInfo>\n        <ds:X509Data>\n          <ds:X509Certificate>MIIEDzCCAvegAwIBAgIJALr9HwgrQ7GeMA0GCSqGSIb3DQEBBQUAMGIxGDAWBgNV\nBAMTD2F1dGgwLmF1dGgwLmNvbTESMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQG\nEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDAeFw0x\nMjEyMjkxNTMwNDdaFw0xMzAxMjgxNTMwNDdaMGIxGDAWBgNVBAMTD2F1dGgwLmF1\ndGgwLmNvbTESMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQGEwJVUzETMBEGA1UE\nCBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDCCASIwDQYJKoZIhvcNAQEB\nBQADggEPADCCAQoCggEBAMZiVmNHiXLldrgbS50ONNOH7pJ2zg6OcSMkYZGDZJbO\nZ/TqwauC6JOnI7+xtkPJsQHZSFJs4U0srjZKzDCmaz2jLAJDShP2jaXlrki16nDL\nPE//IGAg3BJguSmBCWpDbSm92V9hSsE+Mhx6bDaJiw8yQ+Q8iSm0aTQZtp6O4ICM\nu00ESdh9NJqIECELvP31ADV1Xhj7IbyyVPDFxMv3ol5BySE9wwwOFUq/wv7Xz9LR\niUjUzPO+Lq3OM3o/uCDbk7jD7XrGUuOydALD8ULsXp4EuDO+nFbeXB/iKndZynuV\nKokirywl2nD2IP0/yncdLQZ8ByIyqP3G82fq/l8p7AsCAwEAAaOBxzCBxDAdBgNV\nHQ4EFgQUHI2rUXeBjTv1zAllaPGrHFcEK0YwgZQGA1UdIwSBjDCBiYAUHI2rUXeB\njTv1zAllaPGrHFcEK0ahZqRkMGIxGDAWBgNVBAMTD2F1dGgwLmF1dGgwLmNvbTES\nMBAGA1UEChMJQXV0aDAgTExDMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu\nZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZIIJALr9HwgrQ7GeMAwGA1UdEwQFMAMBAf8w\nDQYJKoZIhvcNAQEFBQADggEBAFrXIhCy4T4eGrikb0R2wHv/uS548r3pZyBV0CDb\ncRwAtbnpJMvkGFqKVp4pmyoIDSVNK/j+sLEshB20XftezHZyRJbCUbtKvXQ6Fsxo\neZMlN0ITYKTaoBZKhUxxj90otAhNC58qwGUPqt2LewJhHyLucKkGJ1mQ3b5xKZ53\n2ToufouH9VLhig3H1KnxWo/zMD6Ke8cCk6qO9htuhI06s3GQGS1QWQtAmm17C6Tf\nKgDwQFZwhqHUUZnwKRH8gU6OgZsvhgV1B7H5mjZcu57KMiDBekU9MEY0DCVTN3Wk\nmcTII668zLsJrkNX6PEfck1AMBbVE6pEUKcWwq3uaLvlAUo=\n</ds:X509Certificate>\n        </ds:X509Data>\n      </ds:KeyInfo>\n      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes256-cbc\"/>\n      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes128-cbc\"/>\n      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\"/>\n    </KeyDescriptor>\n    <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://anypoint.mulesoft.com/accounts/logout/receive-id\"/>\n    <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>\n    <AssertionConsumerService index=\"1\" isDefault=\"true\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://anypoint.mulesoft.com/accounts/login/receive-id\"/>\n  </SPSSODescriptor>\n</EntityDescriptor>\n"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{orgId}/provider/users/ldap/test": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "To test the ldap identity provider configuration before persisting",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/LDAPProviderTestOld"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/organizations/{orgId}/teams": {
      "description": "Teams are groups of users and/or other teams",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns all teams or search for teams or get a list of teams by ids",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "team name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"team_id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n      \"team_name\": \"IT\",\n      \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n      \"org_name\": \"Mythical Bank\",\n      \"team_type\": \"internal\",\n      \"ancestor_team_ids\": [\"6cad8143-5f3c-4258-8091-2e664819e7f3\"],\n      \"created_at\": \"2019-07-15T09:36:07.123Z\",\n      \"updated_at\": \"2019-07-15T09:36:07.123Z\"\n    }\n  ],\n  \"total\": 1\n}\n",
              "type": "teams.Team"
            }
          },
          {
            "sortable_3": {
              "field_1": "team_name",
              "field_2": "created_at",
              "field_3": "team_id",
              "default": "team_name"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "ancestor_team_id",
            "description": "team_id that must appear in the team's ancestor_team_ids.",
            "in": "query",
            "schema": {
              "description": "team_id that must appear in the team's ancestor_team_ids.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "parent_team_id",
            "description": "team_id of the immediate parent of the team to return.",
            "in": "query",
            "schema": {
              "description": "team_id of the immediate parent of the team to return.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_id",
            "description": "One or more ids of the team(s) to return. Type should be primitives.IdString but Osprey can't\nhandle custom types in query params\n",
            "in": "query",
            "schema": {
              "description": "One or more ids of the team(s) to return. Type should be primitives.IdString but Osprey can't\nhandle custom types in query params\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_type",
            "description": "One or more types of team(s) to return. Type should be teams.TeamType but Osprey can't\nhandle custom types in query params\n",
            "in": "query",
            "schema": {
              "description": "One or more types of team(s) to return. Type should be teams.TeamType but Osprey can't\nhandle custom types in query params\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {}
      },
      "post": {
        "description": "Creates a new team.",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "parent_team_id": "6cad8143-5f3c-4258-8091-2e664819e7f3",
                  "team_name": "New Team",
                  "team_type": "internal"
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/TeamCreate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "team_id": "f59632be-e43f-4c4f-a303-36b8b0623f29",
                    "team_name": "IT",
                    "org_id": "6cb9cf0c-de02-4403-ace9-1857c0d0425f",
                    "org_name": "Mythical Bank",
                    "team_type": "internal",
                    "ancestor_team_ids": [
                      "6cad8143-5f3c-4258-8091-2e664819e7f3"
                    ],
                    "created_at": "2019-07-15T09:36:07.123Z",
                    "updated_at": "2019-07-15T09:36:07.123Z"
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/Team"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "No team for the parent_team_id or the type of the parent_team_id is incompatible with this team's type."
          }
        }
      }
    },
    "/organizations/{orgId}/teams/{teamId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "teamId",
          "description": "id of the team",
          "required": true,
          "in": "path",
          "schema": {
            "description": "id of the team",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the team",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "team_id": "f59632be-e43f-4c4f-a303-36b8b0623f29",
                    "team_name": "IT",
                    "org_id": "6cb9cf0c-de02-4403-ace9-1857c0d0425f",
                    "org_name": "Mythical Bank",
                    "team_type": "internal",
                    "ancestor_team_ids": [
                      "6cad8143-5f3c-4258-8091-2e664819e7f3"
                    ],
                    "created_at": "2019-07-15T09:36:07.123Z",
                    "updated_at": "2019-07-15T09:36:07.123Z"
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/Team"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update or move the team",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "team_name": "New team name"
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/TeamUpdate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "team_id": "f59632be-e43f-4c4f-a303-36b8b0623f29",
                    "team_name": "IT",
                    "org_id": "6cb9cf0c-de02-4403-ace9-1857c0d0425f",
                    "org_name": "Mythical Bank",
                    "team_type": "internal",
                    "ancestor_team_ids": [
                      "6cad8143-5f3c-4258-8091-2e664819e7f3"
                    ],
                    "created_at": "2019-07-15T09:36:07.123Z",
                    "updated_at": "2019-07-15T09:36:07.123Z"
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/Team"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized to either update the properties on the team."
          },
          "409": {
            "description": "If changing the name and the new name is already used by other team in the organization.\nIf changing the type and the new type is incompatible with the parent's or a child's type.\n"
          }
        }
      },
      "delete": {
        "description": "Delete the team, including all child teams.",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Success."
          }
        }
      }
    },
    "/organizations/{orgId}/teams/{teamId}/parent": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "teamId",
          "description": "id of the team",
          "required": true,
          "in": "path",
          "schema": {
            "description": "id of the team",
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Move the team and its child teams under a new parent team",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "parent_team_id": "59a065cf-2d31-4488-9d67-d380a820166b"
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/TeamMove"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "team_id": "f59632be-e43f-4c4f-a303-36b8b0623f29",
                    "team_name": "IT",
                    "org_id": "6cb9cf0c-de02-4403-ace9-1857c0d0425f",
                    "org_name": "Mythical Bank",
                    "team_type": "internal",
                    "ancestor_team_ids": [
                      "6cad8143-5f3c-4258-8091-2e664819e7f3"
                    ],
                    "created_at": "2019-07-15T09:36:07.123Z",
                    "updated_at": "2019-07-15T09:36:07.123Z"
                  },
                  "type": "object",
                  "additionalProperties": false,
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/Team"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized to move the team or move the team under the new parent_team_id"
          },
          "409": {
            "description": "If no team exists for the parent_team_id or the type of the parent_team_id is incompatible with this team's type."
          }
        }
      }
    },
    "/organizations/{orgId}/teams/{teamId}/groupmappings": {
      "description": "group access mappings configure how memberships in external groups\nrelate to memberships in teams\n",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "teamId",
          "description": "id of the team",
          "required": true,
          "in": "path",
          "schema": {
            "description": "id of the team",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "get all group access mappings configured for the team",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "external group name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"membership_type\": \"member\",\n      \"external_group_name\": \"admin_members\",\n      \"provider_id\": \"2e50e859-0042-46ff-8cf8-1ad6f0c78b67\"\n    },\n    {\n      \"membership_type\": \"maintainer\",\n      \"external_group_name\": \"admin_maintainers\",\n      \"provider_id\": \"2e50e859-0042-46ff-8cf8-1ad6f0c78b67\"\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "teams.TeamExternalGroupMapping"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "membership_type?",
            "description": "Include the group access mappings that grant the provided membership type By default, all group access mappings are returned",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include the group access mappings that grant the provided membership type By default, all group access mappings are returned",
              "type": "array",
              "items": {
                "enum": [
                  "member",
                  "maintainer"
                ],
                "type": "string"
              }
            }
          }
        ],
        "x-amf-queryParameters": {
          "provider_id?": {
            "description": "Include the group access mappings that are mapped to the provided IdP By default, all group access mappings are returned",
            "required": false,
            "type": {
              "anyOf": [
                {
                  "$ref": "#/definitions/primitives.uuid"
                },
                {
                  "items": {
                    "$ref": "#/definitions/primitives.uuid"
                  }
                }
              ]
            }
          }
        },
        "responses": {}
      },
      "put": {
        "description": "Replace the entire list of group mappings associated with this team",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "membership_type": "member",
                    "external_group_name": "admin_members",
                    "provider_id": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67"
                  },
                  {
                    "membership_type": "maintainer",
                    "external_group_name": "admin_maintainers",
                    "provider_id": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67"
                  }
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/TeamExternalGroupMappingList"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "description": "bulk add mappings and/or modify mappings' membership_type to the team. Removing mappings is not supported by this method.",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "membership_type": "member",
                    "external_group_name": "admin_members",
                    "provider_id": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67"
                  },
                  {
                    "membership_type": "maintainer",
                    "external_group_name": "admin_maintainers",
                    "provider_id": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67"
                  }
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/TeamExternalGroupMappingList"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "description": "bulk remove mappings from the team",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "membership_type": "member",
                    "external_group_name": "admin_members",
                    "provider_id": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67"
                  },
                  {
                    "membership_type": "maintainer",
                    "external_group_name": "admin_maintainers",
                    "provider_id": "2e50e859-0042-46ff-8cf8-1ad6f0c78b67"
                  }
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/TeamExternalGroupMappingList"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success."
          }
        }
      }
    },
    "/organizations/{orgId}/teams/{teamId}/roles": {
      "description": "roles assigned to the team. All members of the team receive these access control grants.",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "teamId",
          "description": "id of the team",
          "required": true,
          "in": "path",
          "schema": {
            "description": "id of the team",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "get all role assignments or search for role assignments",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "role name"
            }
          },
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"role_id\": \"8b7caaba-e94a-11e4-b02c-1681e6b88ec1\",\n      \"name\": \"Read Servers\",\n      \"context_params\": {\n        \"org\": \"7f30ff47-5917-4a5a-b94d-9fe029edc04d\",\n        \"envId\": \"a4946d03-6da4-45e1-9bfb-5bfe029c7793\"\n      }\n    },\n    {\n      \"role_id\": \"53823f29-6e57-4c42-acdb-e42a881a888f\",\n      \"name\": \"Manage Servers\",\n      \"context_params\": {\n        \"org\": \"7f30ff47-5917-4a5a-b94d-9fe029edc04d\",\n        \"envId\": \"4c4efd56-9232-4f41-bb5c-4990539d519f\"\n      }\n    }\n  ],\n  \"total\": 2\n}\n",
              "type": "roles.RoleAssignmentDetailed"
            }
          },
          "offset-paginated",
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "role_id",
            "description": "return only role assignments containing one of the supplied role_ids",
            "required": false,
            "in": "query",
            "schema": {
              "description": "return only role assignments containing one of the supplied role_ids",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {}
      },
      "post": {
        "description": "bulk assign roles to the team",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "role_id": "d74ef94a-4292-4896-b860-b05bd7f90d6d",
                    "context_params": {
                      "org": "68ef9520-24e9-4cf2-b2f5-620025690913"
                    }
                  }
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/RoleAssignmentCollectionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid role_id or context_parameters."
          }
        }
      },
      "delete": {
        "description": "bulk unassign roles from the team",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "role_id": "d74ef94a-4292-4896-b860-b05bd7f90d6d",
                    "context_params": {
                      "org": "68ef9520-24e9-4cf2-b2f5-620025690913"
                    }
                  }
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/RoleAssignmentCollectionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid role_id or context_parameters."
          }
        }
      }
    },
    "/organizations/{orgId}/teams/{teamId}/members": {
      "description": "members of teams can be users or other teams",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "teamId",
          "description": "id of the team",
          "required": true,
          "in": "path",
          "schema": {
            "description": "id of the team",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "get all members or search for members of this team or get a list of members by ids",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "member name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"identity_type\": \"team\",\n      \"id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n      \"team_name\": \"IT\",\n      \"membership_type\": \"member\",\n      \"is_assigned_via_external_groups\": false,\n      \"created_at\": \"2019-07-15T09:36:07.123Z\",\n      \"updated_at\": \"2019-07-15T09:36:07.123Z\"\n    }\n  ],\n  \"total\": 1\n}\n",
              "type": "teams.TeamMember"
            }
          },
          {
            "sortable_2": {
              "field_1": "identity_type",
              "field_2": "name",
              "default": "identity_type"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "membership_type",
            "description": "Include the members of the team that have this membership_type.\nBy default, all types of members are returned.\n",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include the members of the team that have this membership_type.\nBy default, all types of members are returned.\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "identity_type",
            "description": "Include the members of the team that have this type.\nBy default, all types of members are returned.\n",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include the members of the team that have this type.\nBy default, all types of members are returned.\n",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "member_ids",
            "description": "Include the members of the team that have ids in this list",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Include the members of the team that have ids in this list",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "displayUserDetails",
            "description": "If true, include additional user fields. Only compatible with the user identity_type",
            "required": false,
            "in": "query",
            "schema": {
              "description": "If true, include additional user fields. Only compatible with the user identity_type",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {}
      },
      "patch": {
        "description": "bulk add users and/or modify users' membership_type to the team. Removing members is not supported by this method.",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "id": "6ee13e67-2924-4594-a807-9ea75203e27c",
                    "membership_type": "member"
                  },
                  {
                    "id": "3d29dbd3-94fd-4d55-a705-db98bb749a7c",
                    "membership_type": "maintainer"
                  }
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/TeamMemberBulkAdd"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Returned if any member id is for a team. Use the endpoints directly on the team to move it or delete it."
          }
        }
      },
      "delete": {
        "description": "bulk remove user members from the team",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  "fc1fc29a-b0e6-4883-aa8a-6797cbb7e3e4",
                  "2376aa85-02cf-4156-a1cf-345d7069d1d9"
                ],
                "type": "array",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/TeamMemberIdArray"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Returned if any member id is for a team. Use the endpoints directly on the team to move it or delete it."
          }
        }
      }
    },
    "/organizations/{orgId}/teams/{teamId}/members/{userId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "teamId",
          "description": "id of the team",
          "required": true,
          "in": "path",
          "schema": {
            "description": "id of the team",
            "type": "string"
          }
        },
        {
          "name": "userId",
          "description": "user id",
          "required": true,
          "in": "path",
          "schema": {
            "description": "user id",
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "add the user as a member of the team.",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "membership_type": "member"
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/TeamMemberAdd"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success."
          },
          "405": {
            "description": "Returned if the member id is for a team. Use the endpoints directly on the team to move it or delete it."
          }
        }
      },
      "delete": {
        "description": "remove the user from the team.",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "405": {
            "description": "Returned if the member id is for a team. Use the endpoints directly on the team to move it or delete it."
          }
        }
      }
    },
    "/organizations/{orgId}/users": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{orgId}/users/{userId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizations/{orgId}/users/{userId}/teams": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns a list of teams the user is a member of",
        "x-amf-is": [
          {
            "searchable": {
              "targetDesc": "team name"
            }
          },
          "offset-paginated",
          {
            "pagination-collection": {
              "example": "{\n  \"data\": [\n    {\n      \"team_id\": \"f59632be-e43f-4c4f-a303-36b8b0623f29\",\n      \"team_name\": \"IT\",\n      \"org_id\": \"6cb9cf0c-de02-4403-ace9-1857c0d0425f\",\n      \"org_name\": \"Mythical Bank\",\n      \"team_type\": \"internal\",\n      \"ancestor_team_ids\": [\"6cad8143-5f3c-4258-8091-2e664819e7f3\"],\n      \"created_at\": \"2019-07-15T09:36:07.123Z\",\n      \"updated_at\": \"2019-07-15T09:36:07.123Z\",\n      \"membership_type\": \"maintainer\",\n      \"is_assigned_via_external_groups\": false\n    }\n  ],\n  \"total\": 1\n}\n",
              "type": "teams.TeamIsMemberOf"
            }
          },
          {
            "sortable_3": {
              "field_1": "team_name",
              "field_2": "created_at",
              "field_3": "team_id",
              "default": "team_name"
            }
          },
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "ancestor_team_id",
            "description": "team_id that must appear in the team's ancestor_team_ids.",
            "in": "query",
            "schema": {
              "description": "team_id that must appear in the team's ancestor_team_ids.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "parent_team_id",
            "description": "team_id of the immediate parent of the team to return.",
            "in": "query",
            "schema": {
              "description": "team_id of the immediate parent of the team to return.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_type",
            "description": "return only teams that are of this type",
            "required": false,
            "in": "query",
            "schema": {
              "description": "return only teams that are of this type",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "membership_type",
            "description": "return only teams where the user is this type of member",
            "required": false,
            "in": "query",
            "schema": {
              "description": "return only teams where the user is this type of member",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/organizations/{orgId}/users/{userId}/identityProviders": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the list of IdP's associated with the user",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "provider_ids": [
                      "6a57bf06-9124-11e9-bc42-526af7764f64"
                    ]
                  }
                }
              }
            }
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      },
      "post": {
        "description": "Associate an IdP with the user.",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "link_with": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                },
                "type": "object",
                "additionalProperties": false,
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/AssociateIdentityProvider"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid data in body"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/users/{userId}/identityProviders/{identityProviderId}": {
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "identityProviderId",
          "description": "Identity Provider id",
          "required": true,
          "in": "path",
          "schema": {
            "description": "Identity Provider id",
            "type": "string"
          }
        }
      ],
      "delete": {
        "description": "Disassociate an IdP already associated with the user",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "405": {
            "description": "The organization is not a root organization"
          }
        }
      }
    },
    "/organizations/{orgId}/proxyusers/{userId}": {
      "description": "Creates a proxy user in an organization",
      "parameters": [
        {
          "name": "orgId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "userId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Creates a proxy user in an organization",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "4b353f44-6486-42ae-ae77-18b4032f9643",
                    "username": "7b633d56-de50-11e9-8a34-2a2ae2dbcce4:f0c9b011-980e-4928-9430-e60e3a97c043",
                    "firstName": "",
                    "lastName": "",
                    "email": "",
                    "enabled": true,
                    "deleted": false,
                    "idprovider_id": "mulesoft",
                    "type": "proxy",
                    "createdAt": "2019-09-24T00:36:58.000Z",
                    "updatedAt": "2019-09-24T00:36:58.000Z",
                    "organizationId": "f0c9b011-980e-4928-9430-e60e3a97c043"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2": {},
    "/v2/cs": {
      "description": "API specific to Core Services's UI.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
      "get": {
        "description": "Retrieves Anypoint product suite data & user/org/permission information about the caller.\nThis API may change/disappear at any time without prior notification; there are no backwards compatibility guarantees for format, function or existence across multiple releases.\n",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "null": {
                "schema": {
                  "example": {
                    "organizations": [
                      {
                        "name": "MuleSoft Inc",
                        "id": "f14c7707-bf2f-4402-addf-d475efba557c",
                        "createdAt": "2015-03-13T18:03:23.869Z",
                        "updatedAt": "2015-03-13T18:03:24.207Z",
                        "ownerId": "57e281b5-ec5b-4701-80a0-92a936a68da3",
                        "clientId": "23dd2e8a-01c0-44e2-84a0-3c0b39d0d541",
                        "domain": "mulesoft-inc",
                        "idprovider_id": "mulesoft",
                        "isFederated": false,
                        "parentOrganizationIds": [],
                        "subOrganizationIds": [
                          "61dd3d93-2859-416c-8547-55047c9ced72"
                        ],
                        "entitlements": {
                          "hybrid": {
                            "enabled": true
                          },
                          "hybridInsight": false,
                          "hybridAutoDiscoverProperties": true,
                          "createEnvironments": true,
                          "globalDeployment": true,
                          "createSubOrgs": true,
                          "vCoresProduction": {
                            "assigned": 1,
                            "reassigned": 0
                          },
                          "vCoresSandbox": {
                            "assigned": 1,
                            "reassigned": 0
                          },
                          "vCoresDesign": {
                            "assigned": 1,
                            "reassigned": 0
                          },
                          "staticIps": {
                            "assigned": 0,
                            "reassigned": 0
                          },
                          "vpcs": {
                            "assigned": 0,
                            "reassigned": 0
                          },
                          "vpns": {
                            "assigned": 0,
                            "reassigned": 0
                          },
                          "networkConnections": {
                            "assigned": 0,
                            "reassigned": 0
                          },
                          "workerLoggingOverride": {
                            "enabled": false
                          },
                          "messaging": {
                            "assigned": 0
                          },
                          "mqMessages": {
                            "base": 0,
                            "addOn": 0
                          },
                          "mqRequests": {
                            "base": 0,
                            "addOn": 0
                          },
                          "mqAdvancedFeatures": {
                            "enabled": false
                          },
                          "objectStoreRequestUnits": {
                            "base": 0,
                            "addOn": 0
                          },
                          "objectStoreKeys": {
                            "base": 0,
                            "addOn": 0
                          },
                          "gateways": {
                            "assigned": 0
                          },
                          "designCenter": {
                            "mozart": true,
                            "api": true,
                            "apiVisual": false,
                            "apiExample": false
                          },
                          "partnersProduction": {
                            "assigned": 0
                          },
                          "partnersSandbox": {
                            "assigned": 0
                          },
                          "tradingPartnersProduction": {
                            "assigned": 0
                          },
                          "tradingPartnersSandbox": {
                            "assigned": 0
                          },
                          "loadBalancer": {
                            "assigned": 1,
                            "reassigned": 0
                          },
                          "externalIdentity": true,
                          "autoscaling": false,
                          "armAlerts": false,
                          "apis": {
                            "enabled": true
                          },
                          "apiMonitoring": {
                            "schedules": 0
                          },
                          "apiCommunityManager": {
                            "enabled": false
                          },
                          "apiCatalog": {
                            "enabled": false
                          },
                          "monitoringCenter": {
                            "productSKU": 0,
                            "rawStorageOverrideGB": 0,
                            "dataRegion": "us-east-1",
                            "productionUnits": 0,
                            "preProductionUnits": 0,
                            "storageBase": 0,
                            "storageAddOn": 0
                          },
                          "apiQuery": {
                            "enabled": false,
                            "productSKU": 1
                          },
                          "apiQueryC360": {
                            "enabled": false
                          },
                          "angGovernance": {
                            "level": -1
                          },
                          "apiGovernance": {
                            "enabled": true,
                            "apisPerMonth": 0
                          },
                          "crowd": {
                            "hideApiManagerDesigner": false,
                            "hideFormerApiPlatform": false,
                            "environments": false
                          },
                          "cam": {
                            "enabled": false
                          },
                          "exchange2": {
                            "enabled": false
                          },
                          "crowdSelfServiceMigration": {
                            "enabled": false
                          },
                          "kpiDashboard": {
                            "enabled": false
                          },
                          "pcf": false,
                          "appViz": false,
                          "workerClouds": {
                            "assigned": 0,
                            "reassigned": 0
                          },
                          "runtimeFabric": false,
                          "runtimeFabricCloud": {
                            "enabled": false
                          },
                          "serviceMesh": {
                            "enabled": false
                          },
                          "flexGateway": {
                            "enabled": false
                          },
                          "composer": {
                            "enabled": false,
                            "tasksPerMonth": 100,
                            "maxConnectors": 3,
                            "unlimitedConnectors": false
                          },
                          "muleDxWebIde": {
                            "enabled": false
                          }
                        },
                        "tenantOrganizationIds": [],
                        "isMaster": true,
                        "sessionTimeout": 60,
                        "properties": {},
                        "subscription": {
                          "category": "Developer",
                          "type": "Free",
                          "expiration": "2014-07-27T20:56:02.125Z"
                        }
                      },
                      {
                        "name": "MuleSoft Inc Sub Org",
                        "id": "61dd3d93-2859-416c-8547-55047c9ced72",
                        "createdAt": "2015-03-13T18:03:23.869Z",
                        "updatedAt": "2015-03-13T18:03:24.207Z",
                        "ownerId": "57e281b5-ec5b-4701-80a0-92a936a68da3",
                        "clientId": "b63237d9c5d444ea95147065e0711161",
                        "domain": "mulesoft-inc",
                        "idprovider_id": "mulesoft",
                        "isFederated": false,
                        "parentOrganizationIds": [
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "subOrganizationIds": [],
                        "entitlements": {
                          "hybrid": {
                            "enabled": true
                          },
                          "hybridInsight": false,
                          "hybridAutoDiscoverProperties": true,
                          "createEnvironments": true,
                          "globalDeployment": true,
                          "createSubOrgs": true,
                          "vCoresProduction": {
                            "assigned": 1,
                            "reassigned": 0
                          },
                          "vCoresSandbox": {
                            "assigned": 1,
                            "reassigned": 0
                          },
                          "vCoresDesign": {
                            "assigned": 1,
                            "reassigned": 0
                          },
                          "staticIps": {
                            "assigned": 0,
                            "reassigned": 0
                          },
                          "vpcs": {
                            "assigned": 0,
                            "reassigned": 0
                          },
                          "vpns": {
                            "assigned": 0,
                            "reassigned": 0
                          },
                          "workerLoggingOverride": {
                            "enabled": false
                          },
                          "messaging": {
                            "assigned": 0
                          },
                          "mqMessages": {
                            "base": 0,
                            "addOn": 0
                          },
                          "mqRequests": {
                            "base": 0,
                            "addOn": 0
                          },
                          "mqAdvancedFeatures": {
                            "enabled": false
                          },
                          "objectStoreRequestUnits": {
                            "base": 0,
                            "addOn": 0
                          },
                          "objectStoreKeys": {
                            "base": 0,
                            "addOn": 0
                          },
                          "gateways": {
                            "assigned": 0
                          },
                          "designCenter": {
                            "mozart": true,
                            "api": true,
                            "apiVisual": false,
                            "apiExample": false
                          },
                          "partnersProduction": {
                            "assigned": 0
                          },
                          "partnersSandbox": {
                            "assigned": 0
                          },
                          "tradingPartnersProduction": {
                            "assigned": 0
                          },
                          "tradingPartnersSandbox": {
                            "assigned": 0
                          },
                          "loadBalancer": {
                            "assigned": 1,
                            "reassigned": 0
                          },
                          "externalIdentity": true,
                          "autoscaling": false,
                          "armAlerts": false,
                          "apis": {
                            "enabled": true
                          },
                          "apiCatalog": {
                            "enabled": false
                          },
                          "apiMonitoring": {
                            "schedules": 0
                          },
                          "apiCommunityManager": {
                            "enabled": false
                          },
                          "monitoringCenter": {
                            "productSKU": 0,
                            "rawStorageOverrideGB": 0,
                            "dataRegion": "us-east-1",
                            "productionUnits": 0,
                            "preProductionUnits": 0,
                            "storageBase": 0,
                            "storageAddOn": 0
                          },
                          "apiQuery": {
                            "enabled": false,
                            "productSKU": 1
                          },
                          "apiQueryC360": {
                            "enabled": false
                          },
                          "angGovernance": {
                            "level": -1
                          },
                          "apiGovernance": {
                            "enabled": true,
                            "apisPerMonth": 0
                          },
                          "crowd": {
                            "hideApiManagerDesigner": false,
                            "hideFormerApiPlatform": false,
                            "environments": false
                          },
                          "cam": {
                            "enabled": false
                          },
                          "exchange2": {
                            "enabled": false
                          },
                          "crowdSelfServiceMigration": {
                            "enabled": false
                          },
                          "kpiDashboard": {
                            "enabled": false
                          },
                          "pcf": false,
                          "appViz": false,
                          "workerClouds": {
                            "assigned": 0,
                            "reassigned": 0
                          },
                          "runtimeFabric": false,
                          "runtimeFabricCloud": {
                            "enabled": false
                          },
                          "serviceMesh": {
                            "enabled": false
                          },
                          "flexGateway": {
                            "enabled": false
                          },
                          "composer": {
                            "enabled": false,
                            "tasksPerMonth": 100,
                            "maxConnectors": 3,
                            "unlimitedConnectors": false
                          },
                          "muleDxWebIde": {
                            "enabled": false
                          }
                        },
                        "tenantOrganizationIds": [],
                        "isMaster": false
                      }
                    ],
                    "permissions": {
                      "profile": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "edit": [
                          "61dd3d93-2859-416c-8547-55047c9ced72"
                        ]
                      },
                      "resetPassword": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "defaultRegion": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "organization": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "edit": [
                          "61dd3d93-2859-416c-8547-55047c9ced72"
                        ],
                        "delete": []
                      },
                      "subOrganizations": {
                        "create": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "delete": [
                          "61dd3d93-2859-416c-8547-55047c9ced72"
                        ]
                      },
                      "invites": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "create": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "users": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "create": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "edit": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "roles": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "create": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "edit": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "clientSecret": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "identityManagement": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "environments": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "create": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "edit": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "delete": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "teams": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "auditLog": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "exchange": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "cloudhubSettings": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "edit": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "cloudhubEnvironments": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "designEnvironments": {
                        "enabled": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "proxy_user": {
                        "enabled": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "entitlements": {
                        "createEnvironments": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "createSubOrgs": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "hybrid": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "hybridInsight": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "hybridAutoDiscoverProperties": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "loadBalancer": {
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "vCoresProduction": {
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "vCoresSandbox": {
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "vCoresDesign": {
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "staticIps": {
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "vpcs": {
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "vpns": {
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "globalDeployment": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "workerLoggingOverride": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [],
                          "edit": []
                        },
                        "designCenter": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [],
                          "edit": []
                        },
                        "apiMonitoring": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [],
                          "edit": []
                        },
                        "monitoringCenter": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [],
                          "edit": []
                        },
                        "apiQuery": {
                          "enabled": [],
                          "view": [],
                          "edit": []
                        },
                        "apiQueryC360": {
                          "enabled": [],
                          "view": [],
                          "edit": []
                        },
                        "angGovernance": {
                          "enabled": [],
                          "view": [],
                          "edit": []
                        },
                        "apiGovernance": {
                          "enabled": [],
                          "view": [],
                          "edit": []
                        },
                        "partnersProduction": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "partnersSandbox": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "tradingPartnersProduction": {
                          "enabled": [],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "tradingPartnersSandbox": {
                          "enabled": [],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "messaging": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "mqMessages": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "mqRequests": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "mqAdvancedFeatures": {
                          "enabled": [],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "objectStoreRequestUnits": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "objectStoreKeys": {
                          "enabled": [],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "kpiDashboard": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "pcf": {
                          "enabled": [],
                          "view": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ],
                          "edit": []
                        },
                        "externalIdentity": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ]
                        },
                        "cam": {
                          "enabled": []
                        },
                        "apiCommunityManager": {
                          "enabled": []
                        },
                        "apiCatalog": {
                          "enabled": []
                        },
                        "serviceMesh": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ]
                        },
                        "flexGateway": {
                          "enabled": [
                            "61dd3d93-2859-416c-8547-55047c9ced72",
                            "f14c7707-bf2f-4402-addf-d475efba557c"
                          ]
                        },
                        "composer": {
                          "enabled": []
                        },
                        "muleDxWebIde": {
                          "enabled": []
                        }
                      },
                      "ang_governance": {
                        "view": []
                      },
                      "api_query": {
                        "view": []
                      },
                      "api_manager": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "api_platform": {
                        "view": []
                      },
                      "app_viz": {
                        "enabled": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ],
                        "edit": [],
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "cloudhub": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "access_manager": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "admin": {
                        "view": []
                      },
                      "onboarding": {
                        "enabled": []
                      },
                      "support": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "general": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "openid": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "design_center": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "dgw": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "dias-admin-console": {
                        "view": []
                      },
                      "exchange2": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "kpi_dashboard": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "messaging": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "api_monitoring": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "monitoring_center": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "partner_manager": {
                        "view": []
                      },
                      "partners": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "secrets_manager": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "security_fabric_edge": {
                        "view": []
                      },
                      "store": {
                        "view": [
                          "61dd3d93-2859-416c-8547-55047c9ced72",
                          "f14c7707-bf2f-4402-addf-d475efba557c"
                        ]
                      },
                      "tokenization": {
                        "view": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations": {
      "description": "Organizations"
    },
    "/v2/organizations/{orgId}": {
      "description": "A single organization",
      "parameters": [
        {
          "name": "orgId",
          "description": "The id of the organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the organization",
            "type": "string"
          }
        }
      ],
      "get": {
        "x-amf-is": [
          "rate-limited"
        ],
        "x-amf-queryParameters": {
          "include?": {
            "description": "attributes to include as part of response",
            "type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "null": {
                "schema": {
                  "type": "object",
                  "x-amf-merge": [
                    {
                      "$ref": "#/components/schemas/Organization"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "force",
            "description": "If true, safety validations should be ignored",
            "in": "query",
            "schema": {
              "description": "If true, safety validations should be ignored",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/v2/organizations/{orgId}/entitlements": {
      "parameters": [
        {
          "name": "orgId",
          "description": "The id of the organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the organization",
            "type": "string"
          }
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Return entitlements for this organization",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "hybrid": {
                      "enabled": true
                    },
                    "createEnvironments": true,
                    "globalDeployment": true,
                    "createSubOrgs": true,
                    "vCoresProduction": {
                      "assigned": 1,
                      "reassigned": 0
                    },
                    "vCoresSandbox": {
                      "assigned": 1,
                      "reassigned": 0
                    },
                    "vCoresDesign": {
                      "assigned": 1,
                      "reassigned": 0
                    },
                    "staticIps": {
                      "assigned": 1,
                      "reassigned": 0
                    },
                    "vpcs": {
                      "assigned": 0,
                      "reassigned": 0
                    },
                    "vpns": {
                      "assigned": 0,
                      "reassigned": 0
                    },
                    "networkConnections": {
                      "assigned": 0,
                      "reassigned": 0
                    },
                    "workerLoggingOverride": {
                      "enabled": false
                    },
                    "messaging": {
                      "assigned": 0
                    },
                    "mqMessages": {
                      "base": 0,
                      "addOn": 0
                    },
                    "mqRequests": {
                      "base": 0,
                      "addOn": 0
                    },
                    "mqAdvancedFeatures": {
                      "enabled": false
                    },
                    "objectStoreRequestUnits": {
                      "base": 0,
                      "addOn": 0
                    },
                    "objectStoreKeys": {
                      "base": 0,
                      "addOn": 0
                    },
                    "gateways": {
                      "assigned": 0
                    },
                    "designCenter": {
                      "mozart": true,
                      "api": true,
                      "apiVisual": false,
                      "apiExample": false
                    },
                    "partnersProduction": {
                      "assigned": 0
                    },
                    "partnersSandbox": {
                      "assigned": 0
                    },
                    "tradingPartnersProduction": {
                      "assigned": 0
                    },
                    "tradingPartnersSandbox": {
                      "assigned": 0
                    },
                    "loadBalancer": {
                      "assigned": 0,
                      "reassigned": 0
                    },
                    "externalIdentity": true,
                    "autoscaling": false,
                    "armAlerts": false,
                    "hybridInsight": true,
                    "hybridAutoDiscoverProperties": true,
                    "apis": {
                      "enabled": true
                    },
                    "apiCatalog": {
                      "enabled": false
                    },
                    "apiMonitoring": {
                      "schedules": 0
                    },
                    "apiCommunityManager": {
                      "enabled": false
                    },
                    "monitoringCenter": {
                      "productSKU": 0,
                      "rawStorageOverrideGB": 0,
                      "dataRegion": "us-east-1",
                      "productionUnits": 0,
                      "preProductionUnits": 0,
                      "storageBase": 0,
                      "storageAddOn": 0
                    },
                    "apiQuery": {
                      "enabled": false,
                      "productSKU": 1
                    },
                    "apiQueryC360": {
                      "enabled": false
                    },
                    "angGovernance": {
                      "level": -1
                    },
                    "apiGovernance": {
                      "enabled": true,
                      "apisPerMonth": 0
                    },
                    "crowd": {
                      "hideApiManagerDesigner": false,
                      "hideFormerApiPlatform": false,
                      "environments": false
                    },
                    "cam": {
                      "enabled": false
                    },
                    "exchange2": {
                      "enabled": false
                    },
                    "crowdSelfServiceMigration": {
                      "enabled": false
                    },
                    "kpiDashboard": {
                      "enabled": false
                    },
                    "pcf": false,
                    "appViz": false,
                    "workerClouds": {
                      "assigned": 0,
                      "reassigned": 0
                    },
                    "runtimeFabric": false,
                    "serviceMesh": {
                      "enabled": false
                    },
                    "flexGateway": {
                      "enabled": false
                    },
                    "runtimeFabricCloud": {
                      "enabled": false
                    },
                    "composer": {
                      "enabled": false,
                      "tasksPerMonth": 100,
                      "maxConnectors": 3,
                      "unlimitedConnectors": false
                    },
                    "muleDxWebIde": {
                      "enabled": false
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Sets one or more values for entitlements",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "hybrid": {
                    "enabled": true
                  },
                  "createEnvironments": true,
                  "globalDeployment": true,
                  "createSubOrgs": true,
                  "vCoresProduction": {
                    "assigned": 1,
                    "reassigned": 0
                  },
                  "vCoresSandbox": {
                    "assigned": 1,
                    "reassigned": 0
                  },
                  "vCoresDesign": {
                    "assigned": 1,
                    "reassigned": 0
                  },
                  "staticIps": {
                    "assigned": 1,
                    "reassigned": 0
                  },
                  "vpcs": {
                    "assigned": 0,
                    "reassigned": 0
                  },
                  "vpns": {
                    "assigned": 0,
                    "reassigned": 0
                  },
                  "networkConnections": {
                    "assigned": 0,
                    "reassigned": 0
                  },
                  "workerLoggingOverride": {
                    "enabled": false
                  },
                  "messaging": {
                    "assigned": 0
                  },
                  "mqMessages": {
                    "base": 0,
                    "addOn": 0
                  },
                  "mqRequests": {
                    "base": 0,
                    "addOn": 0
                  },
                  "mqAdvancedFeatures": {
                    "enabled": false
                  },
                  "objectStoreRequestUnits": {
                    "base": 0,
                    "addOn": 0
                  },
                  "objectStoreKeys": {
                    "base": 0,
                    "addOn": 0
                  },
                  "gateways": {
                    "assigned": 0
                  },
                  "designCenter": {
                    "mozart": true,
                    "api": true,
                    "apiVisual": false,
                    "apiExample": false
                  },
                  "partnersProduction": {
                    "assigned": 0
                  },
                  "partnersSandbox": {
                    "assigned": 0
                  },
                  "tradingPartnersProduction": {
                    "assigned": 0
                  },
                  "tradingPartnersSandbox": {
                    "assigned": 0
                  },
                  "loadBalancer": {
                    "assigned": 0,
                    "reassigned": 0
                  },
                  "externalIdentity": true,
                  "autoscaling": false,
                  "armAlerts": false,
                  "hybridInsight": true,
                  "hybridAutoDiscoverProperties": true,
                  "apis": {
                    "enabled": true
                  },
                  "apiCatalog": {
                    "enabled": false
                  },
                  "apiMonitoring": {
                    "schedules": 0
                  },
                  "apiCommunityManager": {
                    "enabled": false
                  },
                  "monitoringCenter": {
                    "productSKU": 0,
                    "rawStorageOverrideGB": 0,
                    "dataRegion": "us-east-1",
                    "productionUnits": 0,
                    "preProductionUnits": 0,
                    "storageBase": 0,
                    "storageAddOn": 0
                  },
                  "apiQuery": {
                    "enabled": false,
                    "productSKU": 1
                  },
                  "apiQueryC360": {
                    "enabled": false
                  },
                  "angGovernance": {
                    "level": -1
                  },
                  "apiGovernance": {
                    "enabled": true,
                    "apisPerMonth": 0
                  },
                  "crowd": {
                    "hideApiManagerDesigner": false,
                    "hideFormerApiPlatform": false,
                    "environments": false
                  },
                  "cam": {
                    "enabled": false
                  },
                  "exchange2": {
                    "enabled": false
                  },
                  "crowdSelfServiceMigration": {
                    "enabled": false
                  },
                  "kpiDashboard": {
                    "enabled": false
                  },
                  "pcf": false,
                  "appViz": false,
                  "workerClouds": {
                    "assigned": 0,
                    "reassigned": 0
                  },
                  "runtimeFabric": false,
                  "serviceMesh": {
                    "enabled": false
                  },
                  "flexGateway": {
                    "enabled": false
                  },
                  "runtimeFabricCloud": {
                    "enabled": false
                  },
                  "composer": {
                    "enabled": false,
                    "tasksPerMonth": 100,
                    "maxConnectors": 3,
                    "unlimitedConnectors": false
                  },
                  "muleDxWebIde": {
                    "enabled": false
                  }
                },
                "type": "object",
                "x-amf-merge": [
                  {
                    "$ref": "#/components/schemas/Entitlements"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entitlement has been modified",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "hybrid": {
                      "enabled": true
                    },
                    "createEnvironments": true,
                    "globalDeployment": true,
                    "createSubOrgs": true,
                    "vCoresProduction": {
                      "assigned": 1,
                      "reassigned": 0
                    },
                    "vCoresSandbox": {
                      "assigned": 1,
                      "reassigned": 0
                    },
                    "vCoresDesign": {
                      "assigned": 1,
                      "reassigned": 0
                    },
                    "staticIps": {
                      "assigned": 1,
                      "reassigned": 0
                    },
                    "vpcs": {
                      "assigned": 0,
                      "reassigned": 0
                    },
                    "vpns": {
                      "assigned": 0,
                      "reassigned": 0
                    },
                    "networkConnections": {
                      "assigned": 0,
                      "reassigned": 0
                    },
                    "workerLoggingOverride": {
                      "enabled": false
                    },
                    "messaging": {
                      "assigned": 0
                    },
                    "mqMessages": {
                      "base": 0,
                      "addOn": 0
                    },
                    "mqRequests": {
                      "base": 0,
                      "addOn": 0
                    },
                    "mqAdvancedFeatures": {
                      "enabled": false
                    },
                    "objectStoreRequestUnits": {
                      "base": 0,
                      "addOn": 0
                    },
                    "objectStoreKeys": {
                      "base": 0,
                      "addOn": 0
                    },
                    "gateways": {
                      "assigned": 0
                    },
                    "designCenter": {
                      "mozart": true,
                      "api": true,
                      "apiVisual": false,
                      "apiExample": false
                    },
                    "partnersProduction": {
                      "assigned": 0
                    },
                    "partnersSandbox": {
                      "assigned": 0
                    },
                    "tradingPartnersProduction": {
                      "assigned": 0
                    },
                    "tradingPartnersSandbox": {
                      "assigned": 0
                    },
                    "loadBalancer": {
                      "assigned": 0,
                      "reassigned": 0
                    },
                    "externalIdentity": true,
                    "autoscaling": false,
                    "armAlerts": false,
                    "hybridInsight": true,
                    "hybridAutoDiscoverProperties": true,
                    "apis": {
                      "enabled": true
                    },
                    "apiCatalog": {
                      "enabled": false
                    },
                    "apiMonitoring": {
                      "schedules": 0
                    },
                    "apiCommunityManager": {
                      "enabled": false
                    },
                    "monitoringCenter": {
                      "productSKU": 0,
                      "rawStorageOverrideGB": 0,
                      "dataRegion": "us-east-1",
                      "productionUnits": 0,
                      "preProductionUnits": 0,
                      "storageBase": 0,
                      "storageAddOn": 0
                    },
                    "apiQuery": {
                      "enabled": false,
                      "productSKU": 1
                    },
                    "apiQueryC360": {
                      "enabled": false
                    },
                    "angGovernance": {
                      "level": -1
                    },
                    "apiGovernance": {
                      "enabled": true,
                      "apisPerMonth": 0
                    },
                    "crowd": {
                      "hideApiManagerDesigner": false,
                      "hideFormerApiPlatform": false,
                      "environments": false
                    },
                    "cam": {
                      "enabled": false
                    },
                    "exchange2": {
                      "enabled": false
                    },
                    "crowdSelfServiceMigration": {
                      "enabled": false
                    },
                    "kpiDashboard": {
                      "enabled": false
                    },
                    "pcf": false,
                    "appViz": false,
                    "workerClouds": {
                      "assigned": 0,
                      "reassigned": 0
                    },
                    "runtimeFabric": false,
                    "serviceMesh": {
                      "enabled": false
                    },
                    "flexGateway": {
                      "enabled": false
                    },
                    "runtimeFabricCloud": {
                      "enabled": false
                    },
                    "composer": {
                      "enabled": false,
                      "tasksPerMonth": 100,
                      "maxConnectors": 3,
                      "unlimitedConnectors": false
                    },
                    "muleDxWebIde": {
                      "enabled": false
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Resource does not exist"
          }
        }
      }
    },
    "/v2/organizations/{orgId}/entitlements/{entitlementName}": {
      "parameters": [
        {
          "name": "orgId",
          "description": "The id of the organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the organization",
            "type": "string"
          }
        },
        {
          "name": "entitlementName",
          "description": "The name of the entitlement",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The name of the entitlement",
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Returns the name and value of the specified entitlement",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "Returns entitlement",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "createEnvironments": true
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Resource does not exists"
          }
        }
      }
    },
    "/v2/organizations/{orgId}/environments": {
      "parameters": [
        {
          "name": "orgId",
          "description": "The id of the organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the organization",
            "type": "string"
          }
        }
      ]
    },
    "/v2/organizations/{orgId}/environments/{environmentId}": {
      "parameters": [
        {
          "name": "orgId",
          "description": "The id of the organization",
          "required": true,
          "in": "path",
          "schema": {
            "description": "The id of the organization",
            "type": "string"
          }
        },
        {
          "name": "environmentId",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "description": "Delete an environment",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "204": {
            "description": "Successful. Returns zero length body"
          }
        }
      }
    },
    "/v2/oauth2": {},
    "/v2/oauth2/authorize": {
      "get": {
        "description": "Starts an OAuth2 authorization flow; allows the logged-in user to authorize 3rd-party access to their data",
        "x-amf-is": [
          "rate-limited"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "The ID of the application attempting to be authorized",
            "required": false,
            "in": "query",
            "schema": {
              "description": "The ID of the application attempting to be authorized",
              "example": "3f7eb03b-1e53-4dd7-8304-c7f52cef183d",
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "Space-delimited list of scopes the client is requesting",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Space-delimited list of scopes the client is requesting",
              "example": "openid api:admin",
              "type": "string"
            }
          },
          {
            "name": "state",
            "description": "a parameter with a string that will be supplied in a redirect back to the application upon success",
            "required": false,
            "in": "query",
            "schema": {
              "description": "a parameter with a string that will be supplied in a redirect back to the application upon success",
              "type": "string"
            }
          },
          {
            "name": "redirect_uri",
            "description": "Redirect uri for the application's authorization callback",
            "required": false,
            "in": "query",
            "schema": {
              "description": "Redirect uri for the application's authorization callback",
              "type": "string"
            }
          },
          {
            "name": "response_type",
            "description": "describes the type of object that the application wishes to receive upon success",
            "required": false,
            "in": "query",
            "schema": {
              "description": "describes the type of object that the application wishes to receive upon success",
              "type": "string"
            }
          },
          {
            "name": "nonce",
            "description": "value used to mitigate replay attacks",
            "required": false,
            "in": "query",
            "schema": {
              "description": "value used to mitigate replay attacks",
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Redirects the user agent to the application's callback URI if the application is already authorized\nRedirects the user agent to the consent screen otherwise\n"
          },
          "400": {
            "description": "Bad request; an invalid redirect_uri, response_type or client_id"
          }
        }
      },
      "post": {
        "description": "Starts an OAuth2 authorization flow; allows the logged-in user to authorize 3rd-party access to their data",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "description": "The ID of the application attempting to be authorized",
                    "example": "3f7eb03b-1e53-4dd7-8304-c7f52cef183d",
                    "type": "string"
                  },
                  "scope": {
                    "description": "Space-delimited list of scopes the client is requesting",
                    "example": "openid api:admin",
                    "type": "string"
                  },
                  "state": {
                    "description": "a parameter with a string that will be supplied in a redirect back to the application upon success",
                    "type": "string"
                  },
                  "redirect_uri": {
                    "description": "Redirect uri for the application's authorization callback",
                    "type": "string"
                  },
                  "response_type": {
                    "description": "describes the type of object that the application wishes to receive upon success",
                    "type": "string"
                  },
                  "nonce": {
                    "description": "value used to mitigate replay attacks",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "Redirects the user to the application's callback URI if the application is already authorized\nRedirects the user to the consent screen otherwise\n"
          },
          "400": {
            "description": "Bad request; an invalid redirect_uri, response_type or client_id"
          }
        }
      }
    },
    "/v2/oauth2/decision": {
      "post": {
        "description": "Confirms whether a user grants consent to a 3rd-party application",
        "responses": {
          "302": {
            "description": "Redirects the user to the application's callback URI\n"
          }
        }
      }
    },
    "/v2/oauth2/token": {
      "post": {
        "description": "Allows 3rd-party applications to receive tokens via a variety of supported grant types",
        "responses": {}
      }
    },
    "/v2/oauth2/keys": {
      "get": {
        "description": "Public JWK Set used to sign OpenID Connect id_tokens",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "A JWK Set containing one or more JWK-formatted keys.\nFor more information about the JWK format, see RFC-7517\nFor more information about the use of JWKs in OpenID Connect, see the OpenID Connect Core 1.0 spec\n"
          }
        }
      }
    },
    "/v2/oauth2/.well-known/openid-configuration": {
      "get": {
        "description": "OpenID Connect Discovery Configuration",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "The service's OpenID Provider Configuration Information metadata document.\nFor more information about the contents and use of the document, see the OpenID Connect Discovery 1.0 spec\n"
          }
        }
      }
    },
    "/v2/oauth2/userinfo": {
      "get": {
        "description": "OpenID Connect Userinfo endpoint.",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "A set of claims about the authenticated End-User.\nFor more information about the use of the userinfo endpoint in OpenID Connect, see the OpenID Connect Core 1.0 spec\n"
          }
        }
      },
      "post": {
        "description": "OpenID Connect Userinfo endpoint.",
        "x-amf-is": [
          "rate-limited"
        ],
        "responses": {
          "200": {
            "description": "A set of claims about the authenticated End-User.\nFor more information about the use of the userinfo endpoint in OpenID Connect, see the OpenID Connect Core 1.0 spec\n"
          }
        }
      }
    },
    "/v2/oauth2/introspect": {
      "post": {
        "description": "Introspect an access token or refresh token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "description": "The token to introspect",
                    "type": "string"
                  },
                  "token_type_hint": {
                    "description": "A hint about the type of the token submitted for introspection",
                    "default": "access_token",
                    "enum": [
                      "access_token",
                      "refresh_token"
                    ],
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {},
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/v2/oauth2/revoke": {
      "post": {
        "description": "Revoke an access token or a refresh token",
        "x-amf-is": [
          "rate-limited"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "description": "The token to revoke",
                    "type": "string"
                  },
                  "token_type_hint": {
                    "description": "A hint about the type of the token submitted for revocation",
                    "default": "access_token",
                    "enum": [
                      "access_token",
                      "refresh_token"
                    ],
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token was revoked successfully"
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth_2_0_raml_1_0": []
    }
  ],
  "components": {
    "schemas": {
      "Organization": {
        "type": "object"
      },
      "Entitlements": {
        "type": "object"
      }
    },
    "x-amf-traits": {
      "sortable": {
        "$ref": "traits/sortable.raml"
      },
      "sortable_2": {
        "$ref": "traits/arity/sortable_2.raml"
      },
      "rate-limited": {
        "$ref": "traits/rate-limited.raml"
      },
      "searchable": {
        "$ref": "traits/searchable.raml"
      },
      "offset-paginated": {
        "$ref": "traits/offset-paginated.raml"
      },
      "sortable_3": {
        "$ref": "traits/arity/sortable_3.raml"
      },
      "pagination-collection": {
        "$ref": "traits/pagination-collection.raml"
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "basic",
        "description": "This endpoint supports Basic Authentication."
      }
    },
    "x-amf-securitySchemes": {
      "oauth_2_0_raml_1_0": {
        "$ref": "oauth_2_0_raml_1_0.raml"
      }
    }
  },
  "x-amf-uses": {
    "authorizeOnBehalf": "types/authorized-resources-on-behalf.raml",
    "externalAccess": "types/externalAccess.raml",
    "users": "types/users.raml",
    "clients": "types/clients.raml",
    "identityProviders": "types/external-identity-provider.raml",
    "invites": "types/invites.raml",
    "clientProviders": "types/external-client-provider.raml",
    "validateOrganizationSettingsForClient": "types/validate-organization-settings-for-client.raml",
    "teams": "types/teams.raml",
    "identities": "types/identities.raml",
    "roles": "types/roles.raml",
    "connectedApplications": "types/connectedApplications.raml",
    "authorization": "types/authorizations.raml",
    "hubSpokeRelations": "types/hubSpokeRelations.raml",
    "primitives": "types/primitives.raml",
    "teamsExperienceApi": "types/teams-experience-api.raml",
    "authorize": "types/authorize.raml",
    "refreshTokens": "types/refresh-tokens.raml"
  }
}
